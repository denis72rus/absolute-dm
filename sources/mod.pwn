#include <a_samp>
#include <a_http>

#include "config"

//lib
//#include "lib/crashdetect"
#include "lib/YSF"
#include "lib/a_mail"
#include "lib/a_mysql"
#include "lib/easy-mysql"
#include "lib/sscanf2"
#include "lib/streamer"
#include "lib/Pawn.CMD"
#include "lib/DLDiag"
#include "lib/mxINI"
#include "lib/crp"
#include "lib/time_t"
#include "lib/u_dlg"
//#include "lib/dialogs2"
//core
//#include "core/anticheat"
#include "core/color"
#include "core/animlist"
#include "core/fix"
#include "core/functions"
#include "core/mysql_connect"
#include "core/log"
#include "core/geoip"
#include "core/news"//NewsInfo

#pragma dynamic             12000

#define VIP_NOT_FOREVER 1
#define VIP_FOREVER     2

#define MAX_DM          2
#define MAX_DM_MAP      2
#define MAX_DM_SPAWN    20
#define MAX_PLAYERS_DM  20
#define MAX_WEAP_DM     3

#define DEATHMATCH_DROPGUN 0

main()
{
}

#if !defined gpci
native gpci(playerid, buffer[], size = sizeof(buffer));
#endif

static
	weatherid,
	weathertime,
	weatherarray[] =
	{
		2,//0
		3,//1
		4,//2
		5,//3
		6,//4
		7,//5
		8,//6
		9,//7
		10,//8
		12,//9
		13,//10
		14,//11
		15,//12
		16,//13
		17,//14
		20 //15
	};


new DropType[MAX_PICKUPS];
new DropWeapon[MAX_PICKUPS];
new DropAmmo[MAX_PICKUPS];
new DestroyDropTimer[MAX_PICKUPS];

#define MAX_VEHICLE_COMPONENTS 14

enum pInfo
{
	//Сохраняется
    ID,
	Name[32],
    Password[MAX_PLAYER_PASSWORD],
    GeneratePass[MAX_PLAYER_PASSWORD],
    Logged,
	AdminLevel,
	AdminDate,
	Vip,
	VipTime,
	Skin,
	Money,
	Bank,
	Level,
	Exp,
	Points,
    Kills,
    Death,
	RegDate,
	RegIP[32],
	LastIP[32],
	LastGpci[64],
	MuteTime,
	MuteCount,
	MuteCMD,
	JailTime,
	dataPos,
	Float:dataPosX,
	Float:dataPosY,
	Float:dataPosZ,
	dataInt,
	dataWorld,
	LoginDate,
	TotalDate,
	Float:Health,
	Float:Armour,
	Weapons[50],
    Ammos[50],
	Weapon[11],
    Ammo[11],
	Code[MAX_PLAYER_PASSWORD],
	Email[MAX_PLAYER_EMAIL],
	CheckEmail,
	EmailKey,
	Clan,
	ClanRank,
	ColorNick[16],
	ColorChat[16],
	House,
    Renter,
    GodMode,
    Restart,
    HouseEnter,
    Float:BankComission,
    ReferalID,
    ReferalBonus,
    WorldTime,
    Weather,
    FightStyle,
    RegenHealth,
    RegenArmour,
    RegenOn,
    InviteClan,
	GangZoneOn,
	Float:DonateCount,
	EarsPM,
	EarsRCHAT,
	EarsCMD,
	Objects[36],
	ObjectID[6],
   	carGUID,
    carModel,
    carColors[10],
    carColor[2],
	carPaintjob,
	carPlate[32],
	carComponents[MAX_VEHICLE_COMPONENTS+30],
	carComponent[MAX_VEHICLE_COMPONENTS],
	carObjID[4],
	carObjects[20],
	carObject[2],
	//Не сохраняется
	Event1[64],Event2[64],Event3[64],Event4[64],Event5[64],Event6[64],Event7[64],Event8[64],Event9[64],Event10[64],
	GetIP[20],
	GetCountry[MAX_COUNTRY_NAME],
	GetRegion[MAX_REGION_NAME],
	GetCity[MAX_CITY_NAME],
	GetGpci[64],
	FPS,
	LastDrunk,
	SpecOn,
	SpecUP,
	InvitedClan,
	PlayerText: HPinfo,
	PlayerText: ARinfo,
	Text: MainInfo,
	Text: LifeInfo,
	HouseIcon,
    OrderVeh,
    CarLock,
    Float:ExitBank[3],
    FloodPickup,
    Float:PickupPos[3],
    IgnoredPM[MAX_PLAYERS char],
    NewsTime,
    RegenHPTime,
    RegenARTime,
    GangZone,
    KillSeries,
    pDM,
    DMKills,
    TimeWage,
    SessionTime,
    AntiSK,
    LastFight,
    GodModeTime,
    
	Dialog,
	DialogTime,
    Text3D:Label[128],
    
    MapTP,
	MapTPTry,
	Float: MapTPx,
	Float: MapTPy,
    
    ListItem[128],
	ClanPlaceList[MAX_CLAN_MEMBERS],
	ClanGIDList[MAX_CLAN_MEMBERS],
	
    InDM,
    FragsDM,
    TimerDM,
};
new PlayerInfo[MAX_PLAYERS][pInfo];

new PlayerTimer[MAX_PLAYERS];
new AutoSave[MAX_PLAYERS];
new FlyModeTimer[MAX_PLAYERS];

enum cInfo
{
	cID,
	cName[32],
	cTag[32],
	cOwnedID,
	cLevel,
	cBank,
	cPlayers,
	cPlayersUniqueID,
	cColorZone[16],
	//
	cInvited,
	cCaptureZone,
};
new ClanInfo[MAX_CLAN][cInfo];
new clanid;

enum cMem
{
	cmUniqueID,
	cmMysqlID,
	cmName[24],
	cmRank,
	cmTimeStamp,
};
new ClanMember[MAX_CLAN][MAX_CLAN_MEMBERS][cMem];

enum zInfo
{
	zID,
	zOwner,
	zMinX,
	zMinY,
	zMaxX,
	zMaxY,
	zUnderAttack,
	zCaptureTime,
	zCaptureTimer,
};
new ZoneInfo[MAX_ZONES][zInfo];
new	ZoneKills[MAX_ZONES][MAX_CLAN];
new zonesid;

enum HInfo
{
	hID,
 	hOwner[24],
 	hOwnedID,
	hLevel,
	hInterior,
    Float:hEnterX,
    Float:hEnterY,
    Float:hEnterZ,
    Float:hEnterA,
   	Float:hCarX,
    Float:hCarY,
    Float:hCarZ,
    Float:hCarA,
    hLocked,
	hCostRent,
	hBank,
	hName[64],
	hVayp,
	//
    Text3D:hInfo,
    hIconID,
    hPickup,
    hPickupLock,
};

new HouseInfo[MAX_HOUSES][HInfo];
new houseid;

enum hInt
{
	Float:CoordX,
	Float:CoordY,
	Float:CoordZ,
	Float:CoordA,
	Int,
	intLevel,
}

new HouseInt[][hInt] =
{
	//Для 1 уровней дома.
	{244.1276,304.9007,999.1484,270.0,1,1},
	{2468.6343,-1698.1779,1013.5078,90.0,2,1},
	//Для 10 уровней дома.
	{266.7771,304.9217,999.1484,270.0,2,10},
	{2333.0398,-1077.2990,1049.0234,358.1293,6,10},
	{318.6601,1115.2936,1083.8828,360.0,5,10},
	{2308.7927,-1212.8822,1049.0234,353.9906,6,10},
	{2260.5823,-1135.8806,1051.6328,273.9038,10,10},
	{-68.5888,1354.8198,1080.2109,5.8463,6,10},
	{223.3553,1289.1394,1082.1328,160.3207,1,10},
	{223.6480,1239.8638,1082.1406,309.0148,2,10},
	{221.5625,1144.0287,1082.6094,0.8096,4,10},
	{344.1049,304.8762,999.1484,266.5687,6,10},
	{2233.6792,-1114.2806,1051.21,359.9612,5,10},
	//Для 30 уровней дома.
	{2282.9495,-1140.2864,1050.8984,1.2028,11,30},
	{234.1400,1064.4841,1084.2112,1.2477,6,30},
	{446.9713,1397.7134,1084.3047,0.4750,2,30},
	{23.9533,1340.5935,1084.3750,360.0,10,30},
	{83.1111,1322.4213,1083.8662,360.0,9,30},
	{-261.1545,1456.6892,1084.3672,90.0,4,30},
	{489.7000,1402.5000,1080.2645,271.3855,2,30},
	//Для 50 уровней дома.
	{2217.5574,-1076.0642,1050.4844,89.8445,1,50},
	{261.0671,1284.7126,1080.2578,0.0424,4,50},
	{22.7800,1403.4600,1084.4370,360.0,5,50},
	{2495.8896,-1692.6499,1014.7422,180.0,3,50},
	//Для 70 уровней дома.
	{2807.6628,-1174.4562,1025.5703,360.0,8,70},
	{2237.5674,-1081.3199,1049.0234,0.3790,2,70},
	{2270.3950,-1210.4878,1047.5625,88.0660,10,70},
	{227.1613,1114.2213,1080.9973,267.0062,5,70},
	//Для 90 уровней дома.
	{2196.8501,-1204.3671,1049.0234,85.6567,6,90},
	{2324.5227,-1149.1566,1050.7101,360.0,12,90},
	{140.3074,1366.9340,1083.8594,0.0,5,90},
	//Для 100 уровней дома.
	{1298.9469,-795.0026,1084.0078,143.0069,5,100}
};

enum vInfo
{
	vID,
	Float:vHealth,
	vLock,
	vLockid,
	vType,
	vOwner,
	Float: vGodMode,
	Text3D:vText,
	vAdmin,
}
new VehicleInfo[MAX_VEHICLES][vInfo];

enum dmCoord
{
	Float: dmCoordX,
	Float: dmCoordY,
	Float: dmCoordZ,
	Float: dmCoordAng,
	dmPickupGun,
	Float: dmPickupX,
	Float: dmPickupY,
	Float: dmPickupZ,
};

new DMCoords[MAX_DM_MAP][MAX_DM_SPAWN][dmCoord];
new DMCoordNum[MAX_DM_MAP];
new DMPickupNum[MAX_DM_MAP];
new Float:DMBounds[MAX_DM_MAP][4];
new DMDropWeapon[MAX_PICKUPS];

enum dmInfo
{
	dmPlayers,
	dmWeaps[MAX_WEAP_DM],
	dmAmmo[MAX_WEAP_DM],
	dmWinCheck,         //ДМ с победой или нет
	dmStartDM,
	dmMap,
};
new DMInfo[MAX_DM][dmInfo];

enum
{
	d_Null, d_Menu, d_Admin, d_Other, d_Info, d_DonateMenu, d_DonateInfo,
	
	d_Options, d_Email, d_Upgrade, d_Color, d_upgWeapons, d_Chat, d_Setting,
	
	mn_Admin, mn_Clans, mn_GangZones, mn_TeleportList, mn_Other, mn_Info, mn_Donate,
	mn_Options, mn_Upgrade, mn_ObjectToPL, mn_Chat, mn_Setting, mn_Kill,
	mn_Control, mn_Command, /*mn_Anim,*/ mn_Stats, mn_pointerHouse, mn_searchNick, mn_searchAccount, mn_admList, mn_ReadNews,
	
	mn_changeName, mn_changePass, mn_changeCode, mn_changeSkin, mn_Email, mn_Referal,
	
	mn_emailSend, mn_emailChange, mn_emailCheck,
	
	mn_upgradeColor, mn_upgradeWeapons,
	
	mn_ColorChat,
	mn_GodMode, mn_FightStyle, mn_WorldTime, mn_Weather, mn_RegenOn, mn_InviteClan, mn_GangZoneOn,
	
	mn_infoDonate, mn_checkDonate, mn_Promocode,
	info_DonateSystem, info_Promocode,
	//-
	d_pMenu, d_Report, d_pClan, d_gRankClan,
	
	pmn_Admin, pmn_Spec, pmn_Stats, pmn_SendPM, pmn_Report, pmn_ignoredPM, pmn_gMoney, pmn_gBank, pmn_pClan, pmn_Eject, pmn_AddStat, pmn_historySetName,
	pmn_SendPM_input, pmn_Report_input, pmn_ignoredPM_input, pmn_gMoney_input, pmn_gBank_input, pmn_Eject_input,
	
	pmn_inviteClan, pmn_uninviteClan, pmn_grankClan, pmn_errorClan,
	pmn_inviteClan_input, pmn_uninviteClan_input,
	
	pmn_clanRank1, pmn_clanRank2, pmn_clanRank3, pmn_clanRank4, pmn_clanRank5,
	//-
	d_ClanMenu, d_ClanMng, d_renameClan,
	d_ClanMemberList2,
	
	cm_ClanStats, cm_ClanList, cm_ClanRating, cm_Mng, cm_Description, cm_inviteClan, cm_MoneyPut, cm_MoneyTake,
	cm_inviteClan_input, cm_MoneyPut_input, cm_MoneyTake_input,
	
	cm_createClan, cm_deleteClan, cm_renameClan, cm_exitClan, cm_LevelUP, cm_MemberList,
	cm_createClan_input, cm_createClan2_input, cm_deleteClan_input, cm_exitClan_input,
	
	cm_reName, cm_reTag,
	cm_reName_input, cm_reTag_input,
	
	cm_uninviteClan,
	cm_uninviteClan_input,
	//-
	d_HouseMenu, d_RentHouse, d_HouseNull, d_hmTransport,
	//
	hm_BuyHouse, hm_SellHouse, hm_LockHouse, hm_RentHouse, hm_Rent, hm_unRent, hm_Transport, hm_HouseName,
	hm_BuyHouse_input, hm_SellHouse_input, hm_HouseName_input,

	hm_homeRent, hm_RentCost,
	hm_homeRent_input, hm_RentCost_input,
	
	hm_RepairCar, hm_CarPlate, hm_CarObject,
	hm_CarPlate_input,
	//-
	d_GangZones,
	//-
	gz_Info, gz_StatusWar, gz_ClansZone, gz_Capture, gz_Exempt,
	gz_Info_input, gz_StatusWar_input, gz_StatusWar2_input, gz_ClansZone_input, gz_Capture_input, gz_Exempt_input,
	//-
	d_CarOrder,
	//-
	order_Bike, order_Cabriolets, order_Industry, order_Lowriders, order_SUVs, order_Salon, order_Sport,
	//-
	d_connectMenu, d_connectRecovery, d_connectChangeName,
	connect_changeName, connect_Recovery,
	//-
	d_AdminMenu, d_Penalty, d_admPlayer, d_admPlayerAcc, d_admPlayerAcc_offline, d_admTeleport, d_admVeh, d_admChat, d_admOther,
	
	adm_Pen, adm_Player, adm_PlayerAcc, adm_PlayerAcc_offline, adm_Veh, adm_Teleport, adm_Chat, adm_Other, adm_Fly, /*adm_Help,*/
	adm_Mute, adm_MuteIP, adm_MuteAcc, adm_Jail, adm_JailAcc, adm_MuteCMD, adm_MuteCMDAcc, adm_FakeChat, adm_FakeChat_input,
	adm_Mute_input, adm_MuteIP_input, adm_MuteAcc_input, adm_Jail_input, adm_JailAcc_input, adm_MuteCMD_input, adm_MuteCMDAcc_input,
	
	adm_searchIPPL,adm_TPTO, adm_TP, adm_PL_VW, /*adm_PL_INT,*/ adm_PL_HP, adm_PL_AR, adm_giveGun, adm_resetGun, adm_PL_Offkeys, adm_PL_godmode, adm_PL_JETPACK,
	adm_PL_HP_input, adm_PL_AR_input, adm_PL_VW_input, /*adm_PL_INT_input,*/ adm_giveGun_input,
	
	adm_addDonate, adm_addOA, adm_addLevel, adm_addMoney, adm_addBank, adm_setOA, adm_setLevel, adm_setMoney, adm_setBank, adm_addExp, adm_deleteAcc,
	adm_deleteEmail, adm_changeName, adm_giveAdmin, adm_resetStatKill,
	adm_addDonate_input, adm_addOA_input, adm_addLevel_input, adm_addMoney_input, adm_addBank_input, adm_setOA_input, adm_setLevel_input, adm_setMoney_input, adm_setBank_input, adm_addExp_input,
	adm_deleteAcc_input, adm_deleteEmail_input, adm_changeName_input, adm_giveAdmin_input, adm_resetStatKill_input,
	
	adm_addOA_offline, adm_addOA_offline_input,
	adm_addMoney_offline, adm_addMoney_offline_input,
	adm_addBank_offline, adm_addBank_offline_input,
	
	adm_SavePos, adm_TP_SavePos, adm_TP_House,
	adm_TP_House_input,
	
	adm_vehUnuseresp, adm_vehResp, adm_addVeh, adm_DestroyAVeh, adm_DestroyAllAVeh,
	
	adm_clearChat, adm_EarsPM, adm_EarsRCHAT, adm_EarsCMD,
	
	adm_cmdList, adm_admList, adm_infoAcc, adm_infoAcc2, adm_clearKillChat, adm_searchIP, adm_searchIP2, adm_searchCountry, adm_searchCountry2, adm_searchCity, adm_searchCity2, adm_searchRegion, adm_searchRegion2, adm_clanRename, adm_clanRetag, adm_sellHouse,
	adm_unBanIP, adm_Wipe, adm_WipeGZ, adm_Restart, adm_DeleteClan,
	adm_cmdList_input, adm_admList_input, adm_infoAcc_input, adm_searchIP_input, adm_searchCountry_input, adm_searchCity_input, adm_searchRegion_input, adm_clanRename_input, adm_clanRetag_input, adm_sellHouse_input,
	adm_unBanIP_input, adm_DeleteClan_input
	
}

enum noclipenum
{
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}

new noclipdata[MAX_PLAYERS][noclipenum];

enum col_enum
{
	col_Name[24],
	col_Color[8]
}

static const ColorsList[30][col_enum] =
{
	{ "Светло-синий",	        "9292FF"},
	{ "Синий",	                "0000FF"},
	{ "Тёмно-синий",	        "000096"},
	{ "Специальный синий",	    "4169FF"},
	{ "Светло-красный",	        "FFB0B0"},
	{ "Красный",		        "FF0000"},
	{ "Тёмно-Красный",	        "A10000"},
	{ "Специальный красный",    "B22222"},
	{ "Светло-зеленый",	        "92FF92"},
	{ "Зеленый",	            "00FF00"},
	{ "Тёмно-зеленый",	        "009600"},
	{ "Специальный зеленый",    "7ACA7A"},
	{ "Светло-жёлтый",	        "FFFF5E"},
	{ "Жёлтый",	                "FFFF00"},
	{ "Тёмно-жёлтый",	        "D3D300"},
	{ "Специальный жёлтый",	    "CFAE00"},
	{ "Светло-фиолетовый",	    "FF92FF"},
	{ "Фиолетовый",             "FF00FF"},
	{ "Тёмно-фиолетовый",	    "800080"},
	{ "Специальный Фиолетовый",	"DA70D6"},
	{ "Светло-коричневый",	    "BA9072"},
	{ "Коричневый",	            "8B4513"},
	{ "Тёмно-коричневый",	    "6D360E"},
	{ "Светло-серый",	        "C7C7C7"},
	{ "Серый",	                "8B8B8B"},
	{ "Тёмно-серый",	        "656565"},
	{ "Белый",	                "FFFFFF"},
	{ "Оранжевый",	            "FFA500"},
	{ "Аквамарин",	            "7FFFD4"},
	{ "Циан",	                "00FFFF"}
};

enum bcarInfo
{
	carID,
	carMoney,
	carLevel,
	carOA,
	carType,
}

static const CarInfo[][bcarInfo] =
{
	//Мотоциклы
	{462, 7000, 1, 1, 1},
	{448, 15000, 10, 3, 1},
	{581, 300000, 60, 6, 1},
	{468, 15000, 10, 3, 1},
	{471, 15000, 30, 1, 1},
	{522, 1000000, 140, 24, 1},
	{461, 300000, 100, 12, 1},
	{521, 250000, 70, 12, 1},
	{523, 150000, 40, 3, 1},
	{463, 100000, 30, 3, 1},
	//Кабриолеты
	{480, 800000, 140, 21, 2},
	{533, 250000, 80, 6, 2},
	{439, 175000, 15, 6, 2},
	{555, 175000, 35, 6, 2},
	//Промышленные
	{499, 30000, 1, 1, 3},
	{422, 150000, 5, 3, 3},
	{482, 50000, 15, 3, 3},
	{498, 30000, 1, 1, 3},
	{609, 30000, 1, 1, 3},
	{524, 100000, 1, 1, 3},
	{578, 100000, 1, 1, 3},
	{455, 30000, 1, 1, 3},
	{403, 100000, 1, 1, 3},
	{414, 30000, 1, 1, 3},
	{582, 175000, 1, 1, 3},
	{443, 150000, 1, 1, 3},
	{514, 150000, 1, 1, 3},
	{440, 0, 1, 0, 3},
	{413, 50000, 1, 1, 3},
	{515, 175000, 1, 1, 3},
	{543, 30000, 1, 1, 3},
	{605, 75000, 1, 3, 3},
	{459, 0, 1, 0, 3},
	{531, 50000, 1, 1, 3},
	{408, 30000, 1, 1, 3},
	{552, 100000, 1, 1, 3},
	{478, 75000, 1, 1, 3},
	{456, 75000, 1, 1, 3},
	{554, 30000, 1, 1, 3},
	//Лоурайдеры
	{536, 175000, 50, 6, 4},
	{575, 75000, 20, 3, 4},
	{534, 150000, 15, 3, 4},
	{567, 175000, 70, 6, 4},
	{535, 200000, 30, 6, 4},
	{566, 200000, 35, 6, 4},
	{576, 100000, 20, 3, 4},
	//Внедорожники
	{568, 100000, 0, 0, 5},
	{424, 100000, 0, 0, 5},
	{573, 100000, 0, 0, 5},
	{579, 100000, 0, 0, 5},
	{400, 100000, 0, 0, 5},
	{500, 100000, 0, 0, 5},
	{444, 100000, 0, 0, 5},
	{556, 100000, 0, 0, 5},
	{557, 100000, 0, 0, 5},
	{470, 100000, 0, 0, 5},
	{489, 100000, 0, 0, 5},
	{495, 100000, 0, 0, 5},
	//Салоны
	{445, 100000, 0, 0, 6},
	{504, 100000, 0, 0, 6},
	{401, 100000, 0, 0, 6},
	{518, 100000, 0, 0, 6},
	{527, 100000, 0, 0, 6},
	{542, 100000, 0, 0, 6},
	{507, 100000, 0, 0, 6},
	{562, 100000, 0, 0, 6},
	{585, 100000, 0, 0, 6},
	{419, 100000, 0, 0, 6},
	{526, 100000, 0, 0, 6},
	{604, 100000, 0, 0, 6},
	{466, 100000, 0, 0, 6},
	{492, 100000, 0, 0, 6},
	{474, 100000, 0, 0, 6},
	{546, 100000, 0, 0, 6},
	{517, 100000, 0, 0, 6},
	{410, 100000, 0, 0, 6},
	{551, 100000, 0, 0, 6},
	{516, 100000, 0, 0, 6},
	{467, 100000, 0, 0, 6},
	{426, 100000, 0, 0, 6},
	{436, 100000, 0, 0, 6},
	{547, 100000, 0, 0, 6},
	{405, 100000, 0, 0, 6},
	{580, 100000, 0, 0, 6},
	{560, 100000, 0, 0, 6},
	{550, 100000, 0, 0, 6},
	{549, 100000, 0, 0, 6},
	{540, 100000, 0, 0, 6},
	{491, 100000, 0, 0, 6},
	{529, 100000, 0, 0, 6},
	{421, 100000, 0, 0, 6},
	//Спортивные
	{602, 100000, 0, 0, 7},
	{429, 100000, 0, 0, 7},
	{496, 100000, 0, 0, 7},
	{402, 100000, 0, 0, 7},
	{541, 100000, 0, 0, 7},
	{415, 100000, 0, 0, 7},
	{589, 100000, 0, 0, 7},
	{587, 100000, 0, 0, 7},
	{565, 100000, 0, 0, 7},
	{496, 100000, 0, 0, 7},
	{502, 100000, 0, 0, 7},
	{503, 100000, 0, 0, 7},
	{411, 100000, 0, 0, 7},
	{559, 100000, 0, 0, 7},
	{603, 100000, 0, 0, 7},
	{475, 100000, 0, 0, 7},
	{506, 100000, 0, 0, 7},
	{451, 100000, 0, 0, 7},
	{558, 100000, 0, 0, 7},
	{477, 100000, 0, 0, 7}
};

enum tInfo
{
	teleportName[30],
	teleportInterior,
	Float:teleportPos_X,
	Float:teleportPos_Y,
	Float:teleportPos_Z,
	Float:teleportPos_A,
}

new TeleportInfo[][tInfo] =
{
	{"ЛВ Аэро",0,1687.3103,1446.8499,10.7686,348.5344},
	{"ЛС Аэро",0,1997.4944,-2278.9858,13.5469,1.0000},
	{"СФ Станция",0,-1971.1669,139.1990,27.6875,1.0000},
	{"ЛВ Аммо",0,2108.1252,936.0108,10.8203,300.3428},
	{"ЛВ Сервер",0,2129.2249,2351.3103,10.6719,1.0000},
	{"ЛВ Восток",0,2639.2944,1572.0608,10.8203,131.1795},
	{"ЛС Север",0,1639.7379,-1100.8436,23.9063,131.1795},
	{"ЛС Запад",0,153.3559,-1632.7255,12.9232,131.1795},
	{"ЛС Восток",0,2859.8733,-1862.8995,11.0987,131.1795},
	{"СФ Север",0,-2078.7654,1385.6991,7.1016,131.1795},
	{"СФ Юг",0,-2312.8838,-155.4382,35.3203,131.1795},
	{"СФ Запад",0,-2916.5818,473.4327,4.9141,131.1795},
	{"ЛВ Военная база",0,240.7034,1973.6638,17.6406,27.7552},
	{"Гора",0,-2266.3540,-1733.9825,487.5401,27.7552},
	{"Город у горы",0,-2096.4224,-2366.0005,30.6250,27.7552},
	{"Мини город в ЛВ №1",0,-2515.2266,2385.4741,17.2232,27.7552},
	{"Мини город в ЛВ №2",0,-1502.2609,2576.5349,55.8359,27.7552},
	{"Мини город в ЛВ №3",0,-205.4340,2655.9285,62.6282,27.7552},
	{"Мини город в ЛВ №4",0,-744.7247,1496.9490,25.1379,27.7552},
	{"Мини город в ЛВ №5",0,-112.4834,1118.9446,19.7422,27.7552},
	{"Мини город в ЛС №1",0,210.1428,-163.2042,1.5781,336.9948},
	{"Мини город в ЛС №2",0,658.9623,-543.7110,16.3359,336.9948},
	{"Мини город в ЛС №3",0,1343.4729,284.3700,19.5615,336.9948},
	{"Мини город в ЛС №4",0,2466.5559,-43.6353,26.4844,336.9948}
};

enum wbInfo
{
	wbName[24],
	wbWeapID,
	wbWeapSlot,
	wbWeapAmmo,
	wbCostMoney,
	wbCostPoint,
	wbLevel,
}

new WeaponsBuy[][wbInfo] =
{
	{"Клюшка",2,0,1,1000,1,1},
	{"Дубинка",3,0,1,1000,1,1},
	{"Нож",4,0,1,5000,5,1},
	{"Бита",5,0,1,1000,1,1},
	{"Лопата",6,0,1,1000,1,1},
	{"Кий",7,0,1,1000,1,1},
	{"Катана",8,0,1,1000,1,1},
	{"Пила",9,0,1,5000,2,8},
	{"Трость",15,1,1,1000,1,1},
	{"9mm",22,1,200,30000,5,9},
	{"9mm с глушителем",23,1,200,10000,5,7},
	{"Десерт игл",24,1,100,20000,5,14},
	{"Дробовик",25,2,100,15000,5,11},
	{"Обрезы",26,2,250,80000,15,20},
	{"Боевой дробовик",27,2,200,30000,10,19},
	{"УЗИ",28,3,500,80000,15,22},
	{"MP5",29,3,500,15000,5,12},
	{"Tec9",32,3,500,80000,15,22},
	{"AK-47",30,4,250,40000,5,15},
	{"M4",31,4,250,50000,10,18},
	{"Винтовка",33,5,100,5000,1,1},
	{"Снайперка",34,5,100,50000,10,17}
};

enum carobInfo
{
	carobName[30],
	carobID,
}

new CarObjectInfo[][carobInfo] =
{
	{"{FF0000}Красный неон",18647},
	{"{0000FF}Синий неон",18648},
	{"{00FF00}Зелёный неон",18649},
	{"{FFFF00}Жёлтый неон",18650},
	{"{FF00FF}Фиолетовый неон",18651},
	{"{FFFFFF}Белый неон",18652}
};

enum otp
{
	modelID,
	modelName[24],
	modelBone,
	Float:mfOffsetX,
	Float:mfOffsetY,
	Float:mfOffsetZ,
	Float:mfRotX,
	Float:mfRotY,
	Float:mfRotZ,
	Float:mfScaleX,
	Float:mfScaleY,
	Float:mfScaleZ,
	mAutoOffsetX
}

new ObjectToPlayer[][otp] =
{
	{19065, "Новогодняя шапка", 2, 0.15, 0.0, 0.0, 70.0, 94.0, 30.0, 1.2, 1.2, 1.2, 10},
	{19078, "Попугай", 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, -1},
	{18963, "Голова CJ", 2, 0.0989, 0.0140, -0.0069, 85.49, 87.10, 6.89, 1.37, 1.38, 1.12, -1},
	{1254, "Череп", 2, 0.071999, 0.050000, 0.000000, -3.899999, 84.300003, -1.000000, 1.000000, 1.000000, 1.000000, -1},
	{18637, "Щит", 5, 0.096999, 0.030000, 0.046000, 76.899978, 2.800001, -168.899993, 1.067000, 1.031000, 0.951000, -1},
	{18911, "Бандана 1", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18912, "Бандана 2", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18913, "Бандана 3", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18914, "Бандана 4", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18915, "Бандана 5", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18916, "Бандана 6", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18917, "Бандана 7", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18918, "Бандана 8", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18919, "Бандана 9", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18920, "Бандана 10", 2, -0.08, 0.04, 0.0, 90.0, -180.0, -90.0, 1.0,1.0,1.0, 0},
	{18976, "Шлем 1", 2, 0.05,0.02,0.0,90.0,90.0,0.0,1.1,1.1,1.1, 1},
	{18977, "Шлем 2", 2, 0.05,0.02,0.0,90.0,90.0,0.0,1.1,1.1,1.1, 1},
	{18978, "Шлем 3", 2, 0.05,0.02,0.0,90.0,90.0,0.0,1.1,1.1,1.1, 1},
	{18979, "Шлем 4", 2, 0.05,0.02,0.0,90.0,90.0,0.0,1.1,1.1,1.1, 1},
	{18645, "Шлем 5", 2, 0.05,0.02,0.0,90.0,90.0,0.0,1.1,1.1,1.1, 1},
	{18865, "Телефон 1", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18866, "Телефон 2", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18867, "Телефон 3", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18868, "Телефон 4", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18869, "Телефон 5", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18870, "Телефон 6", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18871, "Телефон 7", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18872, "Телефон 8", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18873, "Телефон 9", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{18874, "Телефон 10", 6, 0.1,0.0,0.0,90.0,180.0,0.0,1.0,1.0,1.0, -1},
	{19006, "Очки 1", 2, 0.10,0.04,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19007, "Очки 2", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19008, "Очки 3", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19009, "Очки 4", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19010, "Очки 5", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19011, "Очки 6", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19012, "Очки 7", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19013, "Очки 8", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19014, "Очки 9", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19015, "Очки 10", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19016, "Очки 11", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19017, "Очки 12", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19018, "Очки 13", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19019, "Очки 14", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19020, "Очки 15", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19021, "Очки 16", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19022, "Очки 17", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19023, "Очки 18", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19024, "Очки 19", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19025, "Очки 20", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19026, "Очки 21", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19027, "Очки 22", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19028, "Очки 23", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19029, "Очки 24", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19030, "Очки 25", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19031, "Очки 26", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19032, "Очки 27", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19033, "Очки 28", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19034, "Очки 29", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19035, "Очки 30", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19138, "Очки 31", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19139, "Очки 32", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19140, "Очки 33", 2, 0.10,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.4, 2},
	{19036, "Хоккейная маска 1", 2, 0.107, 0.020, 0.0, 90.0, 90.0, 0.0, 1.100000, 1.300000, 1.300000, 5},
	{19037, "Хоккейная маска 2", 2, 0.107, 0.020, 0.0, 90.0, 90.0, 0.0, 1.100000, 1.300000, 1.300000, 5},
	{19038, "Хоккейная маска 3", 2, 0.107, 0.020, 0.0, 90.0, 90.0, 0.0, 1.100000, 1.300000, 1.300000, 5},
	{18974, "Маска зерро", 2, 0.090156, 0.045901, -0.005574, 90.110733, 81.638343, 4.973568, 0.887882, 1.139873, 1.000000, -1},
	{18952, "Маска боксёра", 2, 0.105, 0.01, 0.0, 0.0, 0.0, 0.0, 1.000000, 1.000000, 1.000000, 4}
};

static Float:ObjPlayerOffsetX[312][12] =
{
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
	{-0.15, 0.0, 0.02, 0.028, 0.035, 0.037, 0.055, 0.04, 0.06, 0.07, 0.08, 0.1}, //-0.07
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.12, 0.03, 0.05, 0.058, 0.065, 0.067, 0.085, 0.07, 0.09, 0.1, 0.11, 0.13}, //-0.04
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17}
};

static const Float:RandomSpawn[14][4] =
{
	{2029.4972,1007.8933,10.8203,273.2234},
	{2204.3398,939.0825,10.8203,158.1714},
	{2479.6616,913.5536,10.8203,11.6107},
	{2702.5059,787.9007,10.8812,1.9363},
	{2482.5261,1526.5719,11.4475,315.0644},
	{2160.6548,1703.9813,20.6587,147.5334},
	{2223.1582,1838.3884,10.8203,89.6272},
	{2002.8215,1544.0767,13.5859,274.7053},
	{2135.5447,1447.6078,10.8203,179.2479},
	{2193.9841,1994.9175,12.2969,88.0193},
	{2086.6968,2057.5720,11.0579,273.5735},
	{2447.9167,2061.7014,10.8203,187.4052},
	{1698.6312,1447.5797,10.7787,269.8432},
	{2296.3232,2451.3010,10.8203,89.3530}
};

static const Float:JailSpawn[2][4] =
{
	{219.7339,110.1460,999.0156,2.4561},
	{223.2943,110.2846,999.0156,1.0000}
};

static const VehicleNames[212][] =
{
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};

static const wName[][] =
{
	"Кулак","Кастет","Клюшка","Полицейская дубинка","Нож",
	"Бейсбольная бита","Лопата","Кий","Катана","Бензопила",
	"Фиолетовый вибратор","Белый вибратор","Длинный белый вибратор","Серебряный вибратор","Цветы",
	"Трость","Граната","Слезоточивый газ","Коктейль Молотова","","","","9ММ","9ММ с глушителем",
	"Пустынный орел","Дробовик","Обрез","Боевой дробовик","УЗИ",
	"МП5","АК-47","М4","ТЕК-9","Винтовка",
	"Снайперская винтовка","РПГ","Самонаводящийся гранатомет","Огнемет","Миниган",
	"C4","Детонатор","Балончик с краской","Огнетушитель","Камера",
	"Очки ночного видения","Тепловизор","Парашют","","",
	"Задавил","Зарезал винтом","Взрыв"
};

static const DisReasons[][] =
{
	", разрыв соединения",
	", выход",
	", отключен системой"
};

static const ComplaintReason[][] =
{
	"Чит - бессмертие",
	"Чит - скорость",
	"Чит - летает",
	"Чит - оружие",
	"Оскорбление - в лс",
	"Оскорбление - в чат"
};

static const msg_FightStyle[][] =
{
	"Обычный",
	"Бокс",
	"Кунг Фу",
	"Колено",
	"Захват",
	"Удар локтём"
};

static const msg_WorldTime[][] =
{
	"0:00",
	"1:00",
	"2:00",
	"3:00",
	"4:00",
	"5:00",
	"6:00",
	"7:00",
	"8:00",
	"9:00",
	"10:00",
	"11:00",
	"12:00",
	"13:00",
	"14:00",
	"15:00",
	"16:00",
	"17:00",
	"18:00",
	"19:00",
	"20:00",
	"21:00",
	"22:00",
	"23:00",
	"Реальное время суток"
};

static const msg_Weather[][] =
{
	"Погода 0",
	"Погода 1",
	"Погода 2",
	"Погода 3",
	"Погода 4",
	"Погода 5",
	"Погода 6",
	"Погода 7",
	"Погода 8",
	"Погода 9",
	"Погода 10",
	"Погода 11",
	"Погода 12",
	"Погода 13",
	"Погода 14",
	"Погода 15",
	"Меняющуюся погода"
};

static const msg_ChangeName[][] =
{
	"{FFFFFF}Можно использовать {FF0000}русские символы\n",
	"{FFFFFF}Ники можно начинать с цифр, доступны символы в нике [] _ @ = . $ ( ) A-Z 0-9\n",
	"{FFFFFF}Максимальная длина ника может составлять 23 символа, минимальная 1"
};
new str_ChangeName[(sizeof(msg_ChangeName)*60)+60];

static const msg_Referal[][] =
{
	"{FFFFFF}Введи номер аккаунта игрока пригласившего тебя\n",
	"{FFFFFF}Этот игрок будет получать каждые +1 уровень, +5 очков апгрейда и $10.000 за каждые полученные тобой 10 уровней\n\n",
	//"{FFFFFF}А если ты наберёшь 100 уровень то он получит 10 уровней, 50 ОА и $50.000\n\n",
	"{FFFFFF}Ты можешь ввести номер аккаунта пригласившего тебя игрока до 20 уровня позднее\n",
	"{FFFFFF}Нажав - Y - Разное - Управление аккаунтом\n\n",
	"{FFFFFF}Приглашай игроков на сервер, говори им свой номер аккаунта\n",
	"{FFFFFF}И будешь получать такое-же вознаграждение за каждого приглашённого игрока"
};
new str_Referal[(sizeof(msg_Referal)*80)+60];

static const msg_GodMode_1[][] =
{
	"{00FF00}Ты дрифтер, гонщик или просто хочешь спокойно поездить\n",
	"{00FF00}По основному миру не боясь, что тебя с секунды на секунду отдубасят деды?\n",
	"{00FF00}Выход есть, нажав кнопку Да ты через 60 сек станешь бессмертным!!!\n",
	"{00FF00}Оружие будет изъято на время бессмертия, стать обратно смертным ты сможешь из этого меню\n",
	"{FFFF00}Убивать бессмертным запрещено, при убийстве игрока тебя посадит\n",
	"{FF0000}Стать бессмертным?"
};
new str_GodMode_1[(sizeof(msg_GodMode_1)*60)+60];

static const msg_GodMode_2[][] =
{
	"{00FF00}Стать смертным ты сможешь через 60 сек после нажатия кнопки ДА\n",
	"{00FF00}Оружие будет возвращено\n",
	"{FF0000}Стать смертным?"
};
new str_GodMode_2[(sizeof(msg_GodMode_2)*60)+60];

static const msg_HouseName[][] =
{
	"{FFFFFF}Введи имя дома\n",
	"{FFFFFF}Максимальная  длина 50 символов\n\n",
	"{FFFFFF}Функция выбора цвета доступна только для Vip\n",
	"{FFFFFF}Для установки цвета введи текст: (красный цвет)Мой дом - Мой дом будет красным цветом\n",
	"{FFFFFF}RRGGBB -  {FF0000}R - красный, {00FF00}G - зелёный,  {0000FF}B -  синий\n",
	"{FFFFFF}Пример некоторых цветов:\n",
	"{FFFFFF}FFFFFF, 000000 - чёрный, {FF0000}FF0000\n",
	"{00FF00}00FF00, {0000FF}0000FF, {FFFF00}FFFF00\n",
	"{FF00FF}FF00FF, {00FFFF}00FFFF, и.т.д\n",
	"{FFFFFF}Можно выбрать любой цвет, посмотрев его в интернете {00FF00}(RGB - палитра цветов)\n",
	"{FFFFFF}Либо настроить самому"
};
new str_HouseName[(sizeof(msg_HouseName)*60)+60];

static const msg_CarPlate[][] =
{
	"{FFFFFF}Введи текст, который будет вместо номера у домашней машины и заказной\n",
	"{FFFFFF}Максимальная  длина 32 символа\n\n",
	"{FFFFFF}Функция выбора цвета доступна только для Vip\n",
	"{FFFFFF}Для установки цвета введи текст: (красный цвет)Машина - слово Машина будет красным цветом\n",
	"{FFFFFF}RRGGBB -  {FF0000}R - красный, {00FF00}G - зелёный,  {0000FF}B -  синий\n",
	"{FFFFFF}Пример некоторых цветов:\n",
	"{FFFFFF}FFFFFF, 000000 - чёрный, {FF0000}FF0000\n",
	"{00FF00}00FF00, {0000FF}0000FF, {FFFF00}FFFF00\n",
	"{FF00FF}FF00FF, {00FFFF}00FFFF, и.т.д\n",
	"{FFFFFF}Можно выбрать любой цвет, посмотрев его в интернете {00FF00}(RGB - палитра цветов)\n",
	"{FFFFFF}Либо настроить самому"
};
new str_CarPlate[(sizeof(msg_CarPlate)*60)+60];

static const msg_Commands[][] =
{
	"{FFFFFF}Команды сервера | Можно водить через .команда и /команда\n\n",
	"{00FF00}/и{FFFFFF} - выводит меню игрока\n",
	"{00FF00}/выход{FFFFFF} - покинуть ДМ/Гонку/Карм/Военный мир\n",
	"{00FF00}/ограбить{FFFFFF} - ограбить игрока\n",
	"{00FF00}/лс{FFFFFF} - личное сообщение\n",
	"{00FF00}/машину{FFFFFF} - перенести машину к себе($1 000)\n",
	"{00FF00}/машину2{FFFFFF} - заказать машину к себе($ зависит от стоимости транспорта)\n",
	"{00FF00}/чинить{FFFFFF} - починить транспорт\n",
	"{00FF00}*{FFFFFF} - *текст - сказать игрокам поблизости, радиусный чат (50м)\n",
	"{00FF00}!{FFFFFF} - !текст - в клановый чат выведется текст\n",
	"\n",
	"{FFFFFF}Команды клиента SAMP\n",
	"{00FF00}/pagesize{FFFFFF} - количество строк в чате\n",
	"{00FF00}/timestamp{FFFFFF} - вывод времени в чат\n",
	"{00FF00}/headmove{FFFFFF} - вкл / выкл вращение головой персонажа\n",
	"{00FF00}/frontsize{FFFFFF} - размер шрифта"
};
new str_Commands[(sizeof(msg_Commands)*60)+60];

static const msg_Control[][] =
{
	"{00FF00}Двойной клик по себе или по другому игроку в Tab выводит меню\n",
	"{00FF00}Y{FFFFFF} - меню\n",
	"{00FF00}F7{FFFFFF} - вкл / выкл чат\n",
	"{00FF00}F6{FFFFFF} - чат\n",
	"{00FF00}Правая кнопка мыши(ПКМ) на игроке + Alt{FFFFFF} - меню игрока\n",
	"{00FF00}N и Num 4{FFFFFF} - закрывает / открывает домашнюю машину\n",
	"{00FF00}H{FFFFFF} - стрелять пассажиром из транспорта / убрать стрельбу из транспорта\n",
	"{00FF00}Num 6 и L{FFFFFF} - открыть / закрыть последнюю машину\n",
	"{00FF00}Ctrl{FFFFFF} - азот\n",
	"{00FF00}F8{FFFFFF} - скриншот экрана \n",
	"\n",
	"{FFFFFF}Для ноутбуков\n",
	"{00FF00}Одновременное нажатие Fn + NumKL{FFFFFF} - включает клавиши Num\n",
	"{00FF00}U - Num 4 | O - Num 6 | K - Num 2{FFFFFF} - при включённых клавишах Num\n",
	"\n",
	"{FFFFFF}Управление за наблюдением игрока\n",
	"{00FF00}Левая кнопка мыши(ЛКМ){FFFFFF} - переключатель на следующего игрока\n",
	"{00FF00}Правая кнопка мыши(ПКМ){FFFFFF} - переключатель на предыдущего игрока\n",
	"{00FF00}Клавиши Enter и F{FFFFFF} - отключить наблюдение за игроком\n",
	"{00FF00}Клавиша Alt{FFFFFF} - выводит меню игрока"
};
new str_Control[(sizeof(msg_Control)*60)+60];

static const msg_DonateSystem[][] =
{
	"{FFFFFF}Вы можете купить разные игровые ресурсы, например уровни, за реальные деньги\n",
	"{FFFFFF}Все игровые ресурсы оплачиваются со внутреннего донат-счета. Пополняется этот счет на нашем сайте\n\n",
	"{FFFFFF}Для пополнения счета зайдите на наш сайт {FF0000}\"%s\" {FFFFFF} в раздел \"Донат\"\n",
	"{FFFFFF}Указав на сайте кол-во денег и ник, оплатив указанную сумму\n",
	"{FFFFFF}После успешной оплаты нажмите клавишу {FF0000}Y - Донат - Получить деньги\n",
	"{FFFFFF}В этом же меню можно проверить баланс\n",
	"{FFFFFF}Кликнув на игрока в Tab можно перевести ему деньги, как игровые, выбрав раздел \"Перевести реальные деньги(донат)\"\n",
	"{FFFFFF}В разделе доната - \"Купить\" можно посмотреть и приобрести покупки"
};
new str_DonateSystem[(sizeof(msg_DonateSystem)*85)+60];

static const msg_PromocodInfo[][] =
{
	"{FFFFFF}Промокоды — это особый код, активировав который вы можете получить различные бонусы и игровые ресурсы(уровни, деньги, VIP и.т.д)\n",
	"{FFFFFF}Промокоды можно получить в акциях или в качестве награды за конкурсы, у разработчиков сервера\n",
	"{FFFFFF}Активировать полученные ключи вы можете в разделе доната - \"Промокод\""
};
new str_PromocodInfo[(sizeof(msg_PromocodInfo)*90)+70];

static const msg_ConfirmEmail[][] =
{
	"{FFFFFF}У тебя не потверждён Email ящик\n",
	"{FFFFFF}Необходимо потвердить его для защиты аккаунта\n",
	"{FFFFFF}Клавиша Y - Разное - Управление аккаунтом - Email"
};
new str_ConfirmEmail[(sizeof(msg_ConfirmEmail)*50)+20];

new EnterBank[19], Float:BankEnter[19][3] =
{
	{2144.3435,1607.1306,993.6882},
	
	{2012.2424,919.9526,10.8203},
	{2127.4028,2380.0071,10.8203},
	{511.9917,-1510.9143,14.5718},
	{1489.3171,-2252.6003,13.5469},
	{-2647.2720,-30.1475,6.1328},
	{-2734.9871,376.3699,4.3672},
	{-1492.1316,920.1837,7.1875},
	{-2455.0645,2291.5574,4.98125},
	{-1448.2026,2611.4580,55.8359},
	{-227.3573,2711.4817,62.9766},
	{-828.0916,1504.1056,19.8317},
	{-207.5175,1119.1713,20.4297},
	{207.7815,-62.1212,1.8504},
	{822.0639,-557.1678,16.3359},
	{1374.0537,404.8464,19.9555},
	{-2182.7532,-2337.1689,30.6250},
	{2251.8325,80.0437,26.7037},
	{1786.5818,-1295.7106,125.7266}//Небоскрёб ЛС
};

public OnGameModeInit()
{
    SetTimer("Timer_Server", 1000, 1);
	new otherchar[] = "!#$&+,-_ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—™љ›њќћџЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕї";
	for(new i = 0; i < sizeof(otherchar); i++)
	{
		AllowNickNameCharacter(otherchar[i], true);
	}
	for(new i = 'А', o = 'а'; i <= 'Я', o <= 'я'; i++)
	{
		AllowNickNameCharacter(i, true);
		AllowNickNameCharacter(o, true);
		o ++;
	}
	for(new i = '0'; i <= '9'; i++)
	{
		AllowNickNameCharacter(i, true);
	}
    mysql_function_query(mysqlConnection,"DELETE FROM `mutedip` WHERE UNIX_TIMESTAMP() - Unixtime >= 3600",true,"","");
    mysql_function_query(mysqlConnection,"SELECT * FROM `clans`",true,"LoadClans","");
    mysql_function_query(mysqlConnection,"SELECT * FROM `gangzones`",true,"LoadZones","");
    mysql_function_query(mysqlConnection,"SELECT * FROM `houses`",true,"LoadHouses","");
    
    mysql_function_query(mysqlConnection,"SELECT * FROM `news` ORDER BY nID DESC LIMIT 1",true,"LoadNews","");
	
	for (new i = 0; i < sizeof(msg_ChangeName); i++) strcat(str_ChangeName, msg_ChangeName[i]);
	for (new i = 0; i < sizeof(msg_Referal); i++) strcat(str_Referal, msg_Referal[i]);
	for (new i = 0; i < sizeof(msg_GodMode_1); i++) strcat(str_GodMode_1, msg_GodMode_1[i]);
	for (new i = 0; i < sizeof(msg_GodMode_2); i++) strcat(str_GodMode_2, msg_GodMode_2[i]);
	for (new i = 0; i < sizeof(msg_HouseName); i++) strcat(str_HouseName, msg_HouseName[i]);
	for (new i = 0; i < sizeof(msg_CarPlate); i++) strcat(str_CarPlate, msg_CarPlate[i]);
	for (new i = 0; i < sizeof(msg_Commands); i++) strcat(str_Commands, msg_Commands[i]);
	for (new i = 0; i < sizeof(msg_Control); i++) strcat(str_Control, msg_Control[i]);
	for (new i = 0; i < sizeof(msg_DonateSystem); i++) strcat(str_DonateSystem, msg_DonateSystem[i]);
	for (new i = 0; i < sizeof(msg_PromocodInfo); i++) strcat(str_PromocodInfo, msg_PromocodInfo[i]);
	for (new i = 0; i < sizeof(msg_ConfirmEmail); i++) strcat(str_ConfirmEmail, msg_ConfirmEmail[i]);
	for (new i=0;i<311;i++)
	{
        AddPlayerClass(i,488.1703,-14.2043,1000.6797,17.7887,0,0,0,0,0,0);
    }
    for (new i=0;i<MAX_VEHICLES;i++)
	{
		VehicleInfo[i][vID] = i;
		VehicleInfo[i][vHealth] = 1000.0;
		VehicleInfo[i][vLock] = 0;
		VehicleInfo[i][vLockid] = 0;
		VehicleInfo[i][vType] = 0;
		VehicleInfo[i][vOwner] = INVALID_PLAYER_ID;
		VehicleInfo[i][vGodMode] = 0.0;
		VehicleInfo[i][vText] = Create3DTextLabel(" ", 0x00FF0099, 7.77, 7.77, 7.77, 100.0, 0, 1);
		VehicleInfo[i][vAdmin] = 0;
	}
	
	for(new i=0;i<sizeof(EnterBank);i++)
	{
		EnterBank[i] = CreateDynamicPickup(19130,23,BankEnter[i][0], BankEnter[i][1], BankEnter[i][2], 0);
		CreateDynamicMapIcon(BankEnter[i][0], BankEnter[i][1], BankEnter[i][2], 52, -1, 0, 0, -1, 500.0);
	}
	weatherid = weatherarray[random(sizeof(weatherarray))];
	weathertime = GetTickCount();
	DM_OnGameModeInit();
	#include "objects"
	return 1;
}

public OnGameModeExit()
{
    mysql_close(mysqlConnection);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(PlayerInfo[playerid][Logged] == 1)
    {
	    PlayerInfo[playerid][Skin] = classid;
	    mysql_player_update_int(playerid, "Skin", PlayerInfo[playerid][Skin]);
    }
    if(!GetPVarInt(playerid, "RequestClass"))
	{
		if(SQL::RowExistsEx("accounts", "Name", PlayerInfo[playerid][Name]))
		{
			new handle = SQL::OpenEx(SQL::READ, "accounts", "Name", PlayerInfo[playerid][Name]);
	        SQL::ReadInt(handle, "Restart", PlayerInfo[playerid][Restart]);
	        SQL::Close(handle);
		} else {
			PlayerInfo[playerid][Restart] = 0;
		}
		if(!PlayerInfo[playerid][Restart])
		{
			OnPlayerRegCheck(playerid);
		} else {
			SetTimerEx("OnPlayerRegCheck", 600, false, "i", playerid);
		}
	}
	SetupPlayerForClassSelection(playerid);
	SetPVarInt(playerid, "RequestClass", 1);
	return 1;
}

forward SetupPlayerForClassSelection(playerid);
public SetupPlayerForClassSelection(playerid)
{
	SetPlayerPos(playerid, 488.1703,-14.2043,1000.6797);
	SetPlayerCameraPos(playerid, 488.1703 + (3.5 * floatsin(-70.0, degrees)), -14.2043 + (3.5 * floatcos(-70.0, degrees)), 1000.6797);
	SetPlayerCameraLookAt(playerid, 488.1703, -14.2043, 1000.6797);
	SetPlayerFacingAngle(playerid, 90.0000);
	SetPlayerVirtualWorld(playerid, VW_PLAYER + playerid);
	SetPlayerInterior(playerid, 17);
	return 1;
}

public OnPlayerConnect(playerid)
{
	gpci(playerid,PlayerInfo[playerid][GetGpci],64);
    GetPlayerName(playerid,PlayerInfo[playerid][Name],MAX_PLAYER_NAME);
    GetPlayerIp(playerid,PlayerInfo[playerid][GetIP],20);
	GetGeoIP(PlayerInfo[playerid][GetIP], PlayerInfo[playerid][GetCountry], PlayerInfo[playerid][GetCity], PlayerInfo[playerid][GetRegion], geoipDB);
    
    if(CheckAdv(PlayerInfo[playerid][Name]))
	{
		new name[MAX_PLAYER_NAME];
		format(name, MAX_PLAYER_NAME, "Спамер_%d", 10000000+random(12345678));
		SetPlayerName(playerid, name);
		format(PlayerInfo[playerid][Name], MAX_PLAYER_NAME, name, name);
	}
    
    PlayerTimer[playerid] = SetTimerEx("Timer_Player", 1000, 1, "d", playerid);
    AutoSave[playerid] = SetTimerEx("Timer_SaveTimeData", 240000, 1, "d", playerid);
    SetTimerEx("OnConnect", 500, false, "i", playerid);
    
    PlayerInfo[playerid][Label] = CreateDynamic3DTextLabel(" ", 0xFFFFFFDD, 0.0, 0.0, 0.0, 40.0, playerid, INVALID_VEHICLE_ID, 1, 0, 0, -1, 25.0);
    
    SetPlayerColor(playerid, COLOR_GREY);
    PreloadAnimations(playerid);
    ClearAccount(playerid);
    LoadPlayerTD(playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	new str[128];
	if(!PlayerInfo[playerid][Restart])
	{
		format(str, sizeof(str), "Игрок %s [%d] вышел из игры%s", PlayerInfo[playerid][Name], playerid,  DisReasons[reason]);
		SendClientMessageWithoutPlayer(CLIGHTGREEN, str, playerid);
	}
	if(PlayerInfo[playerid][Logged] == 1)
    {
		if(reason == 0)
		{
			PlayerInfo[playerid][Restart] = 1;
		}
		SendDeathMessage(INVALID_PLAYER_ID,playerid,201);
	    KillTimer(PlayerTimer[playerid]);
	    KillTimer(AutoSave[playerid]);
	    DestroyPlayerTD(playerid);
	    if(PlayerInfo[playerid][OrderVeh] != INVALID_VEHICLE_ID)
		{
			new orderveh = PlayerInfo[playerid][OrderVeh];
			VehicleInfo[orderveh][vID] = orderveh;
			VehicleInfo[orderveh][vHealth] = 1000.0;
			VehicleInfo[orderveh][vLock] = 0;
			VehicleInfo[orderveh][vType] = 0;
			VehicleInfo[orderveh][vOwner] = INVALID_PLAYER_ID;
			VehicleInfo[orderveh][vGodMode] = 0.0;
			Update3DTextLabelText(VehicleInfo[orderveh][vText],0x00FF0099," ");
			DestroyVehicle(orderveh);
		}
		if(GetPVarInt(playerid, "AdminCarCount"))
		{
			for(new i = GetVehiclePoolSize();i >= 0;i--)
			{
				if(VehicleInfo[i][vAdmin] && VehicleInfo[i][vOwner] == playerid)
				{
					DestroyVehicle(i);
				}
			}
		}
		if(PlayerInfo[playerid][House] != INVALID_HOUSE_ID)
		{
			new h  = PlayerInfo[playerid][House];
			DestroyDynamicMapIcon(PlayerInfo[playerid][HouseIcon]);
			DestroyPlayerCar(playerid);
			HouseInfo[h][hVayp] = gettime();
			mysql_house_update_int(h, "hVayp", HouseInfo[h][hVayp]);
		}
		DestroyDynamic3DTextLabel(PlayerInfo[playerid][Label]);
		Logs_Accounts(PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[playerid][GetIP], PlayerInfo[playerid][GetGpci], gettime(), "unlogin");
		PlayerInfo[playerid][Logged] = 0;
	    SavePlayerTimeData(playerid);
	    SavePlayerWeapon(playerid);
	    CancelFlyMode(playerid);
    }
	return 1;
}

public OnPlayerSpawn(playerid)
{
    SetPlayerSkin(playerid, PlayerInfo[playerid][Skin]);
   	if (PlayerInfo[playerid][Health] != 0.0)
	{
		SetPlayerHealth(playerid, PlayerInfo[playerid][Health]);
	}else{
		PlayerInfo[playerid][Health] = 100;
        SetPlayerHealth(playerid, PlayerInfo[playerid][Health]);
	}
	SetPlayerArmour(playerid, PlayerInfo[playerid][Armour]);
    SetPlayerScore(playerid, PlayerInfo[playerid][Level]);
    new srand = random(sizeof(RandomSpawn));
    SetPlayerPos(playerid, RandomSpawn[srand][0], RandomSpawn[srand][1], RandomSpawn[srand][2]);
    SetPlayerWorldBounds(playerid,20000.0000, -20000.0000, 20000.0000, -20000.0000);
    SetPlayerFacingAngle(playerid,RandomSpawn[srand][3]);
    SetPlayerVirtualWorld(playerid,0);
    SetPlayerInterior(playerid, 0);
    GiveSpawnWeapons(playerid);
    SetObjectToPlayer(playerid);
    AntiSpawnKill(playerid);
    if(PlayerInfo[playerid][JailTime])
	{
		new jrand = random(sizeof(JailSpawn));
	    SetPlayerPos(playerid, JailSpawn[jrand][0], JailSpawn[jrand][1], JailSpawn[jrand][2]);
	    SetPlayerFacingAngle(playerid,JailSpawn[jrand][3]);
		SetPlayerInterior(playerid, 10);
	}
    else if(PlayerInfo[playerid][SpecOn] == 0 && PlayerInfo[playerid][dataPos] != 0 &&
	PlayerInfo[playerid][dataPosX] != 0 && PlayerInfo[playerid][dataPosY] != 0 && PlayerInfo[playerid][dataPosZ] != 0)
	{
	    SetPlayerPos(playerid,PlayerInfo[playerid][dataPosX],PlayerInfo[playerid][dataPosY],PlayerInfo[playerid][dataPosZ]);
	    SetPlayerInterior(playerid, PlayerInfo[playerid][dataInt]);
	    SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][dataWorld]);
	    PlayerInfo[playerid][dataPosX] = 0.0;
	    PlayerInfo[playerid][dataPosY] = 0.0;
	    PlayerInfo[playerid][dataPosZ] = 0.0;
	    PlayerInfo[playerid][dataInt] = 0;
	    PlayerInfo[playerid][dataWorld] = 0;
	    PlayerInfo[playerid][dataPos] = 0;
	}
	else if(PlayerInfo[playerid][House] != INVALID_HOUSE_ID)
	{
		new hid = PlayerInfo[playerid][House];
		new intid = HouseInfo[hid][hInterior];
	    SetPlayerInterior(playerid, HouseInt[intid][Int]);
		SetPlayerPos(playerid, HouseInt[intid][CoordX], HouseInt[intid][CoordY], HouseInt[intid][CoordZ]);
		SetPlayerFacingAngle(playerid, HouseInt[intid][CoordA]);
		SetPlayerVirtualWorld(playerid, VW_HOUSE + hid);
		PlayerInfo[playerid][HouseEnter] = hid;
	}
	else if(PlayerInfo[playerid][Renter] != INVALID_HOUSE_ID)
	{
	    new hid = PlayerInfo[playerid][Renter];
		new intid = HouseInfo[hid][hInterior];
	    SetPlayerInterior(playerid, HouseInt[intid][Int]);
		SetPlayerPos(playerid, HouseInt[intid][CoordX], HouseInt[intid][CoordY], HouseInt[intid][CoordZ]);
		SetPlayerFacingAngle(playerid, HouseInt[intid][CoordA]);
		SetPlayerVirtualWorld(playerid, VW_HOUSE + hid);
		PlayerInfo[playerid][HouseEnter] = hid;
	}
	DM_SpawnPlayer(playerid, 1);
	LoadPlayerGangZones(playerid);
	SetSpawnFightingStyle(playerid);
	SetCameraBehindPlayer(playerid);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
    DropPlayerWeapons(playerid);
    
    PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
    PlayerInfo[playerid][Health] = 0.0;
	PlayerInfo[playerid][Armour] = 0.0;
	
    /*if(!strcmp(PlayerInfo[playerid][GetIP],PlayerInfo[killerid][GetIP],true))
    {
	    killerid = INVALID_PLAYER_ID;
    }*/
    
    if(killerid == INVALID_PLAYER_ID)
    {
        new killmsg[128];
	    switch(reason)
		{
		    case 255: format(killmsg,sizeof(killmsg),"{00FF00}.: Игрок {%s} %s [%d] {FFFF00} умер {00FF00}:.", PlayerInfo[playerid][ColorNick], PlayerInfo[playerid][Name],playerid);
		    case 54: format(killmsg,sizeof(killmsg),"{00FF00}.: Игрок {%s} %s [%d] {FFFF00} разбился {00FF00}:.", PlayerInfo[playerid][ColorNick], PlayerInfo[playerid][Name],playerid);
		}
		SendRadiusMessage(playerid, 30.0,COLOR_RED, killmsg);
	    SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
    }
    if(killerid != INVALID_PLAYER_ID)
    {
		new OPD_DeathMsg[64];
	    format(OPD_DeathMsg, sizeof(OPD_DeathMsg), "Убил игрока %s [%d]", PlayerInfo[playerid][Name], playerid);
	    AddPlayerEvent(killerid, OPD_DeathMsg);
	    SetPlayerChatBubble(killerid, OPD_DeathMsg, 0xFF0000FF, 50, 5000);
	    format(OPD_DeathMsg, sizeof(OPD_DeathMsg), "Убит игроком %s [%d]", PlayerInfo[killerid][Name], killerid);
	    SetPlayerChatBubble(playerid, OPD_DeathMsg, 0xFF0000FF, 50, 5000);
	    AddPlayerEvent(playerid, OPD_DeathMsg);
	    
	    new killmsg[256];
	    switch(reason)
		{
			case 0..46: format(killmsg,sizeof(killmsg),"{00FF00}.: {%s} %s [%d] {FFFF00} замочил {%s} %s [%d] {FFFF00} (%s) и получил {FF0000}500$ {00FF00} :.", PlayerInfo[killerid][ColorNick], PlayerInfo[killerid][Name],killerid,PlayerInfo[playerid][ColorNick],PlayerInfo[playerid][Name],playerid,wName[reason]);
		    case 49: format(killmsg,sizeof(killmsg),"{00FF00}.: {%s} %s [%d] {FFFF00} замочил {%s} %s [%d] {FFFF00} (Задавил) и получил {FF0000}500$ {00FF00} :.", PlayerInfo[killerid][ColorNick], PlayerInfo[killerid][Name],killerid,PlayerInfo[playerid][ColorNick],PlayerInfo[playerid][Name],playerid);
		    case 50: format(killmsg,sizeof(killmsg),"{00FF00}.: {%s} %s [%d] {FFFF00} замочил {%s} %s [%d] {FFFF00} (Зарезал) и получил {FF0000}500$ {00FF00} :.", PlayerInfo[killerid][ColorNick], PlayerInfo[killerid][Name],killerid,PlayerInfo[playerid][ColorNick],PlayerInfo[playerid][Name],playerid);
		    case 51: format(killmsg,sizeof(killmsg),"{00FF00}.: {%s} %s [%d] {FFFF00} замочил {%s} %s [%d] {FFFF00} (Взрыв) и получил {FF0000}500$ {00FF00} :.", PlayerInfo[killerid][ColorNick], PlayerInfo[killerid][Name],killerid,PlayerInfo[playerid][ColorNick],PlayerInfo[playerid][Name],playerid);
		}
		SendRadiusMessage(playerid, 30.0, COLOR_RED, killmsg);
		SendDeathMessage(killerid, playerid, reason);
		
		SetPlayerMoney(killerid, PlayerInfo[killerid][Money]+500);
        SetPlayerKills(killerid, PlayerInfo[killerid][Kills]+1);
        SetPlayerDeaths(playerid, PlayerInfo[playerid][Death]+1);
	    PlayerInfo[killerid][KillSeries] += 1;
	    
	    if(PlayerInfo[killerid][KillSeries] >= 3)
	    {
		    new strseries[128];
		    if (PlayerInfo[killerid][KillSeries] >= 5 && PlayerInfo[killerid][KillSeries] <= 5)
		    {
				format(strseries,sizeof(strseries),"Игрок %s [%d] совершил серию убийств",PlayerInfo[killerid][Name],killerid);
				SendClientMessageToAll(0xFF9900AA, strseries);
		    }
		    if (PlayerInfo[killerid][KillSeries] >= 10 && PlayerInfo[killerid][KillSeries] <= 10)
		    {
				format(strseries,sizeof(strseries),"Игрок %s [%d] в ярости!",PlayerInfo[killerid][Name],killerid);
				SendClientMessageToAll(0xFF9900AA, strseries);
		    }
		    if (PlayerInfo[killerid][KillSeries] >= 20 && PlayerInfo[killerid][KillSeries] <= 20)
		    {
				format(strseries,sizeof(strseries),"Игрок %s [%d] непредеодолим!",PlayerInfo[killerid][Name],killerid);
				SendClientMessageToAll(0xFF9900AA, strseries);
		    }
		    if (PlayerInfo[killerid][KillSeries] >= 25 && PlayerInfo[killerid][KillSeries] <= 25)
		    {
				format(strseries,sizeof(strseries),"Игрок %s [%d] ПОДОБЕН БОГУ!!!",PlayerInfo[killerid][Name],killerid);
				SendClientMessageToAll(0xFF9900AA, strseries);
		    }
		    if (PlayerInfo[killerid][KillSeries] >= 30 && PlayerInfo[killerid][KillSeries] <= 30)
		    {
				format(strseries,sizeof(strseries),"Игрок %s [%d] МОНСТР УБИЙЦА",PlayerInfo[killerid][Name],killerid);
				SendClientMessageToAll(0xFF9900AA, strseries);
		    }
		    if (PlayerInfo[playerid][KillSeries] >= 5)
		    {
				format(strseries,sizeof(strseries),"Игрок %s [%d] прекратил серию убийств игрока %s [%d]",PlayerInfo[killerid][Name],killerid,PlayerInfo[playerid][Name],playerid);
				SendClientMessageToAll(0xFF9900AA, strseries);
				PlayerInfo[playerid][KillSeries] = 0;
		    }
		    if(PlayerInfo[killerid][KillSeries] % 10 == 0)
		    {
				format(strseries,sizeof(strseries),"За серию из %d убийств вы получаете опыт!",PlayerInfo[killerid][KillSeries]);
				SendClientMessage(killerid,0x00ff00ff,strseries);
				GivePlayerKillExp(killerid, playerid, 5);
		    }
		    
		    DM_OnPlayerDeath(playerid, killerid, reason);
	    }
    
	    if (killerid != playerid)
		{
			if (PlayerInfo[playerid][Level] < PlayerInfo[killerid][Level])
			{
				GivePlayerKillExp(killerid, playerid, 1);
			}
			else if (PlayerInfo[playerid][Level] > PlayerInfo[killerid][Level])
			{
				GivePlayerKillExp(killerid, playerid, 3);
	  		}
	     	else
	      	{
				GivePlayerKillExp(killerid, playerid, 2);
	  		}
		}
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	SetTimerEx("RespawnVehicle", 3000, false, "d", vehicleid);
	return 1;
}

public OnPlayerText(playerid, text[])
{
    if(strlen(text) > 100) strdel(text, 100, strlen(text));
    if(text[0] == '.')
	{
		text[0] = '/';
		PC_EmulateCommand(playerid, text);
		return false;
	}
	if(PlayerInfo[playerid][Logged] != 1)
	{
	    SendClientMessage(playerid,COLOR_LIGHTRED,"Залогинься, чтобы писать в чат");
		return 0;
	}
	else
	{
	    if(PlayerInfo[playerid][SpecOn] == 1)
 	    {
		    SendClientMessage(playerid, COLOR_GREY, "Ты наблюдаешь");
		    return false;
	    }
		else if(strlen(text) > 70)
		{
			SendClientMessage(playerid, COLOR_GREY, "Укороти сообщение");
			return false;
		}
		else if(AntiFlood(playerid, text)) return false;
		else if(text[0] == '!' && PlayerInfo[playerid][Clan] != 0)
        {
	        if(emptyMessage(text[1]))
			{
				SendClientMessage(playerid, COLOR_GREY, "Введи текст");
			}
			else
			{
				new string[128];
				AntiCaps(text);
				format(string, sizeof(string), "{00FFFF}%s %s [%d]: %s", GetRankName(PlayerInfo[playerid][ClanRank]), PlayerInfo[playerid][Name], playerid, text[1]);
				SendTeamMessage(PlayerInfo[playerid][Clan],0x00FFFFAA,string);
			}
			return 0;
	    }
		else if(text[0] == '*')
		{
			new suspect = GetClosestPlayer(playerid);
            if(emptyMessage(text[1]))
			{
				SendClientMessage(playerid, COLOR_GREY, "Ты ничего не ввёл");
			}
			else if(!ProxDetectorS(50.0, playerid, suspect))
			{
				SendClientMessage(playerid, COLOR_GREY, "Рядом никого нет");
			}
			else if(PlayerInfo[playerid][MuteTime] > 0)
			{
		    	new mes[70];
		    	format(mes,sizeof(mes),"Ты не можешь говорить, ты заглушен на %s",MTF(PlayerInfo[playerid][MuteTime]));
		    	SendClientMessage(playerid,COLOR_RED,mes);
			}
			else if(CheckAdv(text))
			{
				new string[128];
				format(string, sizeof(string), "Админам(в чат не вывелось): %s:[%d]: %s",PlayerInfo[playerid][Name], playerid, text);
			    SendClientMessage(playerid,0x00FF7FAA,string);
				SendClientMessage(playerid,CRED,"Подозрение на рекламу");
			}
			else
			{
				new str[128],rud[128], Float:P[3],strex[128];
				GetPlayerPos(playerid,P[0],P[1],P[2]);
				strdel(text,0,0);
				AntiCaps(text[1]);
				for(new i;i<=GetPlayerPoolSize();i++)
				{
					if(!IsPlayerConnected(i) || !IsPlayerInRangeOfPoint(i,50.0,P[0],P[1],P[2]) || !PlayerInfo[i][EarsRCHAT]) continue;
					ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1,1);
					format(str,128,"%s: {%s}[%d] (рядом): %s",PlayerInfo[playerid][Name],PlayerInfo[playerid][ColorChat],playerid, text[1]);
					SendClientMessage(i, GetPlayerColor(playerid),str);
		        }
		        for(new i;i<=GetPlayerPoolSize();i++)
				{
					if(PlayerInfo[i][AdminLevel] >= 100 && !IsPlayerInRangeOfPoint(i,50.0,P[0],P[1],P[2]))
					{
						format(rud,128,"{6699CC}%s: [%d] (рядом): %s",PlayerInfo[playerid][Name],playerid,text[1]);
						SendClientMessage(i, 0xFFFFFFAA,rud);
					}
				}
				SetPlayerChatBubble(playerid, strex, COLOR_RED, 10.0, 1000);
				format(str, 128, "Сообщение рядом: %s", text[1]);
	            AddPlayerEvent(playerid, str);
            }
            return 0;
		}
		if(emptyMessage(text))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ты ничего не ввёл");
		}
		else if(PlayerInfo[playerid][MuteTime] > 0)
		{
	    	new mes[70];
	    	format(mes,sizeof(mes),"Ты не можешь говорить, ты заглушен на %s",MTF(PlayerInfo[playerid][MuteTime]));
	    	SendClientMessage(playerid,COLOR_RED,mes);
		}
		else if(CheckAdv(text))
		{
			new string[128];
			format(string, sizeof(string), "Админам(в чат не вывелось): %s:[%d]: %s",PlayerInfo[playerid][Name], playerid, text);
	        SendClientMessage(playerid,0x00FF7FAA,string);
			SendClientMessage(playerid,CRED,"Подозрение на рекламу");
		}
		else
		{
			new strtext[128];
			AntiCaps(text);
			ReplaceChat(playerid, text);
			format(strtext, 128, "%s: {%s}[%d]: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ColorChat], playerid, text);
			SendClientMessageWithoutPlayer(GetPlayerColor(playerid), strtext);
			format(strtext, 128, "Сообщение в чат: %s", text);
			AddPlayerEvent(playerid, strtext);
		}
	}
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	new cmd[20], params[96];
	sscanf(cmdtext, "s[20]s[96]", cmd, params);
	if(!strcmp(cmd, "/инттест", true))
	{
		if(IsAdminAccess(playerid,2000)) return 1;
		new intid;
		sscanf(params, "d", intid);
		if(emptyMessage(params)) return SendClientMessage(playerid,CGRAY,"Введи /инттест [Номер инт]");
		if(intid > (sizeof(HouseInt))-1 || intid < 0) return false;
		SetPlayerInterior(playerid, HouseInt[intid][Int]);
		SetPlayerPos(playerid, HouseInt[intid][CoordX], HouseInt[intid][CoordY], HouseInt[intid][CoordZ]);
		SetPlayerFacingAngle(playerid, HouseInt[intid][CoordA]);
	}
	else if(!strcmp(cmd, "/урдом", true))
	{
		if(IsAdminAccess(playerid,2000)) return 1;
		new hid,level, query[128];
		sscanf(params, "dd", hid,level);
		if(emptyMessage(params)) return SendClientMessage(playerid, CGRAY, "Введи /урдом [Номер дома] [уровень]");
		if(level < 1 || level > 650) return SendClientMessage(playerid, CGRAY, "Неверный уровень");
		if(hid < 0 || hid > houseid-1) return SendClientMessage(playerid, CGRAY, "Неверный номер");
		HouseInfo[hid][hLevel] = level;
		HouseInfo[hid][hInterior] = SetHouseRandomInt(level);
		UpdateHouse(hid);
		SendClientMessage(playerid, -1, "Уровень и цена дома изменена");
		mysql_format(mysqlConnection, query, sizeof(query), "UPDATE `houses` SET `hLevel` = '%d', `hInterior` = '%d' WHERE `hID` = '%d'", HouseInfo[hid][hLevel], HouseInfo[hid][hInterior], hid);
  	    mysql_tquery(mysqlConnection, query, "", "");
		return true;
	}
	else if(!strcmp(cmd, "/интдом", true))
	{
		if(IsAdminAccess(playerid,2000)) return 1;
		new hid,interior, query[128];
		sscanf(params, "dd", hid,interior);
		if(emptyMessage(params)) return SendClientMessage(playerid, CGRAY, "Введи /интдом [Номер дома] [интерьер]");
		if(interior < 0 || interior > (sizeof(HouseInt))-1) return SendClientMessage(playerid, CGRAY, "Неверный интерьер");
		if(hid < 0 || hid > houseid-1) return SendClientMessage(playerid, CGRAY, "Неверный номер");
		HouseInfo[hid][hInterior] = interior;
	    SetPlayerInterior(playerid, HouseInt[interior][Int]);
		SetPlayerPos(playerid, HouseInt[interior][CoordX], HouseInt[interior][CoordY], HouseInt[interior][CoordZ]);
		SetPlayerFacingAngle(playerid, HouseInt[interior][CoordA]);
		SetPlayerVirtualWorld(playerid, VW_HOUSE + hid);
		PlayerInfo[playerid][HouseEnter] = hid;
		SendClientMessage(playerid, -1, "Интерьер дома изменен, вы телепортировались внутрь");
		mysql_format(mysqlConnection, query, sizeof(query), "UPDATE `houses` SET `hInterior` = '%d' WHERE `hID` = '%d'", HouseInfo[hid][hInterior], hid);
  	    mysql_tquery(mysqlConnection, query, "", "");
		return true;
	}
	else if(!strcmp(cmd, "/ддом", true))
	{
		if(IsAdminAccess(playerid,2000)) return 1;
		if(OnHouseEnter(playerid) != INVALID_HOUSE_ID) return SendClientMessage(playerid, CGRAY, "Слишком близко к другому дому");
		new level;
		sscanf(params, "d",level);
		if(emptyMessage(params)) return SendClientMessage(playerid, CGRAY, "Введи /ддом [Уровень]");
		if(level < 1 || level > 650) return SendClientMessage(playerid, CGRAY, "Неверный уровень");
		new strr[256];
		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		HouseInfo[houseid][hEnterX] = pos[0];
		HouseInfo[houseid][hEnterY] = pos[1];
		HouseInfo[houseid][hEnterZ] = pos[2];
		HouseInfo[houseid][hLevel] = level;
		HouseInfo[houseid][hInfo] = CreateDynamic3DTextLabel(" ", 0x45D14DFF, HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,10.0);
        CreateDynamic3DTextLabel("Встав на иконку и нажав клавишу N откроется меню о доме", 0x00FF00DD, HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ]+0.4, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, -1, -1, 6.0);
        UpdateHouse(houseid);
		format(strr, sizeof(strr), "INSERT INTO `houses` (`hOwner`, `hOwnedID`, `hLevel`, `hEnterX`, `hEnterY`, `hEnterZ`, `hEnterA`, `hID`) VALUES ('%s', '%d', '%d', '%d', '%f', '%f', '%f', '%i')",
		HouseInfo[houseid][hOwner], HouseInfo[houseid][hOwnedID], HouseInfo[houseid][hLevel], HouseInfo[houseid][hEnterX], HouseInfo[houseid][hEnterY], HouseInfo[houseid][hEnterZ], houseid);
	    mysql_tquery(mysqlConnection, strr, "", "");
	    houseid ++;
		return true;
	}
	else if(!strcmp(cmd, "/дкар", true))
	{
		new hid;
		sscanf(params, "d",hid);
		if(emptyMessage(params)) return SendClientMessage(playerid, CGRAY, "Введи /дкар [Номер дома]");
		if(hid < 0 || hid > houseid-1) return SendClientMessage(playerid, CGRAY, "Неверный номер");
		new vehicleid = GetPlayerVehicleID(playerid);
		new Float:x, Float:y, Float:z, Float:r;
		GetVehiclePos(vehicleid,x,y,z);
		GetVehicleZAngle(vehicleid,r);
		HouseInfo[hid][hCarX] = x;
		HouseInfo[hid][hCarY] = y;
		HouseInfo[hid][hCarZ] = z;
		HouseInfo[hid][hCarA] = r;
		new query[128];
		format(query,sizeof(query),"UPDATE `houses` SET `hCarX`='%f', `hCarY`='%f', `hCarZ`='%f', `hCarA`='%f' WHERE `hID`='%d'",HouseInfo[hid][hCarX],HouseInfo[hid][hCarY],HouseInfo[hid][hCarZ],HouseInfo[hid][hCarA],hid);
	    mysql_tquery(mysqlConnection, query, "", "");
		SendClientMessage(playerid,-1,"Парковочное место к дому установлено");
		return true;
	}
	return false;
}

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
	if(PlayerInfo[playerid][Logged] != 1)
	{
	    SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	    return 0;
	}
	if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   SendClientMessage(playerid,CRED,mes);
	   return 0;
	}
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(autocorrection_cmd(playerid, cmd))
	{
		return 0;
	}
	for(new i = GetPlayerPoolSize(); i >= 0; i--)
	{
		if(IsPlayerConnected(i) && IsAdminAccess(playerid,500,1) && PlayerInfo[i][EarsCMD])
		{
			SendClientMessagef(i,CRED,"%s [%d] ввел комманду /%s %s",PlayerInfo[playerid][Name], playerid, cmd, params);
		}
	}
    if(result == -1)
    {
	    SendClientMessage(playerid,CGRAY,"Такой команды не существует");//, клавиша Y - Информация - Команды
        return 0;
    }
    return 1;
}

stock autocorrection_cmd(playerid, string[])
{
	if(!PC_CommandExists(string))
	{
	    switch(string[0])
	    {
		    case 'А'..'Я':
	        {
		        for(new i; i<strlen(string); i++)
	            {
					string[i] = tolower(string[i]);
	            }
	            format(string, 96, "/%s", string);
			    PC_EmulateCommand(playerid, string);
			    return 1;
	        }
	        case 'a'..'z', 'A'..'Z':
	        {
		        for(new i; i<strlen(string); i++)
	            {
		            switch(string[i])
		            {
				        case 'q','Q': string[i] = 'й';
			            case 'w','W': string[i] = 'ц';
			            case 'e','E': string[i] = 'у';
			            case 'r','R': string[i] = 'к';
			            case 't','T': string[i] = 'е';
			            case 'y','Y': string[i] = 'н';
			            case 'u','U': string[i] = 'г';
			            case 'i','I': string[i] = 'ш';
			            case 'o','O': string[i] = 'щ';
			            case 'p','P': string[i] = 'з';
			            case 'a','A': string[i] = 'ф';
			            case 's','S': string[i] = 'ы';
			            case 'd','D': string[i] = 'в';
			            case 'f','F': string[i] = 'а';
			            case 'g','G': string[i] = 'п';
			            case 'h','H': string[i] = 'р';
			            case 'j','J': string[i] = 'о';
			            case 'k','K': string[i] = 'л';
			            case 'l','L': string[i] = 'д';
			            case 'z','Z': string[i] = 'я';
			            case 'x','X': string[i] = 'ч';
			            case 'c','C': string[i] = 'с';
			            case 'v','V': string[i] = 'м';
			            case 'b','B': string[i] = 'и';
			            case 'n','N': string[i] = 'т';
			            case 'm','M': string[i] = 'ь';
					}
				}
				format(string, 96, "/%s", string);
				PC_EmulateCommand(playerid, string);
				return 1;
			}
		}
	}
    return 0;
}

cmd:test(playerid, params[])
{
	if(IsAdminAccess(playerid,2000)) return 1;
	sscanf(params, "dd",params[0], params[1]);
	switch(params[0])
	{
		case 1:
		{
		    new mes[(sizeof(HouseInfo)*3)+32], count, logo[64];
		    for(new hid = 0; hid < houseid; hid++)
		    {
				if(HouseInfo[hid][hCarX] == 0.0 && HouseInfo[hid][hCarY] == 0.0 && HouseInfo[hid][hCarZ] == 0.0)
			    format(mes,sizeof(mes),"%s%d\n",mes,hid);
			    else count ++;
		    }
		    format(logo,sizeof(logo),"{"#COLOR_DIALOG_MENU"}Домов с транспортом:%d",count);
		    ShowPlayerDialog(playerid,6666,DIALOG_STYLE_LIST,logo,mes,"Выбрать","Назад");
	    }
	    case 2:
		{
		    new str[256],sctring[1024];
			f(str,"{"#cYELLOW"}Оружие на респаун:\n");
			strcat(sctring,str);
			for (new i = 0; i < 13; i++)
			{
				//new weap = PlayerInfo[playerid][Weapon][i];
				f(str,"{"#cWHITE"}%s:\t%4d\n", "21313dd", PlayerInfo[playerid][Ammo][i]);
				strcat(sctring,str);
			}
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Тест",sctring,"Выход","Назад");
		}
		case 3:
		{
			Mute(playerid, "Денис™", "86400", "Кекнутый)))1Адын", PlayerInfo[playerid][MuteTime], PlayerInfo[playerid][MuteCount]);
		}
	}
    return 1;
}
alias:test("тест");

cmd:animid(playerid, params[])
{
	new animlib[24], animname[24], animid, Float:Velocity[3];
	if(sscanf(params,"d", animid) || (animid < 1 || animid > 1812)) animid = GetPlayerAnimationIndex(playerid);
	GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
	GetAnimationName(animid, animlib, sizeof(animlib), animname, sizeof(animname));
	SendClientMessagef(playerid, -1, "Анимация %d Библиотека %s Название %s Скорость %.2f %.2f %.2f", animid, animlib, animname, Velocity[0], Velocity[1], Velocity[2]);
    return 1;
}
alias:animid("анимация");

cmd:changemode(playerid, params[])
{
	new modename[64];
    if(IsAdminAccess(playerid,2000)) return 1;
    if(sscanf(params,"s[64]",modename)) return SendClientMessage(playerid,CGRAY,"Введи /сменитьмод [название мода]");
    format(modename, sizeof(modename), "changemode %s", modename);
    SendRconCommand(modename);
    return 1;
}
alias:changemode("сменитьмод");

cmd:hostname(playerid, params[])
{
	new hostname[64];
    if(IsAdminAccess(playerid,2000)) return 1;
    if(sscanf(params,"s[64]",hostname)) return SendClientMessage(playerid,CGRAY,"Введи /имясервера [название сервера]");
    format(hostname, sizeof(hostname), "hostname %s", hostname);
    SendRconCommand(hostname);
    return 1;
}
alias:hostname("имясервера");

cmd:loadfs(playerid, params[])
{
	new scriptname[64];
    if(IsAdminAccess(playerid,2000)) return 1;
    if(sscanf(params,"s[64]",scriptname)) return SendClientMessage(playerid,CGRAY,"Введи /вклфс [название FS]");
    LoadFilterScript(scriptname);
    return 1;
}
alias:loadfs("вклфс");

cmd:unloadfs(playerid, params[])
{
	new scriptname[64];
    if(IsAdminAccess(playerid,2000)) return 1;
    if(sscanf(params,"s[64]",scriptname)) return SendClientMessage(playerid,CGRAY,"Введи /выклфс [название FS]");
    UnLoadFilterScript(scriptname);
    return 1;
}
alias:unloadfs("выклфс");

cmd:fs(playerid, params[])
{
	new scriptname[64];
    if(IsAdminAccess(playerid,2000)) return 1;
    if(sscanf(params,"s[64]",scriptname)) return SendClientMessage(playerid,CGRAY,"Введи /фс [название FS]");
    format(scriptname, sizeof(scriptname), "reloadfs %s",scriptname);
    SendRconCommand(scriptname);
    return 1;
}
alias:fs("фс");

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new vid = GetPlayerVehicleID(playerid);
	    if(GetPlayerVehicleSeat(playerid) == 0)
		{
			PlayerInfo[playerid][CarLock] = vid;
			if(PlayerInfo[playerid][GodMode])
			{
				if(VehicleInfo[vid][vGodMode] == 0.0)
				{
					VehicleInfo[vid][vGodMode] = VehicleInfo[vid][vHealth];
				}
			}else{
				if(VehicleInfo[vid][vGodMode] != 0.0)
				{
					SetVehicleHealth(vid,VehicleInfo[vid][vGodMode]);
					VehicleInfo[vid][vHealth] = VehicleInfo[vid][vGodMode];
					VehicleInfo[vid][vGodMode] = 0.0;
				}
			}
			
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
		return 0;
	}
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(DropType[pickupid] == 1)
	{
        GivePlayerWeapon(playerid,DropWeapon[pickupid],DropAmmo[pickupid]);
        KillTimer(DestroyDropTimer[pickupid]);
        DestroyDropPickup(pickupid);
	}
	if(DMDropWeapon[pickupid] != 0)
	{
	    GivePlayerWeapon(playerid,DropWeapon[pickupid],minrandom(25, 60));
	    DestroyDropPickup(pickupid);
	}
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	GetPlayerPos(playerid, PlayerInfo[playerid][PickupPos][0], PlayerInfo[playerid][PickupPos][1], PlayerInfo[playerid][PickupPos][2]);
	if(PlayerInfo[playerid][FloodPickup] > 0) return false;
	PlayerInfo[playerid][FloodPickup] = 3;
	for(new i=0;i<sizeof(EnterBank);i++)
	{
		if(pickupid == EnterBank[i])
		{
			if(i == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, PlayerInfo[playerid][ExitBank][0], PlayerInfo[playerid][ExitBank][1], PlayerInfo[playerid][ExitBank][2]);
			}
			else
			{
				GetPlayerPos(playerid, PlayerInfo[playerid][ExitBank][0], PlayerInfo[playerid][ExitBank][1], PlayerInfo[playerid][ExitBank][2]);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, BankEnter[0][0], BankEnter[0][1], BankEnter[0][2]);
			}
		}
	}
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(vehicleid == PlayerInfo[playerid][carGUID])
    {
	    new savecarcomponent[96];
		PlayerInfo[playerid][carComponent][GetVehicleComponentType(componentid)] = componentid;
        for (new i = 0; i < MAX_VEHICLE_COMPONENTS; i++)
		{
			format(savecarcomponent, sizeof(savecarcomponent), "%s%d ", savecarcomponent, PlayerInfo[playerid][carComponent][i]);
		}
        mysql_player_update_str(playerid, "carComponents", savecarcomponent);
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    if(vehicleid == PlayerInfo[playerid][carGUID])
    {
	    PlayerInfo[playerid][carPaintjob] = paintjobid;
	    mysql_player_update_int(playerid, "carPaintjob", PlayerInfo[playerid][carPaintjob]);
    }
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(vehicleid == PlayerInfo[playerid][carGUID])
    {
	    new savecarcolor[64];
    	PlayerInfo[playerid][carColor][0] = color1;
		PlayerInfo[playerid][carColor][1] = color2;
        for (new i = 0; i < 2; i++)
		{
			format(savecarcolor, sizeof(savecarcolor), "%s%d ", savecarcolor, PlayerInfo[playerid][carColor][i]);
		}
        mysql_player_update_str(playerid, "carColors", savecarcolor);
    }
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if ((newkeys==KEY_YES))
	{
        ShowMenu(playerid, d_Menu);
	}
	if (newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsPlayerFlyMode(playerid))
		{
			CancelFlyMode(playerid);
			return 1;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
		{
			SpecPlayerOff(playerid);
			return 1;
		}
		if(OnHouseEnter(playerid) > INVALID_HOUSE_ID)
		{
			if(GetPlayerVirtualWorld(playerid) != 0 && GetPlayerVirtualWorld(playerid) != VW_HOUSE + PlayerInfo[playerid][HouseEnter]) return 1;
			new hid = OnHouseEnter(playerid);
			new intid = HouseInfo[hid][hInterior];
			if(PlayerInfo[playerid][House] != hid && HouseInfo[hid][hLocked] == 1 && PlayerInfo[playerid][Renter] != hid) return GameTextForPlayer(playerid, "~r~Locked", 1000, 3);
	        SetPlayerInterior(playerid, HouseInt[intid][Int]);
			SetPlayerPos(playerid, HouseInt[intid][CoordX], HouseInt[intid][CoordY], HouseInt[intid][CoordZ]);
			SetPlayerFacingAngle(playerid, HouseInt[intid][CoordA]);
			SetPlayerVirtualWorld(playerid, VW_HOUSE + hid);
			PlayerInfo[playerid][HouseEnter] = hid;
		}
		if(OnHouseEnter(playerid) == INVALID_HOUSE_ID && PlayerInfo[playerid][HouseEnter] != INVALID_HOUSE_ID)
		{
			if(GetPlayerVirtualWorld(playerid) != 0 && GetPlayerVirtualWorld(playerid) != VW_HOUSE + PlayerInfo[playerid][HouseEnter]) return 1;
			new hid = PlayerInfo[playerid][HouseEnter];
			SetPlayerPos(playerid,HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ]);
			SetPlayerInterior(playerid,0);
	        SetPlayerVirtualWorld(playerid,0);
	        PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
		}
	}
	if(newkeys == KEY_NO || newkeys == KEY_ANALOG_LEFT)
	{
		if(GetPlayerVirtualWorld(playerid) != 0) return 1;
		if(OnHouseEnter(playerid) > INVALID_HOUSE_ID)
		{
			ShowHouse(playerid,d_HouseMenu);
			return 1;
		}
		if(PlayerInfo[playerid][House] != INVALID_HOUSE_ID && PlayerInfo[playerid][carGUID] != INVALID_VEHICLE_ID)
		{
			new vehicleid = PlayerInfo[playerid][carGUID];
		    if(VehicleInfo[vehicleid][vLock] == 0)
		    {
			    ToggleCarLock(PlayerInfo[playerid][carGUID], 1);
			    GameTextForPlayer(playerid, "~w~Домашний транспорт\n ~r~Закрыт", 3000, 4);
		    }
			else
			{
				ToggleCarLock(PlayerInfo[playerid][carGUID], 0);
				GameTextForPlayer(playerid, "~w~Домашний транспорт\n ~g~Открыт", 3000, 4);
			}
			UpdateVehicle(vehicleid);
			return 1;
		}
	}
	if(newkeys == 16384)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
		{
            new vehicleid = PlayerInfo[playerid][CarLock];
			if(VehicleInfo[vehicleid][vLock] == 0)
		    {
				ToggleCarLock(PlayerInfo[playerid][CarLock], 1);
				GameTextForPlayer(playerid, "~w~Авто ~r~Закрыто", 3000, 4);
			} else {
				ToggleCarLock(PlayerInfo[playerid][CarLock], 0);
				GameTextForPlayer(playerid, "~w~Авто ~n~~g~Открыто", 2000, 4);
			}
			UpdateVehicle(vehicleid);
		}
		else
		{
			if(PlayerInfo[playerid][CarLock] != INVALID_VEHICLE_ID)
			{
				GameTextForPlayer(playerid, "~w~Авто ~n~~g~Открыто", 3000, 4);
				ToggleCarLock(PlayerInfo[playerid][CarLock], 0);
				UpdateVehicle(PlayerInfo[playerid][CarLock]);
				PlayerInfo[playerid][CarLock] = INVALID_VEHICLE_ID;
			}
			else
			{
				SendClientMessage(playerid, 0xAFAFAFAA, "Залезь в транспорт водилой, чтобы закрыть его");
			}
		}
	}
	if(newkeys == 1152)
    {
		if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID)
		{
			SetPVarInt(playerid, "ClickPlayer", GetPlayerTargetPlayer(playerid));
			ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
		}
    }
	if(newkeys == 1024)
	{
		if(PlayerInfo[playerid][SpecOn] == 1)
		{
			SetPVarInt(playerid, "ClickPlayer", GetPVarInt(playerid, "SpecID"));
			ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
		}
	}
	if(newkeys == 128)
	{
		if(PlayerInfo[playerid][SpecOn] == 1)
		{
			SpecPrev(playerid);
		}
	}
	if(newkeys == 4)
	{
		if(PlayerInfo[playerid][SpecOn] == 1)
		{
			SpecNext(playerid);
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

public OnPlayerUpdate(playerid)
{
    if(GetPlayerInterior(playerid) && GetPlayerWeapon(playerid))
	{
		SetPlayerArmedWeapon(playerid, 0);
	}
	if(PlayerInfo[playerid][GodMode] && GetPlayerWeapon(playerid))
	{
		ResetPlayerWeapons(playerid);
	}
    if(GetPlayerDrunkLevel(playerid) < 100)
	{
		SetPlayerDrunkLevel(playerid, 2000);
	}
	else
	{
		if(PlayerInfo[playerid][LastDrunk] != GetPlayerDrunkLevel(playerid))
		{
			new GotFPS = PlayerInfo[playerid][LastDrunk] - GetPlayerDrunkLevel(playerid);
			PlayerInfo[playerid][LastDrunk] = GetPlayerDrunkLevel(playerid);
			if((GotFPS > 0) && (GotFPS < 256))
			{
                PlayerInfo[playerid][FPS] = GotFPS;
			}
		}
	}
    if (PlayerInfo[playerid][MapTP] == 1)
    {
    	new Float: X, Float: Y, Float: Z; GetPlayerPos(playerid, X, Y, Z);
    	if (PlayerInfo[playerid][MapTPx] != X || PlayerInfo[playerid][MapTPy] != Y) Z = -5.0;
        if (Z < 0)
        {
            PlayerInfo[playerid][MapTPTry]++;
            if (PlayerInfo[playerid][MapTPTry] < 10) SetPlayerPosFindZ(playerid, PlayerInfo[playerid][MapTPx], PlayerInfo[playerid][MapTPy], 10000);
            else
            {
                SetPlayerPos(playerid, PlayerInfo[playerid][MapTPx], PlayerInfo[playerid][MapTPy], 1);
            }
        }
        else
        {
            PlayerInfo[playerid][MapTP] = 0;
        }
    }
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    GetVehicleHealth(vehicleid,VehicleInfo[vehicleid][vHealth]);
	    UpdateVehicle(vehicleid);
    }
    UpdateIndicator(playerid);
    if(GetPlayerPacketLoss(playerid) > 10)
    {
	    printf("Laggerid: %d GetPlayerPacketLoss: %f",playerid, GetPlayerPacketLoss(playerid));
    }
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	PlayerInfo[playerid][Dialog] = 0;
	switch(dialogid)
	{
    	case d_Menu:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case mn_Admin: ShowAdmin(playerid, d_AdminMenu);
			 		case mn_Clans: ShowClanMenu(playerid, d_ClanMenu);
			 		case mn_GangZones: ShowZoneMenu(playerid, d_GangZones);
			 		case mn_TeleportList: TeleportMenu(playerid);
			 		case mn_Other: ShowMenu(playerid, d_Other);
			 		case mn_Info: ShowMenu(playerid, d_Info);
			 		case mn_Donate: ShowDonate(playerid, d_DonateMenu);
				}
			}
      	}
      	case d_Other:
     	{
            if(response)
			{
     			switch(DLItemID)
				{
			 		case mn_Options: ShowMenu(playerid, d_Options);
			 		case mn_Upgrade: ShowMenu(playerid, d_Upgrade);
			 		case mn_ObjectToPL: ShowObjectToPlayer(playerid);
			 		case mn_Chat: ShowMenu(playerid, d_Chat);
			 		case mn_Setting: ShowMenu(playerid, d_Setting);
			 		case mn_Kill: ShowMenu_input(playerid, "mn_Kill_input");
				}
			}
			else ShowMenu(playerid, d_Menu);
      	}
      	case d_Info:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case mn_Control: ShowMenu_input(playerid, "mn_Control_input");
			 		case mn_Command: ShowMenu_input(playerid, "mn_Command_input");
			 		//case mn_Anim: return 1;
			 		case mn_Stats: ShowStats(playerid,playerid,"Stats");
			 		case mn_pointerHouse: ShowMenu_input(playerid, "mn_pointerHouse_input");
			 		case mn_searchNick: ShowMenu_input(playerid, "mn_searchNick_input");
			 		case mn_searchAccount: ShowMenu_input(playerid, "mn_searchAccount_input");
			 		case mn_ReadNews: ShowNews(playerid);
			 		case mn_admList: ShowMenu_input(playerid, "mn_admList_input");
				}
			}
			else ShowMenu(playerid, d_Menu);
      	}
      	case d_Options:
     	{
            if(response)
			{
     			switch(DLItemID)
				{
			 		case mn_changeName: ShowMenu_input(playerid, "mn_changeName_input");
			 		case mn_changePass: ShowMenu_input(playerid, "mn_changePass_input");
			 		case mn_changeCode: ShowMenu_input(playerid, "mn_changeCode_input");
			 		case mn_changeSkin: ShowMenu_input(playerid, "mn_changeSkin_input");
			 		case mn_Email: ShowMenu(playerid, d_Email);
			 		case mn_Referal: ShowMenu_input(playerid, "mn_Referal_input");
				}
			}
			else ShowMenu(playerid, d_Other);
      	}
      	case d_Email:
     	{
            if(response)
			{
     			switch(DLItemID)
				{
			 		case mn_emailSend:
					{
						if(!strcmp(PlayerInfo[playerid][Email], " ", true))
						{
						    ShowMenu(playerid, d_Email);
							return SendClientMessage(playerid,0xAFAFAFAA,"Email не введён");
						}
						SendClientMessage(playerid,0x00FF00AA,"На почтовый ящик прислано письмо и информацией об аккаунте");
						SenderEmail(playerid);
					}
			 		case mn_emailChange: ShowMenu_input(playerid, "mn_emailChange_input");
			 		case mn_emailCheck: ShowMenu_input(playerid, "mn_emailCheck_input");
				}
			}
			else ShowMenu(playerid, d_Options);
      	}
      	case d_Upgrade:
     	{
            if(response)
			{
     			switch(DLItemID)
				{
			 		case mn_upgradeWeapons: ShowMenu(playerid, d_upgWeapons);
			 		case mn_upgradeColor: ShowMenu(playerid, d_Color);
				}
			}
			else ShowMenu(playerid, d_Other);
      	}
      	case d_Color:
      	{
	      	if(response)
			{
				format(PlayerInfo[playerid][ColorNick], 16, "%s", ColorsList[listitem][col_Color]);
				SendClientMessage(playerid, CYELLOW, "Ты изменил свой цвет!");
				mysql_player_update_str(playerid, "ColorNick", PlayerInfo[playerid][ColorNick]);
				ShowMenu(playerid, d_Color);
			}
			else ShowMenu(playerid, d_Upgrade);
      	}
      	case d_upgWeapons:
      	{
	      	if(response)
			{
				if(PlayerInfo[playerid][Level] < WeaponsBuy[listitem][wbLevel])
				{
					ShowMenu(playerid, d_upgWeapons);
					return SendClientMessage(playerid,COLOR_GREY,"У тебя маловат уровень");
				}
				if(PlayerInfo[playerid][Money] < WeaponsBuy[listitem][wbCostMoney])
				{
					ShowMenu(playerid, d_upgWeapons);
					return SendClientMessage(playerid,COLOR_GREY,"У вас не хватает денег");
				}
				if(PlayerInfo[playerid][Points] < WeaponsBuy[listitem][wbCostPoint])
				{
					ShowMenu(playerid, d_upgWeapons);
					return SendClientMessage(playerid,COLOR_GREY,"У вас не хватает очков апргрейда");
				}
				new weapslot = WeaponsBuy[listitem][wbWeapSlot];
				if(WeaponsBuy[listitem][wbWeapAmmo] == 1 && PlayerInfo[playerid][Weapon][weapslot] == WeaponsBuy[listitem][wbWeapID])
				{
					ShowMenu(playerid, d_upgWeapons);
					return SendClientMessage(playerid,COLOR_GREY,"К этому оружию не нужны потроны");
				}
				if(PlayerInfo[playerid][Weapon][weapslot] == WeaponsBuy[listitem][wbWeapID])
				{
					SendClientMessagef(playerid,CLIGHTGREEN,"Ты купил %d патрон для оружия: %s", WeaponsBuy[listitem][wbWeapAmmo], WeaponsBuy[listitem][wbName]);
				} else {
					SendClientMessagef(playerid,CLIGHTGREEN,"Ты купил оружие: %s", WeaponsBuy[listitem][wbName]);
				}
				SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-WeaponsBuy[listitem][wbCostMoney]);
				SetPlayerPoints(playerid, PlayerInfo[playerid][Points]-WeaponsBuy[listitem][wbCostPoint]);
				PlayerInfo[playerid][Weapon][weapslot] = WeaponsBuy[listitem][wbWeapID];
				PlayerInfo[playerid][Ammo][weapslot] += WeaponsBuy[listitem][wbWeapAmmo];
				ShowMenu(playerid, d_upgWeapons);
			}
			else ShowMenu(playerid, d_Upgrade);
      	}
      	case d_Chat:
     	{
            if(response)
			{
     			switch(DLItemID)
				{
			 		case mn_ColorChat: ShowMenu_input(playerid, "mn_ColorChat_input");
				}
			}
			else ShowMenu(playerid, d_Other);
      	}
      	case d_Setting:
     	{
            if(response)
			{
     			switch(DLItemID)
				{
			 		case mn_GodMode: ShowMenu_GodMode(playerid);
			 		case mn_FightStyle: ShowMenu_FightStyle(playerid);
			 		case mn_WorldTime: ShowMenu_WorldTime(playerid);
			 		case mn_Weather: ShowMenu_Weather(playerid);
			 		case mn_RegenOn:
			 		{
				 		if (!PlayerInfo[playerid][RegenOn])
						{
							PlayerInfo[playerid][RegenOn] = 1;
							SendClientMessage(playerid,-1,"Ты выключил регенерацию");
						} else if (PlayerInfo[playerid][RegenOn]) {
							PlayerInfo[playerid][RegenOn] = 0;
							SendClientMessage(playerid,-1,"Ты включил регенерацию");
						}
						mysql_player_update_int(playerid, "RegenOn", PlayerInfo[playerid][RegenOn]);
						ShowMenu(playerid, d_Setting);
			 		}
			 		case mn_InviteClan:
			 		{
				 		if (!PlayerInfo[playerid][InviteClan])
					    {
						    PlayerInfo[playerid][InviteClan] = 1;
					    }
					    else if (PlayerInfo[playerid][InviteClan])
					    {
						    PlayerInfo[playerid][InviteClan] = 0;
						}
						mysql_player_update_int(playerid, "InviteClan", PlayerInfo[playerid][InviteClan]);
						ShowMenu(playerid, d_Setting);
			 		}
			 		case mn_GangZoneOn:
			 		{
				 		if (!PlayerInfo[playerid][GangZoneOn])
					    {
						    PlayerInfo[playerid][GangZoneOn] = 1;
						    SendClientMessage(playerid,-1,"Ты скрыл территории");
					    }
					    else if (PlayerInfo[playerid][GangZoneOn])
					    {
						    PlayerInfo[playerid][GangZoneOn] = 0;
						    SendClientMessage(playerid,-1,"Ты показал территории");
						}
						mysql_player_update_int(playerid, "GangZoneOn", PlayerInfo[playerid][GangZoneOn]);
						LoadPlayerGangZones(playerid);
						ShowMenu(playerid, d_Setting);
			 		}
				}
			}
			else ShowMenu(playerid, d_Other);
      	}
		//
		case d_pMenu:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case pmn_Admin: ShowAdmin(playerid, d_AdminMenu, 1);
			 		case pmn_Spec: SpectatePlayer(playerid, GetPVarInt(playerid, "ClickPlayer"));
			 		case pmn_Stats: ShowStats(playerid,GetPVarInt(playerid, "ClickPlayer"),"pStats");
			 		case pmn_SendPM: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_SendPM_input);
			 		case pmn_Report: ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_Report);
			 		case pmn_ignoredPM: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_ignoredPM_input);
			 		case pmn_gMoney: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gMoney_input);
			 		case pmn_gBank: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gBank_input);
			 		case pmn_pClan: ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
			 		case pmn_Eject: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_Eject_input);
			 		case pmn_AddStat: ShowAddStats(playerid, GetPVarInt(playerid, "ClickPlayer"));
			 		case pmn_historySetName: ShowHistoryName(playerid, GetPVarInt(playerid, "ClickPlayer"), 0);
				}
			}
      	}
      	case d_Report:
     	{
            if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
	        if(strcmp(inputtext, "Другое") == 0)
	        {
				if(GetPVarInt(playerid, "FloodReport") > gettime())
				{
					SendClientMessage(playerid, COLOR_GREY, "Ты слишком часто отправляешь жалобы");
					return 1;
				}
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_Report_input);
	        } else {
		        SendReport(playerid, ComplaintReason[listitem]);
	        }
      	}
      	case d_pClan:
     	{
            if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
   			switch(DLItemID)
			{
		 		case pmn_inviteClan: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_inviteClan_input);
		 		case pmn_grankClan: return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_gRankClan);
		 		case pmn_uninviteClan: ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_uninviteClan_input);
		 		case pmn_errorClan: ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
			}
      	}
      	case d_gRankClan:
     	{
            if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
            new id = GetPVarInt(playerid, "ClickPlayer");
            new string[128];
   			switch(DLItemID)
			{
		 		case pmn_clanRank1:
				{
					if(PlayerInfo[id][ClanRank] == 1) return SendClientMessage(playerid,COLOR_GREY,"Игрок и так уже новичёк");
					SendClientMessage(playerid,CLIGHTGREEN,"Ты замутил игроку статус новичёк");
					format(string, sizeof(string), "Игрок %s [%d] замутил тебе ранг новичка", PlayerInfo[playerid][Name], playerid);
				    SendClientMessage(id,CRED,string);
				    PlayerInfo[id][ClanRank] = 1;
				    mysql_player_update_int(id, "ClanRank", PlayerInfo[playerid][ClanRank]);
				    Clan_SetMemberRank(PlayerInfo[id][ID], PlayerInfo[id][Clan], 1);
				}
		 		case pmn_clanRank2:
		 		{
			 		if(PlayerInfo[id][ClanRank] == 2) return SendClientMessage(playerid,COLOR_GREY,"Игрок и так уже воин");
			 		SendClientMessage(playerid,CLIGHTGREEN,"Ты замутил игроку ранг воин");
			 		format(string, sizeof(string), "Игрок %s [%d] замутил тебе ранг воина", PlayerInfo[playerid][Name], playerid);
				    SendClientMessage(id,CRED,string);
					PlayerInfo[id][ClanRank] = 2;
					mysql_player_update_int(id, "ClanRank", PlayerInfo[playerid][ClanRank]);
					Clan_SetMemberRank(PlayerInfo[id][ID], PlayerInfo[id][Clan], 2);
		 		}
		 		case pmn_clanRank3:
		 		{
			 		if(PlayerInfo[id][ClanRank] == 3) return SendClientMessage(playerid,COLOR_GREY,"Игрок и так уже заместитель");
			 		SendClientMessage(playerid,CLIGHTGREEN,"Ты замутил игрока своим заместителем");
			 		format(string, sizeof(string), "Игрок %s [%d] замутил тебя своим заместителем", PlayerInfo[playerid][Name], playerid);
				    SendClientMessage(id,CRED,string);
					PlayerInfo[id][ClanRank] = 3;
					mysql_player_update_int(id, "ClanRank", PlayerInfo[playerid][ClanRank]);
					Clan_SetMemberRank(PlayerInfo[id][ID], PlayerInfo[id][Clan], 3);
		 		}
		 		case pmn_clanRank4:
		 		{
			 		if(PlayerInfo[id][ClanRank] == 4) return SendClientMessage(playerid,COLOR_GREY,"Игрок и так уже главный заместитель");
			 		SendClientMessage(playerid,CLIGHTGREEN,"Ты замутил игрока своим главный заместителем");
			 		format(string, sizeof(string), "Игрок %s [%d] замутил тебя своим главным заместителем", PlayerInfo[playerid][Name], playerid);
				    SendClientMessage(id,CRED,string);
					PlayerInfo[id][ClanRank] = 4;
					mysql_player_update_int(id, "ClanRank", PlayerInfo[playerid][ClanRank]);
					Clan_SetMemberRank(PlayerInfo[id][ID], PlayerInfo[id][Clan], 4);
		 		}
		 		case pmn_clanRank5: return 1;
			}
			ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_gRankClan);
      	}
      	case pmn_SendPM_input:
     	{
            if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
			new id = GetPVarInt(playerid, "ClickPlayer"), msg[128], glstr[128];
			sscanf(inputtext, "s[128]", msg);
            if(!IsPlayerConnected(id))
			{
                ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_SendPM_input);
			    return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
			}
            if(!PlayerInfo[id][Logged])
			{
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_SendPM_input);
				return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
			}
            if(!strlen(inputtext) || emptyMessage(inputtext))
			{
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_SendPM_input);
				return SendClientMessage(playerid,CGRAY,"Введи текст сообщения");
			}
			if(PlayerInfo[playerid][MuteTime] > 0)
			{
				ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
				return SendClientMessage(playerid, COLOR_GREY, "У вас заглушка");
			}
			format(glstr, sizeof(glstr), "%d %s", id, msg);
			callcmd::pm(playerid, glstr);
			ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_SendPM_input);
      	}
      	case pmn_Report_input:
     	{
            if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_Report);
            if(PlayerInfo[playerid][MuteTime] > 0)
			{
				return SendClientMessage(playerid, COLOR_GREY, "У вас заглушка");
			}
			if(!strlen(inputtext) || emptyMessage(inputtext))
			{
                ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_Report_input);
			    return SendClientMessage(playerid, COLOR_GREY, "Ты не указал причину!");
			}
			if(strlen(inputtext) > 20)
			{
			   ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_Report_input);
			   return SendClientMessage(playerid, COLOR_GREY, "Слишком длинное сообщение!");
			}
            SendReport(playerid, inputtext);
        }
        case pmn_ignoredPM_input:
     	{
     	    if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
     	    new mes[128];
     	    new id = GetPVarInt(playerid, "ClickPlayer");
     	    if(!PlayerInfo[playerid][IgnoredPM][id])
			{
				PlayerInfo[playerid][IgnoredPM][id] = 1;
				format(mes,sizeof(mes),"Ты заигнорировал лс и сообщения от %s [%d]",PlayerInfo[id][Name],id);
		    	SendClientMessage(playerid,CYELLOW,mes);
		    	format(mes,sizeof(mes),"Игрок %s [%d] заигнорировал твои лс и сообщения",PlayerInfo[playerid][Name],playerid);
		    	SendClientMessage(id,CYELLOW,mes);
			}
			else
			{
				PlayerInfo[playerid][IgnoredPM][id] = 0;
				format(mes,sizeof(mes),"Ты снял игнор с игрока %s [%d]",PlayerInfo[id][Name],id);
		    	SendClientMessage(playerid,CYELLOW,mes);
		    	format(mes,sizeof(mes),"Игрок %s [%d] снял игнор с тебя",PlayerInfo[playerid][Name],playerid);
		    	SendClientMessage(id,CYELLOW,mes);
			}
			ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_ignoredPM_input);
		}
      	case pmn_gMoney_input:
     	{
     	    if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
     	    if(PlayerInfo[playerid][Level] < 2) return SendClientMessage(playerid, COLOR_GREY , "Передавать деньги можно с 2 уровня");
     	    new id = GetPVarInt(playerid, "ClickPlayer"), amount, glstr[128];
     	    sscanf(inputtext, "d", amount);
     	    if(!IsPlayerConnected(id))
			{
                ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gMoney_input);
			    return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
			}
            if(!PlayerInfo[id][Logged])
			{
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gMoney_input);
				return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
			}
     	    if(!strlen(inputtext) || emptyMessage(inputtext))
			{
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gMoney_input);
				return SendClientMessage(playerid,CGRAY,"Введи сумму для передачи");
			}
     	    if(PlayerInfo[playerid][Money] < amount) return SendClientMessage(playerid,CGRAY,"У тебя нет такого количества денег!");
     	    if(amount < 1 || amount > 1000000) return SendClientMessage(playerid,CGRAY,"Можно передать от $1 до $1.000.000");
	    	SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-amount);
	    	SetPlayerMoney(id, PlayerInfo[id][Money]+amount);
	        format(glstr,sizeof(glstr),"Игрок %s [%i] накинул тебе $%i",PlayerInfo[playerid][Name],playerid,amount);
		    SendClientMessage(id,CLIGHTGREEN,glstr);
		    format(glstr,sizeof(glstr),"Ты накинул %s [%i] $%i",PlayerInfo[id][Name],id,amount);
		    SendClientMessage(playerid,CLIGHTGREEN,glstr);
     	}
     	case pmn_gBank_input:
     	{
     	    if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
     	    if(PlayerInfo[playerid][Level] < 2) return SendClientMessage(playerid, COLOR_GREY , "Передавать деньги можно с 2 уровня");
     	    new id = GetPVarInt(playerid, "ClickPlayer"), amount, glstr[128];
     	    sscanf(inputtext, "d", amount);
     	    if(!IsPlayerConnected(id))
			{
                ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gBank_input);
			    return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
			}
            if(!PlayerInfo[id][Logged])
			{
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gBank_input);
				return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
			}
     	    if(!strlen(inputtext) || emptyMessage(inputtext))
			{
				ShowPlayerMenu_input(GetPVarInt(playerid, "ClickPlayer"), playerid, pmn_gBank_input);
				return SendClientMessage(playerid,CGRAY,"Введи сумму для передачи");
			}
     	    if(PlayerInfo[playerid][Bank] < amount) return SendClientMessage(playerid,CGRAY,"В банке нету такого количетсва денег!");
     	    if(amount < 1 || amount > 1000000) return SendClientMessage(playerid,CGRAY,"Можно передать от $1 до $1.000.000");
	    	SetPlayerMoneyBank(playerid, PlayerInfo[playerid][Bank]-amount);
	    	SetPlayerMoneyBank(id, PlayerInfo[id][Bank]+amount);
		    format(glstr,sizeof(glstr),"Игрок %s [%i] накинул тебе на счет $%i",PlayerInfo[playerid][Name],playerid,amount);
		    SendClientMessage(id,CLIGHTGREEN,glstr);
		    format(glstr,sizeof(glstr),"Ты накинул %s [%i] на счет $%i",PlayerInfo[id][Name],id,amount);
		    SendClientMessage(playerid,CLIGHTGREEN,glstr);
     	}
     	case pmn_Eject_input:
     	{
	     	if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
	     	new id = GetPVarInt(playerid, "ClickPlayer");
			if(!IsPlayerConnected(id))
			{
                ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
			    return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
			}
            if(!PlayerInfo[id][Logged])
			{
				ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
				return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
			}
			new vehicleid = GetPlayerVehicleID(playerid);
		    if(vehicleid == GetPlayerVehicleID(id) && GetPlayerVehicleSeat(id) != 0)
			{
				new str[100];
				f(str,"%s [%d] выкинул вас из машины", PlayerInfo[playerid][Name], playerid);
				SendClientMessage(id,CGRAY,str);
				RemovePlayerFromVehicle(id);
			}else{
				SendClientMessage(playerid,CGRAY,"Этого игрока нет в твоей машине");
			}
	    }
	    case pmn_inviteClan_input:
     	{
     	 	if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
     	 	new str[256];
			new clan = PlayerInfo[playerid][Clan];
			new id = GetPVarInt(playerid, "ClickPlayer");
			if(!IsPlayerConnected(id))
			{
                ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
			    return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
			}
			if(!PlayerInfo[id][Logged])
			{
				ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
				return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
			}
			if(PlayerInfo[id][Level] < (ClanInfo[clan][cLevel]-1)*2+50)
			{
				format(str, sizeof(str), "У игрока низкий уровень для вступления в клан, необходим %d",(ClanInfo[clan][cLevel]-1)*2+50);
			    return SendClientMessage(playerid, COLOR_GREY, str);
			}
			if(ClanInfo[clan][cPlayers] >= MaxPlayerClan(clan))
			{
				return SendClientMessage(playerid, COLOR_GREY, "Максимальное количество игроков в клане");
			}
			if(ClanInfo[clan][cInvited] >= MaxPlayerClan(clan)-ClanInfo[clan][cPlayers])
			{
				return SendClientMessage(playerid, COLOR_GREY, "Твой клан уже отправил приглашение, мест больше нет");
			}
			if(PlayerInfo[id][InvitedClan])
			{
				return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть приглошение в какой то клан");
			}
			if(PlayerInfo[id][InviteClan])
			{
				return SendClientMessage(playerid, COLOR_GREY, "Игрок не разрешает приглашать себя в клан");
			}
            PlayerInfo[id][InvitedClan] = clan;
            ClanInfo[clan][cInvited] ++;
     	 	SendClientMessage(playerid, CRED, "Отправлено приглошения");
     	 	format(str, sizeof(str), "Тебя приглашают в клан %s [%d], принять можно в разделе кланы",ClanInfo[clan][cName],clan);
		    SendClientMessage(id, CRED, str);
		}
		case pmn_uninviteClan_input:
		{
     	 	if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
     	 	new plid = GetPVarInt(playerid, "ClickPlayer");
     	 	if(!IsPlayerConnected(plid))
			{
                ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
			    return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
			}
			if(!PlayerInfo[plid][Logged])
			{
				ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pClan);
				return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
			}
		    new string1[128];
		    new clan_ = PlayerInfo[playerid][Clan];
			format(string1, sizeof(string1), "Игрок %s [%d] выгнал из клана игрока %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendTeamMessage(PlayerInfo[playerid][Clan],CRED,string1);
		    
		    Clan_RemovePlayer(PlayerInfo[plid][ID], clan_);
		    
			ClanInfo[clan_][cPlayers] --;
            PlayerInfo[plid][Clan] = 0;
            PlayerInfo[plid][ClanRank] = 0;
            mysql_player_update_int(plid, "Clan", PlayerInfo[plid][Clan]);
            mysql_player_update_int(plid, "ClanRank", PlayerInfo[plid][ClanRank]);
            mysql_clan_update_int(clan_, "cPlayers",ClanInfo[clan_][cPlayers]);
		}
	    //
	    case d_ClanMenu:
	    {
	     	if(!response) return ShowMenu(playerid, d_Menu);
  			switch(DLItemID)
			{
		 		case cm_ClanStats: ShowClanStat(playerid, PlayerInfo[playerid][Clan], "ClanStats");
		 		case cm_ClanList: ClanList(playerid, 1);
		 		case cm_ClanRating: ClanRating(playerid);
		 		case cm_Mng: ShowClanMenu(playerid, d_ClanMng);
		 		case cm_Description: return 1;
		 		case cm_inviteClan: ShowClanMenu_input(playerid, cm_inviteClan_input);
		 		case cm_MoneyPut: ShowClanMenu_input(playerid, cm_MoneyPut_input);
		 		case cm_MoneyTake: ShowClanMenu_input(playerid, cm_MoneyTake_input);
			}
	    }
	    case d_ClanMng:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMenu);
  			switch(DLItemID)
			{
		 		case cm_createClan: ShowClanMenu_input(playerid, cm_createClan_input);
		 		case cm_deleteClan: ShowClanMenu_input(playerid, cm_deleteClan_input);
		 		case cm_renameClan: ShowClanMenu(playerid, d_renameClan);
		 		case cm_exitClan: ShowClanMenu_input(playerid, cm_exitClan_input);
		 		case cm_LevelUP:
		 		{
			 		new str[128];
                    new clan = PlayerInfo[playerid][Clan];
			 		if(!PlayerInfo[playerid][Clan])
					{
						ShowClanMenu(playerid, d_ClanMng);
						return SendClientMessage(playerid, 0xAFAFAFAA, "Ты должен быть в клане");
					}
					if(PlayerInfo[playerid][Level] < 20*ClanInfo[clan][cLevel]+100)
					{
						ShowClanMenu(playerid, d_ClanMng);
						format(str,sizeof(str),"У тебя должен быть %d уровень",20*ClanInfo[clan][cLevel]+100);
						return SendClientMessage(playerid,COLOR_GREY,str);
					}
					if(ClanInfo[clan][cLevel] >= 50)
					{
					    ShowClanMenu(playerid, d_ClanMng);
						return SendClientMessage(playerid, 0xAFAFAFAA, "Максимальный уровень клана 50");
					}
					if(ClanInfo[clan][cBank] >= ClanInfo[clan][cLevel]*1000000)
					{
						ClanInfo[clan][cLevel] += 1;
						ClanInfo[clan][cBank] = 0;
						mysql_clan_update_int(clan, "cLevel",ClanInfo[clan][cLevel]);
						mysql_clan_update_int(clan, "cBank",ClanInfo[clan][cBank]);
						SendClientMessage(playerid,CLIGHTGREEN,"Уровень клана повысился");
						ShowClanMenu(playerid, d_ClanMng);
		            }else{
		                ShowClanMenu(playerid, d_ClanMng);
			            return SendClientMessage(playerid,COLOR_GREY,"Казна должна быть заполнена");
		            }
		 		}
		 		case cm_MemberList: ClanMemberList(playerid);
			}
	    }
	    case d_renameClan:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMng);
  			switch(DLItemID)
			{
		 		case cm_reName: ShowClanMenu_input(playerid, cm_reName_input);
		 		case cm_reTag: ShowClanMenu_input(playerid, cm_reTag_input);
			}
	    }
	    case cm_reName_input:
	    {
  			if(response)
			{
				if(!emptyMessage(inputtext))
				{
					if(GetPVarInt(playerid, "FloodReName") > gettime())
					{
						SendClientMessage(playerid, COLOR_GREY, "Подожди до 5 минут чтобы выполнить эту операцию");
						return 1;
					}
					if(!IsClanName(inputtext))
					{
						SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы");
						ShowClanMenu_input(playerid, cm_reName_input);
						return 1;
					}
				 	if(strlen(inputtext) <= 20)
			  	 	{
					 	new name_str[256];
						format(name_str,sizeof(name_str),"SELECT * FROM `clans` WHERE `cName` = '%s'",inputtext);
						mysql_function_query(mysqlConnection, name_str, true, "ChangeClanName", "ds", playerid, inputtext);
	 	 	 	 	}
	 	 	 	 	else
	 	 	 	 	{
	 	 	 	 	 	SendClientMessage(playerid, COLOR_GREY, "Слишком длинное название, максимум символов: 20");
	 	 	 	 	 	ShowClanMenu_input(playerid, cm_reName_input);
						return 1;
	 	 	 	 	}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи новое название клана");
	 	 	 	 	ShowClanMenu_input(playerid, cm_reName_input);
					return 1;
	 	 	 	}
			}
			else ShowClanMenu(playerid, d_renameClan);
		}
		case cm_reTag_input:
	    {
  			if(response)
			{
			    if(GetPVarInt(playerid, "FloodReTag") > gettime())
			    {
				    SendClientMessage(playerid, COLOR_GREY, "Подожди до 5 минут чтобы выполнить эту операцию");
				    return 1;
			    }
			    if(!IsClanName(inputtext))
				{
					SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы");
					ShowClanMenu_input(playerid, cm_reTag_input);
					return 1;
				}
				if(!emptyMessage(inputtext))
				{
				 	if(strlen(inputtext) <= 20)
			  	 	{
					 	new name_str[256];
						format(name_str,sizeof(name_str),"SELECT * FROM `clans` WHERE `cTag` = '%s'",inputtext);
						mysql_function_query(mysqlConnection, name_str, true, "ChangeClanTag", "ds", playerid, inputtext);
	 	 	 	 	}
	 	 	 	 	else
	 	 	 	 	{
	 	 	 	 	 	SendClientMessage(playerid, COLOR_GREY, "Слишком длинное название тега, максимум символов: 20");
	 	 	 	 	 	ShowClanMenu_input(playerid, cm_reTag_input);
						return 1;
	 	 	 	 	}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи новое название тега");
	 	 	 	 	ShowClanMenu_input(playerid, cm_reTag_input);
					return 1;
	 	 	 	}
			}
			else ShowClanMenu(playerid, d_renameClan);
		}
	    case cm_inviteClan_input:
	    {
		    new invclan = PlayerInfo[playerid][InvitedClan];
	     	if(!response)
		    {
                ShowClanMenu(playerid, d_ClanMenu);
                PlayerInfo[playerid][InvitedClan] = 0;
                ClanInfo[invclan][cInvited] --;
		        return SendClientMessage(playerid, 0xFF0000FF, "Ты отклонил приглашение");
		    }
			new string[128];
	     	PlayerInfo[playerid][Clan] = invclan;
	     	PlayerInfo[playerid][ClanRank] = 1;
	     	format(string, sizeof(string), "Игрок %s [%d] принял приглашение, теперь он в клане", PlayerInfo[playerid][Name],playerid);
	     	SendTeamMessage(invclan,CRED,string);
	     	SendClientMessage(playerid,CRED,"Ты вступил в клан");
	     	PlayerInfo[playerid][InvitedClan] = 0;
	     	ClanInfo[invclan][cPlayers] ++;
	     	ClanInfo[invclan][cPlayersUniqueID] ++;
	     	ClanInfo[invclan][cInvited] --;
	     	Clan_LinkPlayer(playerid, PlayerInfo[playerid][Clan]);
	     	mysql_player_update_int(playerid, "Clan", PlayerInfo[playerid][Clan]);
            mysql_player_update_int(playerid, "ClanRank", PlayerInfo[playerid][ClanRank]);
            mysql_clan_update_int(invclan, "cPlayers",ClanInfo[invclan][cPlayers]);
            mysql_clan_update_int(invclan, "cPlayersUniqueID",ClanInfo[invclan][cPlayersUniqueID]);

	    }
	    case d_ClanMemberList2:
	    {
	     	if(!response) return ClanMemberList(playerid);
  			switch(DLItemID)
			{
		 		case cm_uninviteClan: ShowClanMenu_input(playerid, cm_uninviteClan_input);
			}
	    }
	    case cm_uninviteClan_input:
		{
     	 	if(!response) return ShowClanMenu(playerid, d_ClanMemberList2);
     	 	if(!PlayerInfo[playerid][Clan]) return 1;
     	 	new clan = PlayerInfo[playerid][Clan];
			new number = GetPVarInt(playerid, "ClanNumberToManage");
			new place = PlayerInfo[playerid][ClanPlaceList][number];
     	 	
		    new string[128];
			format(string, sizeof(string), "Игрок %s [%d] выгнал из клана игрока %s", PlayerInfo[playerid][Name], playerid, ClanMember[clan][place][cmName]);
		    SendTeamMessage(PlayerInfo[playerid][Clan],CRED,string);
		    
		    Clan_RemovePlayer(ClanMember[clan][place][cmMysqlID], clan);
			
			mysql_format(mysqlConnection, string,sizeof(string),"UPDATE `accounts` SET `Clan` = '-1', `ClanRank` = '0' WHERE `Clan` = '%d'",clan);
			mysql_tquery(mysqlConnection, string, "", "");

			ClanInfo[clan][cPlayers] --;
			mysql_clan_update_int(clan, "cPlayers",ClanInfo[clan][cPlayers]);
		}
	    case cm_MoneyPut_input:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMenu);
	     	new money;
	     	new clan = PlayerInfo[playerid][Clan];
	     	sscanf(inputtext, "d", money);
	     	if(!PlayerInfo[playerid][Clan])
	     	{
		     	return SendClientMessage(playerid,CGRAY,"Ты не в клане");
	     	}
	     	if(!strlen(inputtext) || emptyMessage(inputtext))
			{
				ShowClanMenu_input(playerid, cm_MoneyPut_input);
				return SendClientMessage(playerid,CGRAY,"Введи сумму");
			}
			if(money > PlayerInfo[playerid][Money])
			{
				ShowClanMenu_input(playerid, cm_MoneyPut_input);
				return SendClientMessage(playerid, COLOR_GREY, "У тебя нет столько денег");
			}
			ClanInfo[clan][cBank] += money;
			mysql_clan_update_int(clan, "cBank",ClanInfo[clan][cBank]);
	        SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-money);
			SendClientMessage(playerid, CLIGHTGREEN, "Ты положил деньги в казну клана");
			ShowClanMenu_input(playerid, cm_MoneyPut_input);
    	}
    	case cm_MoneyTake_input:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMenu);
	     	new string[128];
	     	new money;
	     	new clan = PlayerInfo[playerid][Clan];
	     	sscanf(inputtext, "d", money);
	     	if(!PlayerInfo[playerid][Clan])
	     	{
		     	return SendClientMessage(playerid,CGRAY,"Ты не в клане");
	     	}
	     	if(!strlen(inputtext) || emptyMessage(inputtext))
			{
				ShowClanMenu_input(playerid, cm_MoneyTake_input);
				return SendClientMessage(playerid,CGRAY,"Введи сумму");
			}
			if(money > ClanInfo[clan][cBank])
			{
				ShowClanMenu_input(playerid, cm_MoneyTake_input);
				return SendClientMessage(playerid, COLOR_GREY, "У казны клана нет столько денег");
			}
			ClanInfo[clan][cBank] -= money;
			mysql_clan_update_int(clan, "cBank",ClanInfo[clan][cBank]);
	        SetPlayerMoney(playerid, PlayerInfo[playerid][Money]+money);
	        SendClientMessage(playerid, CLIGHTGREEN, "Ты взял деньги из казны клана");
	        if(money > 999999)
			{
				format(string, sizeof(string), "Игрок %s [%d] взял $%d денег из казны клана", PlayerInfo[playerid][Name], playerid, money);
				SendTeamMessage(PlayerInfo[playerid][Clan],0xFF0000AA,string, playerid);
			}
			ShowClanMenu_input(playerid, cm_MoneyTake_input);
    	}
	    case cm_createClan_input:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMng);
	     	if(PlayerInfo[playerid][Clan] != 0)
	        {
                ShowClanMenu_input(playerid, cm_createClan_input);
				return SendClientMessage(playerid, 0xAFAFAFAA, "Ты уже находишься в клане");
			}
	     	if(!strlen(inputtext) || emptyMessage(inputtext))
	     	{
		     	ShowClanMenu_input(playerid, cm_createClan_input);
		     	return SendClientMessage(playerid,CGRAY,"Введи название");
	     	}
			if(!IsClanName(inputtext))
			{
				ShowClanMenu_input(playerid, cm_createClan_input);
				return SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы");
			}
	     	new str[256];
			format(str,sizeof(str),"SELECT * FROM `clans` WHERE `cName` = '%s'",inputtext);
			mysql_function_query(mysqlConnection, str, true, "CreateClanName", "ds", playerid, inputtext);
    	}
    	case cm_createClan2_input:
	    {
	     	if(!response) return ShowClanMenu_input(playerid, cm_createClan_input);
	     	if(PlayerInfo[playerid][Clan] != 0)
	        {
                ShowClanMenu_input(playerid, cm_createClan2_input);
				return SendClientMessage(playerid, 0xAFAFAFAA, "Ты уже находишься в клане");
			}
	     	if(!strlen(inputtext) || emptyMessage(inputtext))
	     	{
		     	ShowClanMenu_input(playerid, cm_createClan2_input);
		     	return SendClientMessage(playerid,CGRAY,"Введи тег");
	     	}
	     	if(!IsClanName(inputtext))
			{
				ShowClanMenu_input(playerid, cm_createClan2_input);
				return SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы");
			}
	     	new str[256];
			format(str,sizeof(str),"SELECT * FROM `clans` WHERE `cTag` = '%s'",inputtext);
			mysql_function_query(mysqlConnection, str, true, "CreateClanTag", "ds", playerid, inputtext);
    	}
    	case cm_deleteClan_input:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMng);
	     	if(!PlayerInfo[playerid][Clan])
			{
			    ShowClanMenu_input(playerid, cm_deleteClan_input);
				return SendClientMessage(playerid, 0xAFAFAFAA, "Ты должен быть в клане");
			}
			if(PlayerInfo[playerid][ClanRank] < 5)
			{
				ShowClanMenu_input(playerid, cm_deleteClan_input);
				return SendClientMessage(playerid,COLOR_GREY,"Ты должен быть лидером клана");
			}
	     	DeleteClan(PlayerInfo[playerid][Clan], playerid);
    	}
    	case cm_exitClan_input:
	    {
	     	if(!response) return ShowClanMenu(playerid, d_ClanMng);
	     	if(!PlayerInfo[playerid][Clan])
			{
			    ShowClanMenu_input(playerid, cm_exitClan_input);
				return SendClientMessage(playerid, 0xAFAFAFAA, "Ты должен быть в клане");
			}
	     	if(PlayerInfo[playerid][ClanRank] == 5)
			{
				ShowClanMenu_input(playerid, cm_exitClan_input);
				return SendClientMessage(playerid,COLOR_GREY,"Ты должен удалить клан а не выйти из него");
			}
			new clan = PlayerInfo[playerid][Clan];
		    
			PlayerInfo[playerid][Clan] = 0;
            PlayerInfo[playerid][ClanRank] = 0;
            ClanInfo[clan][cPlayers] --;
            SendClientMessage(playerid, 0x0FF0000AA, "Ты покинул клан");
            
            mysql_player_update_int(playerid, "Clan", PlayerInfo[playerid][Clan]);
            mysql_player_update_int(playerid, "ClanRank", PlayerInfo[playerid][ClanRank]);
            mysql_clan_update_int(clan, "cPlayers",ClanInfo[clan][cPlayers]);
            
            Clan_RemovePlayer(PlayerInfo[playerid][ID], clan);
    	}
		//
		case d_GangZones:
	    {
	     	if(!response) return ShowMenu(playerid, d_Menu);
  			switch(DLItemID)
			{
		 		case gz_Info: ShowZoneMenu_input(playerid, gz_Info_input);
		 		case gz_StatusWar: ShowZoneMenu_input(playerid, gz_StatusWar_input);
		 		case gz_ClansZone: ShowZoneMenu_input(playerid, gz_ClansZone_input);
		 		case gz_Capture: ShowZoneMenu_input(playerid, gz_Capture_input);
		 		case gz_Exempt: ShowZoneMenu_input(playerid, gz_Exempt_input);
			}
	    }
	    case gz_Info_input:
	    {
	     	if(!response) return ShowZoneMenu(playerid, d_GangZones);
    	}
    	case gz_StatusWar_input:
	    {
	     	if(!response) return ShowZoneMenu(playerid, d_GangZones);
	     	new clan = PlayerInfo[playerid][Clan];
	     	if(!PlayerInfo[playerid][Clan]) return 1;
	     	if(ClanInfo[clan][cCaptureZone] == -1) return 1;
	     	if(strfind(inputtext, "Твой клан захватывает зону") == 0)
	     	{
				ShowZoneMenu_input(playerid, gz_StatusWar2_input);
			}
    	}
    	case gz_StatusWar2_input:
	    {
	     	if(!response) return ShowZoneMenu_input(playerid, gz_StatusWar_input);
    	}
    	case gz_ClansZone_input:
	    {
	     	if(!response) return ShowZoneMenu(playerid, d_GangZones);
	     	new clan = PlayerInfo[playerid][Clan];
	     	if(!PlayerInfo[playerid][Clan]) return 1;
	     	if(PlayerInfo[playerid][ClanRank] < 5) return 1;
	     	/*for(new i = 1; i < clanid; i++)
		    {
				if(!strcmp(ClanInfo[clan][cColorZone], ClanInfo[i][cColorZone], false))
		     	//if(strcmp(ClanInfo[clan][cColorZone], ClanInfo[i][cColorZone]))
		     	{
			     	ShowZoneMenu_input(playerid, gz_ClansZone_input);
				    return SendClientMessage(playerid, 0xAFAFAFAA, "Ты ставишь цвет зоны как у другого клана");
		     	}
	     	}*/
	     	LowerToUpper(inputtext);
			if(strlen(inputtext) != 6)
			{
				ShowZoneMenu_input(playerid, gz_ClansZone_input);
			    return SendClientMessage(playerid, 0xAFAFAFAA, "Длина цвета 6 символов");
			}
			if(IsValidHEX(inputtext))
			{
				format(ClanInfo[clan][cColorZone], 16, "%s", inputtext);
				ShowZoneMenu_input(playerid, gz_ClansZone_input);
				for(new i = 0; i < zonesid; i++)
			    {
				    if(ZoneInfo[i][zOwner] == PlayerInfo[playerid][Clan])
				    {
					    new hex,gangcolor[50];
				        format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[clan][cColorZone]);
				        hex = HexToInt(gangcolor);
						GangZoneShowForPlayers(i, hex);
				    }
			    }
			    mysql_clan_update_str(clan, "cColorZone", ClanInfo[clan][cColorZone]);
		    }
			else
			{
                ShowZoneMenu_input(playerid, gz_ClansZone_input);
				SendClientMessage(playerid, 0xAFAFAFAA, "Неверные символы");
			}
    	}
    	case gz_Capture_input:
	    {
	     	if(!response) return ShowZoneMenu(playerid, d_GangZones);
	     	if(PlayerInfo[playerid][GodMode]) return 1;
	     	if(!PlayerInfo[playerid][Clan]) return 1;
	     	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	     	new string[128];
	     	new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			new clan = PlayerInfo[playerid][Clan];
			for(new zone; zone < sizeof(ZoneInfo); zone++)
		    {
				if(x >= ZoneInfo[zone][zMinX] && x <= ZoneInfo[zone][zMaxX] && y >= ZoneInfo[zone][zMinY] && y <= ZoneInfo[zone][zMaxY])
				{
					if(ZoneInfo[zone][zOwner] == PlayerInfo[playerid][Clan]) return 1;
					if(GetClanZone(clan) >= MaxZonesClan(clan)) return 1;
					if(ClanInfo[clan][cCaptureZone] != -1) return 1;
					if(ZoneInfo[zone][zOwner] == 0)
					{
						new hex,gangcolor[50];
					    format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[clan][cColorZone]);
					    hex = HexToInt(gangcolor);
						GangZoneFlashForPlayers(zone,hex);
						ZoneInfo[zone][zCaptureTime] = CAPTURE_ZONE_TIME;
						ZoneInfo[zone][zUnderAttack] = clan;
						format(string,sizeof(string),"{FF0000}Твой клан (игрок %s [%d]) начал захват зоны № %d, зона свободна",PlayerInfo[playerid][Name],playerid,zone);
						SendTeamMessage(clan,CRED,string);
						ZoneKills[zone][clan] = 1;
						ClanInfo[clan][cCaptureZone] = zone;
						PlayerInfo[playerid][GangZone] = zone;
					}
					if(ZoneInfo[zone][zOwner] != 0)
					{
						new hex,gangcolor[50];
						new zowned = ZoneInfo[zone][zOwner];
					    format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[clan][cColorZone]);
					    hex = HexToInt(gangcolor);
						GangZoneFlashForPlayers(zone,hex);
						ZoneInfo[zone][zUnderAttack] = clan;
						ZoneInfo[zone][zCaptureTime] = CAPTURE_ZONE_TIME;
						format(string,sizeof(string),"{FF0000}Твой клан (игрок %s [%d]) начал захват зоны № %d, зона пренадлежит клану %s %s [%d]",PlayerInfo[playerid][Name],playerid,zone,ClanInfo[zowned][cName],ClanInfo[zowned][cTag],zowned);
						SendTeamMessage(clan,CRED,string);
						format(string,sizeof(string),"{FF0000}На зону № %d напал клан %s %s [%d] (игрок %s [%d])",zone,ClanInfo[clan][cName],ClanInfo[clan][cTag],clan,PlayerInfo[playerid][Name],playerid);
						SendTeamMessage(zowned,CRED,string);
						ZoneKills[zone][clan] = 1;
						ClanInfo[clan][cCaptureZone] = zone;
						PlayerInfo[playerid][GangZone] = zone;
					}
					ZoneInfo[zone][zCaptureTimer] = SetTimerEx("CaptureZone", 1000, false , "d" , zone);
                }
		    }
    	}
    	case gz_Exempt_input:
	    {
	     	if(!response) return ShowZoneMenu(playerid, d_GangZones);
	     	if(!PlayerInfo[playerid][Clan]) return 1;
	     	new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			new clan = PlayerInfo[playerid][Clan];
			for(new zone; zone < sizeof(ZoneInfo); zone++)
		    {
				if(x >= ZoneInfo[zone][zMinX] && x <= ZoneInfo[zone][zMaxX] && y >= ZoneInfo[zone][zMinY] && y <= ZoneInfo[zone][zMaxY])
				{
					if(ZoneInfo[zone][zOwner] == PlayerInfo[playerid][Clan])
					{
						if(ClanInfo[clan][cCaptureZone] == zone)
						{
						
						}
					}
				}
			}
    	}
		//
		case d_HouseMenu:
	    {
		   	if(response)
			{
				switch(DLItemID)
				{
					case hm_BuyHouse: ShowHouse_input(playerid,hm_BuyHouse_input);
					case hm_Transport: ShowHouse(playerid,d_hmTransport);
					case hm_SellHouse: ShowHouse_input(playerid,hm_SellHouse_input);
					case hm_LockHouse:
					{
						new hid = PlayerInfo[playerid][House];
						if(HouseInfo[hid][hLocked])
						{
							HouseInfo[hid][hLocked] = 0;
							GameTextForPlayer(playerid,"~w~door ~g~ unlocked",2000,3);
							HouseInfo[hid][hPickupLock] = CreateDynamicPickup(1318, 23, HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ]+1,0,-1,-1,30.0);
						}
						else
						{
							HouseInfo[hid][hLocked] = 1;
							GameTextForPlayer(playerid,"~w~door ~r~ locked",2000,3);
							DestroyDynamicPickup(HouseInfo[hid][hPickupLock]);
						}
						mysql_house_update_int(hid, "hLocked", HouseInfo[hid][hLocked]);
						ShowHouse(playerid,d_HouseMenu);
					}
					case hm_RentHouse: ShowHouse(playerid,d_RentHouse);
					case hm_HouseName: ShowHouse_input(playerid,hm_HouseName_input);
					case hm_Rent:
					{
                        new hid = OnHouseEnter(playerid);
                        if(PlayerInfo[playerid][Money] < HouseInfo[hid][hCostRent]) return SendClientMessage(playerid,COLOR_GREY," У тебя нету денег");
						PlayerInfo[playerid][Renter] = hid;
						SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-HouseInfo[hid][hCostRent]);
						HouseInfo[hid][hBank] += HouseInfo[hid][hCostRent];
						mysql_player_update_int(playerid, "Renter", PlayerInfo[playerid][Renter]);

						new intid = HouseInfo[hid][hInterior];
				        SetPlayerInterior(playerid, HouseInt[intid][Int]);
						SetPlayerPos(playerid, HouseInt[intid][CoordX], HouseInt[intid][CoordY], HouseInt[intid][CoordZ]);
						SetPlayerFacingAngle(playerid, HouseInt[intid][CoordA]);
						SetPlayerVirtualWorld(playerid, VW_HOUSE + hid);
						PlayerInfo[playerid][HouseEnter] = hid;

						SendClientMessage(playerid,-1,"Поздравляем, ты арендовал дом");
					}
					case hm_unRent:
					{
						PlayerInfo[playerid][Renter] = INVALID_HOUSE_ID;
						mysql_player_update_int(playerid, "Renter", PlayerInfo[playerid][Renter]);
					}
				}
			}
		}
		case d_hmTransport:
	    {
		    if(!response) return ShowHouse(playerid,d_HouseMenu);
			switch(DLItemID)
			{
				case hm_RepairCar:
				{
					if(1000 > PlayerInfo[playerid][Money])
					{
						ShowHouse(playerid,d_hmTransport);
						return SendClientMessage(playerid, COLOR_GREY, "У тебя нет столько денег");
					}
					SpawnPlayerCar(playerid);
					GameTextForPlayer(playerid,"~w~Машина ~n~ ~g~ Восстановлена ~n~ ~r~-$1000",2000,3);
					SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-1000);
				}
				case hm_CarPlate: ShowHouse_input(playerid, hm_CarPlate_input);
				case hm_CarObject: ShowHouse_CarObject(playerid);
			}
	    }
	    case d_RentHouse:
	    {
		    if(!response) return ShowHouse(playerid,d_HouseMenu);
			switch(DLItemID)
			{
				case hm_homeRent: ShowHouse_input(playerid, hm_homeRent_input);
				case hm_RentCost: ShowHouse_input(playerid, hm_RentCost_input);
			}
	    }
	    //
	    case hm_BuyHouse_input:
	    {
		   	if(!response) return ShowHouse(playerid,d_HouseMenu);
		   	new hid = OnHouseEnter(playerid);
		   	if(PlayerInfo[playerid][Level] < HouseInfo[hid][hLevel]) return SendClientMessage(playerid,COLOR_GREY," У тебя низкий уровень");
		    if(PlayerInfo[playerid][Money] < GetHouseCost(HouseInfo[hid][hLevel])) return SendClientMessage(playerid,COLOR_GREY," У тебя нету денег");
		    if(HouseInfo[hid][hOwnedID]) return SendClientMessage(playerid,COLOR_GREY,"Этот дом занят");
		    PlayerInfo[playerid][House] = hid;
		    mysql_player_update_int(playerid, "House", PlayerInfo[playerid][House]);
		    mysql_player_update_int(playerid, "Renter", PlayerInfo[playerid][Renter]);
		    PlayerInfo[playerid][Renter] = INVALID_HOUSE_ID;
		    HouseInfo[hid][hOwnedID] = PlayerInfo[playerid][ID];
		    HouseInfo[hid][hLocked] = 1;
		    HouseInfo[hid][hCostRent] = 0;
		    HouseInfo[hid][hBank] = 0;
		    strmid(HouseInfo[hid][hOwner], PlayerInfo[playerid][Name], 0, strlen(PlayerInfo[playerid][Name]), 255);
		    SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-GetHouseCost(HouseInfo[hid][hLevel]));
		    mysql_house_update_int(hid, "hOwnedID", HouseInfo[hid][hOwnedID]);
		    mysql_house_update_str(hid, "hOwner", HouseInfo[hid][hOwner]);
		    mysql_house_update_int(hid, "hLocked", HouseInfo[hid][hLocked]);
		    mysql_house_update_int(hid, "hCostRent", HouseInfo[hid][hCostRent]);
		    mysql_house_update_int(hid, "hBank", HouseInfo[hid][hBank]);

		    new intid = HouseInfo[hid][hInterior];
	        SetPlayerInterior(playerid, HouseInt[intid][Int]);
			SetPlayerPos(playerid, HouseInt[intid][CoordX], HouseInt[intid][CoordY], HouseInt[intid][CoordZ]);
			SetPlayerFacingAngle(playerid, HouseInt[intid][CoordA]);
			SetPlayerVirtualWorld(playerid, VW_HOUSE + hid);
			PlayerInfo[playerid][HouseEnter] = hid;

			SendClientMessage(playerid,-1,"Поздравляем, с твоим новым приобретением");
			SpawnPlayerCar(playerid);
		   	UpdateHouse(hid);
		   	PlayerInfo[playerid][HouseIcon] = CreateDynamicMapIcon(HouseInfo[hid][hEnterX], HouseInfo[hid][hEnterY], HouseInfo[hid][hEnterZ], 31, 0, 0, 0, playerid, 8000.0, MAPICON_GLOBAL);
	    }
	    case hm_SellHouse_input:
	    {
		   	if(!response) return ShowHouse(playerid,d_HouseMenu);
		   	new str[128];
		   	new hid = OnHouseEnter(playerid);
		   	if(PlayerInfo[playerid][House] != hid) return 1;
		   	for(new i;i<=GetPlayerPoolSize();i++)
			{
				if(!IsPlayerConnected(i) && !PlayerInfo[playerid][Logged])  continue;
				if(PlayerInfo[i][Renter] == hid)
				{
					PlayerInfo[i][Renter] = INVALID_HOUSE_ID;
					mysql_format(mysqlConnection, str,sizeof(str),"UPDATE `accounts` SET `Renter` = '-1' WHERE `Renter` = '%d'",hid);
		            mysql_tquery(mysqlConnection, str, "", "");
					SendClientMessage(i, 0xFF0000FF, "Хозяин продал свой дом");
				}
			}
			mysql_format(mysqlConnection, str,sizeof(str),"UPDATE `accounts` SET `Renter` = '-2' WHERE `Renter` = '%d'",hid);
            mysql_tquery(mysqlConnection, str, "", "");
			SetPlayerMoney(playerid, PlayerInfo[playerid][Money]+GetHouseCost(HouseInfo[hid][hLevel])+HouseInfo[hid][hBank]);
		   	PlayerInfo[playerid][House] = INVALID_HOUSE_ID;
		   	PlayerInfo[playerid][Renter] = INVALID_HOUSE_ID;
		   	strmid(HouseInfo[hid][hOwner], "None", 0, strlen("None"), 255);
		   	HouseInfo[hid][hOwnedID] = 0;
		   	HouseInfo[hid][hLocked] = 0;
		   	HouseInfo[hid][hCostRent] = 0;
		   	HouseInfo[hid][hBank] = 0;
		   	format(HouseInfo[hid][hName], 64, " ", " ");
		   	HouseInfo[hid][hVayp] = 0;
		   	UpdateHouse(hid);
		   	DestroyPlayerCar(playerid);
		   	DestroyDynamicMapIcon(PlayerInfo[playerid][HouseIcon]);
	   		mysql_player_update_int(playerid, "House", PlayerInfo[playerid][House]);
		   	mysql_player_update_int(playerid, "Renter", PlayerInfo[playerid][Renter]);
		   	mysql_house_update_int(hid, "hOwnedID", HouseInfo[hid][hOwnedID]);
		    mysql_house_update_str(hid, "hOwner", HouseInfo[hid][hOwner]);
		    mysql_house_update_int(hid, "hLocked", HouseInfo[hid][hLocked]);
		    mysql_house_update_int(hid, "hCostRent", HouseInfo[hid][hCostRent]);
		    mysql_house_update_int(hid, "hBank", HouseInfo[hid][hBank]);
		    mysql_house_update_int(hid, "hVayp", HouseInfo[hid][hVayp]);
			mysql_house_update_str(hid, "hName", HouseInfo[hid][hName]);
		   	ShowHouse(playerid,d_HouseMenu);
	   	}
	   	case hm_homeRent_input:
	    {
		    if(!response) return ShowHouse(playerid,d_RentHouse);
		    new hid = PlayerInfo[playerid][House];
		    if(HouseInfo[hid][hCostRent])
		    {
			    HouseInfo[hid][hCostRent] = 0;
			    SendClientMessage(playerid,-1,"Ты запретил аренду");
		    }
		    else
		    {
		        HouseInfo[hid][hCostRent] = 100;
		        SendClientMessage(playerid,-1,"Ты разрешил аренду");
		    }
			UpdateHouse(hid);
			ShowHouse(playerid,d_RentHouse);
			mysql_house_update_int(hid, "hCostRent", HouseInfo[hid][hCostRent]);
	    }
	    case hm_RentCost_input:
	    {
		    if(!response) return ShowHouse(playerid,d_RentHouse);
			new rent, str[64];
		    sscanf(inputtext, "d", rent);
		    new hid = PlayerInfo[playerid][House];
		    if(HouseInfo[hid][hCostRent] == 0) return SendClientMessage(playerid,COLOR_GREY,"Твой дом нельзя арендовать, разреши аренду");
		    if(rent < 0) return SendClientMessage(playerid,COLOR_GREY,"Минимальная сумма аренды $1");
		    if(rent > 1000000) return SendClientMessage(playerid,COLOR_GREY,"Максимальная сумма аренды $1 000 000");
		    HouseInfo[hid][hCostRent] = rent;
		    format(str, sizeof(str), "Сумма аренды - $%d", rent);
		    SendClientMessage(playerid, -1, str);
		    UpdateHouse(hid);
	    }
	    case hm_HouseName_input:
	    {
		    if(!response) return ShowHouse(playerid,d_HouseMenu);
		    if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID) return 1;
		    if(IsPlayerVip(playerid))
			{
				ReplaceDialog(inputtext, true);
		 	} else {
				ReplaceDialog(inputtext, false);
			}
			if(strlen(inputtext) > MAX_HOUSE_NAME)
			{
				ShowHouse_input(playerid,hm_HouseName_input);
				return SendClientMessage(playerid,COLOR_GREY,"Неправильная длина текста");
			}
			if(1000 > PlayerInfo[playerid][Money])
			{
				ShowHouse_input(playerid,hm_HouseName_input);
				return SendClientMessage(playerid, COLOR_GREY, "У тебя нет столько денег");
			}
			new house = PlayerInfo[playerid][House];
			SendClientMessage(playerid,CLIGHTGREEN,"Ты установил имя своему дому");
			format(HouseInfo[house][hName], 64, "%s", inputtext);
			mysql_house_update_str(house, "hName", HouseInfo[house][hName]);
			SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-1000);
			UpdateHouse(house);
	    }
	    case hm_CarPlate_input:
	    {
	        if(!response) return ShowHouse(playerid,d_hmTransport);
	        if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID) return 1;
	        if(IsPlayerVip(playerid))
			{
				ReplaceDialog(inputtext, true);
		 	} else {
				ReplaceDialog(inputtext, false);
			}
	        if(5000 > PlayerInfo[playerid][Money])
			{
				ShowHouse_input(playerid,hm_CarPlate_input);
				return SendClientMessage(playerid, COLOR_GREY, "У тебя нет столько денег");
			}
			if(strlen(inputtext) > 32)
			{
				ShowHouse_input(playerid,hm_CarPlate_input);
				return SendClientMessage(playerid,COLOR_GREY,"Неправильная длина текста");
			}
			SendClientMessage(playerid,CLIGHTGREEN,"Ты установил номерной знак");
			format(PlayerInfo[playerid][carPlate], 32, "%s", inputtext);
			SetVehicleNumberPlate(PlayerInfo[playerid][carGUID], PlayerInfo[playerid][carPlate]);
			SetVehicleNumberPlate(PlayerInfo[playerid][OrderVeh], PlayerInfo[playerid][carPlate]);
			mysql_player_update_str(playerid, "carPlate", PlayerInfo[playerid][carPlate]);
			SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-5000);
	    }
		//
		case d_DonateMenu:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
					case mn_infoDonate: ShowDonate(playerid, d_DonateInfo);
			 		case mn_checkDonate: ShowDonate_input(playerid, "mn_checkDonate_input");
			 		case mn_Promocode: ShowDonate_input(playerid, "mn_promocode_input");
				}
			}
			else
			{
				ShowMenu(playerid, d_Menu);
			}
      	}
      	case d_DonateInfo:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
					case info_DonateSystem: ShowDonate_input(playerid, "info_DonateSystem_input");
					case info_Promocode: ShowDonate_input(playerid, "info_Promocode_input");
				}
			}
			else
			{
				ShowDonate(playerid, d_DonateMenu);
			}
      	}
      	case d_connectMenu:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case connect_changeName: ShowConnect(playerid, d_connectChangeName);
			 		case connect_Recovery: ShowConnect(playerid, d_connectRecovery);
				}
			}
			else
			{
			    OnPlayerRegCheck(playerid);
			}
      	}
      	case d_connectChangeName:
     	{
    		if(!response) return ShowConnect(playerid, d_connectMenu);
    		if(emptyMessage(inputtext))
			{
				ShowConnect(playerid, d_connectChangeName);
				return SendClientMessage(playerid,CGRAY,"Введи новый ник");
			}
    		if(!IsValidNickName(inputtext))
			{
			    ShowConnect(playerid, d_connectChangeName);
				return SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы в нике");
			}
			if(CheckAdv(inputtext))
			{
				ShowConnect(playerid, d_connectChangeName);
				return SendClientMessage(playerid,COLOR_GREY,"Подозрение на рекламу");
			}
			if(SetPlayerName(playerid, inputtext) == 0)
			{
				ShowConnect(playerid, d_connectChangeName);
				return SendClientMessage(playerid,COLOR_GREY,"Этот ник уже занят");
			}
			if(strlen(inputtext) >= 23)
	  	 	{
		  	 	ShowConnect(playerid, d_connectChangeName);
			 	return SendClientMessage(playerid, COLOR_GREY, "Вы указали слишком длинный ник");
 	 	 	}
			SetPlayerName(playerid, inputtext);
			format(PlayerInfo[playerid][Name], MAX_PLAYER_NAME, inputtext, inputtext);
			ShowConnect(playerid, d_connectChangeName);
     	}
      	case d_connectRecovery:
     	{
     		if(!response) return ShowConnect(playerid, d_connectMenu);
     		new str[128];
			format(str,sizeof(str),"SELECT * FROM `accounts` WHERE `Name` = '%s'", PlayerInfo[playerid][Name]);
			mysql_function_query(mysqlConnection, str, true, "RecoveryAccount", "ds", playerid, PlayerInfo[playerid][Name]);
			OnPlayerRegCheck(playerid);
     	}
     	case d_CarOrder:
     	{
            if(!response) return 1;
   			switch(DLItemID)
			{
		 		case order_Bike: ShowVehicleOrder(playerid, order_Bike);
		 		case order_Cabriolets: ShowVehicleOrder(playerid, order_Cabriolets);
		 		case order_Industry: ShowVehicleOrder(playerid, order_Industry);
		 		case order_Lowriders: ShowVehicleOrder(playerid, order_Lowriders);
		 		case order_SUVs: ShowVehicleOrder(playerid, order_SUVs);
		 		case order_Salon: ShowVehicleOrder(playerid, order_Salon);
		 		case order_Sport: ShowVehicleOrder(playerid, order_Sport);
			}
      	}
      	case order_Bike:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
        case order_Cabriolets:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
        case order_Industry:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
        case order_Lowriders:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
        case order_SUVs:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
        case order_Salon:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
        case order_Sport:
     	{
            if(!response) return ShowVehicleOrder(playerid, d_CarOrder);
            CreateOrderVehicle(playerid, PlayerInfo[playerid][ListItem][listitem]);
        }
		//Админ-меню дальше
		case d_AdminMenu:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case adm_Pen: ShowAdmin(playerid, d_Penalty, 1);
			 		case adm_Player: ShowAdmin(playerid, d_admPlayer, 1);
			 		case adm_PlayerAcc: ShowAdmin(playerid, d_admPlayerAcc, 1);
			 		case adm_PlayerAcc_offline: ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
			 		case adm_Teleport: ShowAdmin(playerid, d_admTeleport, 1);
			 		case adm_Veh: ShowAdmin(playerid, d_admVeh, 1);
			 		case adm_Chat: ShowAdmin(playerid, d_admChat, 1);
			 		case adm_Other: ShowAdmin(playerid, d_admOther, 1);
			 		case adm_Fly: callcmd::fly(playerid, "");
			 		//case adm_Help: return 1;
				}
			}
			else
			{
                if(GetPVarInt(playerid, "ClickPlayer") == playerid)
			    {
			        ShowMenu(playerid, d_Menu);
			    }else{
			        ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
			    }
			}
      	}
      	case d_Penalty:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case adm_Mute: ShowAdmin_input(playerid, adm_Mute_input);
			 		case adm_MuteIP: ShowAdmin_input(playerid, adm_MuteIP_input);
			 		case adm_Jail: ShowAdmin_input(playerid, adm_Jail_input);
			 		case adm_MuteCMD: ShowAdmin_input(playerid, adm_MuteCMD_input);
			 		case adm_FakeChat: ShowAdmin_input(playerid, adm_FakeChat_input);
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admPlayer:
     	{
            if(response)
            {
	            new id =  GetPVarInt(playerid, "ClickPlayer");
     			switch(DLItemID)
				{
					case adm_searchIPPL: searchAccountIP(playerid, GetPVarInt(playerid, "ClickPlayer"));
			 		case adm_TPTO:
					{
						new glstr[16];
					    format(glstr, sizeof(glstr), "%d", GetPVarInt(playerid, "ClickPlayer"));
						callcmd::tpto(playerid, glstr);
					}
			 		case adm_TP:
					{
					    new glstr[16];
                        format(glstr, sizeof(glstr), "%d", GetPVarInt(playerid, "ClickPlayer"));
						callcmd::gethere(playerid, glstr);
					}
			 		case adm_PL_VW: ShowAdmin_input(playerid, adm_PL_VW_input);
			 		//case adm_PL_INT: ShowAdmin_input(playerid, adm_PL_INT_input);
			 		case adm_PL_HP: ShowAdmin_input(playerid, adm_PL_HP_input);
			 		case adm_PL_AR: ShowAdmin_input(playerid, adm_PL_AR_input);
			 		case adm_giveGun: ShowAdmin_input(playerid, adm_giveGun_input);
			 		case adm_resetGun:
			 		{
				 		ResetPlayerWeapons(playerid);
				 		if(playerid != id)
						{
							SendClientMessagef(GetPVarInt(playerid, "ClickPlayer"), CRED, "Админ %s [%d] удалил у тебя оружие", PlayerInfo[playerid][Name], playerid);
		    				SendClientMessagef(playerid, CRED, "Ты удалил оружие у игрока %s [%d]", PlayerInfo[id][Name], id);
	    				} else {
		    				SendClientMessage(playerid, CRED, "Ты удалил себе оружие");
	    				}
			 		}
			 		case adm_PL_Offkeys:
			 		{
			 		    if(GetPVarInt(GetPVarInt(playerid, "ClickPlayer"), "OffKeys") == 0)
		                {
		                	if(playerid != id)
							{
								SendClientMessagef(GetPVarInt(playerid, "ClickPlayer"), CRED, "Админ %s [%d] отключил тебе управление", PlayerInfo[playerid][Name], playerid);
			    				SendClientMessagef(playerid, CRED, "Ты отключил игроку %s [%d] управление", PlayerInfo[id][Name], id);
		    				} else {
			    				SendClientMessage(playerid, CRED, "Ты отключил себе управление");
		    				}
		                	SetPVarInt(GetPVarInt(playerid, "ClickPlayer"), "OffKeys", 1);
		                	TogglePlayerControllable(GetPVarInt(playerid, "ClickPlayer"), false);
		                }else{
            		        if(playerid != id)
							{
								SendClientMessagef(GetPVarInt(playerid, "ClickPlayer"), CRED, "Админ %s [%d] включил тебе управление", PlayerInfo[playerid][Name], playerid);
			                    SendClientMessagef(playerid, CRED, "Ты включил игроку %s [%d] управление", PlayerInfo[id][Name], id);
		                    } else {
			    				SendClientMessage(playerid, CRED, "Ты включил себе управление");
		    				}
		                	SetPVarInt(GetPVarInt(playerid, "ClickPlayer"), "OffKeys", 0);
		                	TogglePlayerControllable(GetPVarInt(playerid, "ClickPlayer"), true);
		                }
		                ShowAdmin(playerid, d_admPlayer, 1);
			 		}
			 		case adm_PL_godmode:
			 		{
			 		    if(GetPVarInt(GetPVarInt(playerid, "ClickPlayer"), "AGodMode") == 1)
		                {
                	        if(playerid != id)
							{
								SendClientMessagef(GetPVarInt(playerid, "ClickPlayer"), CRED, "Админ %s [%d] сделал тебя смертным", PlayerInfo[playerid][Name], playerid);
			    				SendClientMessagef(playerid, CRED, "Ты отключил игроку %s [%d] бессмертие", PlayerInfo[id][Name], id);
		    				} else {
			    				SendClientMessage(playerid, CRED, "Ты выключил себе бессмертие");
		    				}
		                	SetPVarInt(GetPVarInt(playerid, "ClickPlayer"), "AGodMode", 0);
		                	SetPlayerHealth(GetPVarInt(playerid, "ClickPlayer"), 100);
		                }else{
            		        if(playerid != id)
							{
								SendClientMessagef(GetPVarInt(playerid, "ClickPlayer"), CRED, "Админ %s [%d] сделал тебя бессмертным", PlayerInfo[playerid][Name], playerid);
			                    SendClientMessagef(playerid, CRED, "Ты включил игроку %s [%d] бессмертие", PlayerInfo[id][Name], id);
		                    } else {
		                        SendClientMessage(playerid, CRED, "Ты включил себе бессмертие");
	                        }
		                	SetPVarInt(GetPVarInt(playerid, "ClickPlayer"), "AGodMode", 1);
		                }
		                ShowAdmin(playerid, d_admPlayer, 1);
			 		}
			 		case adm_PL_JETPACK:
			 		{
				 		if(playerid != id)
						{
							SendClientMessagef(GetPVarInt(playerid, "ClickPlayer"), -1, "Админ %s [%d] выдал тебе JetPack");
	                    } else {
	                        SendClientMessage(playerid, -1, "Ты выдал себе JetPack");
                        }
				 		SetPlayerSpecialAction(GetPVarInt(playerid, "ClickPlayer"), SPECIAL_ACTION_USEJETPACK );
				 		ShowAdmin(playerid, d_admPlayer, 1);
			 		}
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admPlayerAcc:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
					case adm_addDonate: ShowAdmin_input(playerid, adm_addDonate_input);
					case adm_resetStatKill: ShowAdmin_input(playerid, adm_resetStatKill_input);
					case adm_addOA: ShowAdmin_input(playerid, adm_addOA_input);
			 		case adm_addLevel: ShowAdmin_input(playerid, adm_addLevel_input);
			 		case adm_addMoney: ShowAdmin_input(playerid, adm_addMoney_input);
			 		case adm_addBank: ShowAdmin_input(playerid, adm_addBank_input);
			 		case adm_setOA: ShowAdmin_input(playerid, adm_setOA_input);
			 		case adm_setLevel: ShowAdmin_input(playerid, adm_setLevel_input);
			 		case adm_setMoney: ShowAdmin_input(playerid, adm_setMoney_input);
			 		case adm_setBank: ShowAdmin_input(playerid, adm_setBank_input);
			 		case adm_addExp: ShowAdmin_input(playerid, adm_addExp_input);
			 		case adm_changeName: ShowAdmin_input(playerid, adm_changeName_input);
			 		case adm_giveAdmin: ShowAdmin_input(playerid, adm_giveAdmin_input);
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admPlayerAcc_offline:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case adm_MuteAcc: ShowAdmin_input(playerid, adm_MuteAcc_input);
			 		case adm_JailAcc: ShowAdmin_input(playerid, adm_JailAcc_input);
			 		case adm_MuteCMDAcc: ShowAdmin_input(playerid, adm_MuteCMDAcc_input);
			 		case adm_addOA_offline: ShowAdmin_input(playerid, adm_addOA_offline_input);
			 		case adm_addMoney_offline: ShowAdmin_input(playerid, adm_addMoney_offline_input);
			 		case adm_addBank_offline: ShowAdmin_input(playerid, adm_addBank_offline_input);
			 		case adm_deleteAcc: ShowAdmin_input(playerid, adm_deleteAcc_input);
			 		case adm_deleteEmail: ShowAdmin_input(playerid, adm_deleteEmail_input);
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admTeleport:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
					case adm_SavePos:
					{
						new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid, a);
					    SetPVarInt(playerid, "admtp", 1);
					    SetPVarFloat(playerid,"admtpx",x);
					    SetPVarFloat(playerid,"admtpy",y);
					    SetPVarFloat(playerid,"admtpz",z);
					    SetPVarFloat(playerid,"admtpa",a);
					    SetPVarInt(playerid, "admtpwv", GetPlayerVirtualWorld(playerid));
					    SetPVarInt(playerid, "admtpint", GetPlayerInterior(playerid));
					    SetPVarInt(playerid, "admtphouse", PlayerInfo[playerid][HouseEnter]);
						SendClientMessage(playerid, CLIGHTGREEN, "Точка телепорта установлена");
					}
					case adm_TP_SavePos:
					{
						callcmd::tpp(playerid, "");
					}
					case adm_TP_House: ShowAdmin_input(playerid, adm_TP_House_input);
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admVeh:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case adm_vehResp:
			        {
			            for(new i = GetVehiclePoolSize();i >= 0;i--)
						{
							if(!VehicleInPlayer(i, playerid, 50.0)) continue;
							RespawnVehicle(i);
						}
						SendClientMessage(playerid, CLIGHTGREEN, "Ты отправил транспорт на место появления");
			        }
			 		case adm_vehUnuseresp:
			 		{
				 		for(new i = GetVehiclePoolSize();i >= 0;i--)
						{
							if(!VehicleInPlayer(i, playerid, 300.0)) continue;
							if(IsVehicleOccupied(i)) continue;
							RespawnVehicle(i);
						}
						SendClientMessage(playerid, CLIGHTGREEN, "Ты отправил неиспользуемый транспорт на место появления");
			        }
			        case adm_addVeh: return 1;
			        case adm_DestroyAVeh:
			        {
				        new vehicleid = GetPlayerVehicleID(playerid);
						if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Ты должен быть в созданной машине!");
						if(!GetPVarInt(playerid, "AdminCarCount")) return SendClientMessage(playerid, CGRAY, "Ты не создавал транспорт");
						if(VehicleInfo[vehicleid][vAdmin] && VehicleInfo[vehicleid][vOwner] == playerid)
						{
					        VehicleInfo[vehicleid][vOwner] = INVALID_PLAYER_ID;
					        VehicleInfo[vehicleid][vAdmin] = 0;
					        DestroyVehicle(vehicleid);
				        	SendClientMessage(playerid, CLIGHTGREEN, "Ты уничтожил созданный транспорт");
				        	SetPVarInt(playerid, "AdminCarCount", GetPVarInt(playerid, "AdminCarCount")-1);
				     	} else {
					     	SendClientMessage(playerid,COLOR_GREY,"Ты должен быть в созданной машине!");
				     	}
			        }
			        case adm_DestroyAllAVeh:
			        {
				        if(!GetPVarInt(playerid, "AdminCarCount")) return SendClientMessage(playerid, CGRAY, "Ты не создавал транспорт");
				        for(new i = GetVehiclePoolSize();i >= 0;i--)
						{
							if(VehicleInfo[i][vAdmin] && VehicleInfo[i][vOwner] == playerid)
							{
								DestroyVehicle(i);
							}
						}
						SendClientMessage(playerid, CLIGHTGREEN, "Ты уничтожил весь созданный транспорт");
				     	SetPVarInt(playerid, "AdminCarCount", 0);
			        }
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admChat:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
					case adm_clearChat: callcmd::cc(playerid, "");
					case adm_EarsPM:
					{
						if(!PlayerInfo[playerid][EarsPM])
						{
							PlayerInfo[playerid][EarsPM] = 1;
							SendClientMessage(playerid,CLIGHTGREEN,"Теперь ты можешь читать приват");
						} else {
							PlayerInfo[playerid][EarsPM] = 0;
							SendClientMessage(playerid,CLIGHTGREEN,"Теперь ты не можешь читать приват");
						}
						mysql_player_update_int(playerid, "EarsPM", PlayerInfo[playerid][EarsPM]);
						ShowAdmin(playerid, d_admChat, 1);
					}
					case adm_EarsRCHAT:
					{
						if(!PlayerInfo[playerid][EarsRCHAT])
						{
							PlayerInfo[playerid][EarsRCHAT] = 1;
							SendClientMessage(playerid,CLIGHTGREEN,"Теперь ты можешь читать радиусные сообщение");
						} else {
							PlayerInfo[playerid][EarsRCHAT] = 0;
							SendClientMessage(playerid,CLIGHTGREEN,"Теперь ты не можешь читать радиусные сообщение");
						}
						mysql_player_update_int(playerid, "EarsRCHAT", PlayerInfo[playerid][EarsRCHAT]);
						ShowAdmin(playerid, d_admChat, 1);
					}
					case adm_EarsCMD:
					{
						if(!PlayerInfo[playerid][EarsCMD])
						{
							SendClientMessage(playerid,CLIGHTGREEN,"Шпион включен");
							PlayerInfo[playerid][EarsCMD] = 1;
						} else {
							SendClientMessage(playerid,CLIGHTGREEN,"Шпион отключен");
							PlayerInfo[playerid][EarsCMD] = 0;
						}
						mysql_player_update_int(playerid, "EarsCMD", PlayerInfo[playerid][EarsCMD]);
						ShowAdmin(playerid, d_admChat, 1);
					}
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
      	case d_admOther:
     	{
            if(response)
            {
     			switch(DLItemID)
				{
			 		case adm_cmdList: ShowAdmin_input(playerid, adm_cmdList_input);
			 		case adm_admList: ShowAdminList(playerid, 0);
			 		case adm_infoAcc: ShowAdmin_input(playerid, adm_infoAcc_input);
			 		case adm_clearKillChat: return 1;
			 		case adm_searchIP: ShowAdmin_input(playerid, adm_searchIP_input);
			 		case adm_searchCountry: ShowAdmin_input(playerid, adm_searchCountry_input);
			 		case adm_searchRegion: ShowAdmin_input(playerid, adm_searchRegion_input);
			 		case adm_searchCity: ShowAdmin_input(playerid, adm_searchCity_input);
			 		case adm_sellHouse: ShowAdmin_input(playerid, adm_sellHouse_input);
			 		case adm_unBanIP: ShowAdmin_input(playerid, adm_unBanIP_input);
			 		case adm_Wipe: StartVayp();
			 		case adm_WipeGZ:
			 		{
						new count;
				 		SendClientMessageToAll(0xFF0000FF, "Запущено аннуляция всех гангзон, обработка сервером займёт несколько секунд!");
				 		for(new zone = 0; zone < zonesid; zone++)
						{
							if(ZoneInfo[zone][zOwner] != 0)
							{
								GangZoneStopFlashForAll(zone);
								GangZoneHideForAll(zone);
								GangZoneShowForPlayers(zone, -66);
								ZoneInfo[zone][zOwner] = 0;
								ZoneInfo[zone][zUnderAttack] = 0;
								ZoneInfo[zone][zCaptureTime] = 0;
								KillTimer(ZoneInfo[zone][zCaptureTimer]);
								mysql_gangzone_update_int(zone, "zOwner", ZoneInfo[zone][zOwner]);
								count ++;
							}
						}
					    SendClientMessageToAllf(0x00FF00AA, "Освобождено зон: %d", count);
			 		}
			 		case adm_Restart:
			 		{
				 		for(new i;i<=GetPlayerPoolSize();i++)
					    {
						    if(!IsPlayerConnected(i) && !PlayerInfo[playerid][Logged])  continue;
						    PlayerInfo[i][Restart] = 1;
						    mysql_player_update_int(i, "Restart",PlayerInfo[i][Restart]);
						    OnPlayerDisconnect(i, 1);
						    PlayerInfo[i][Logged] = 0;
					    }
			 			SetTimer("RestartGame", 1000, 0);
			 		}
			 		case adm_clanRename: ShowAdmin_input(playerid, adm_clanRename_input);
			 		case adm_clanRetag: ShowAdmin_input(playerid, adm_clanRetag_input);
			 		case adm_DeleteClan: ShowAdmin_input(playerid, adm_DeleteClan_input);
				}
			}
			else ShowAdmin(playerid, d_AdminMenu, 1);
      	}
		//Функции админа дальше, например заглушить, посадить, телепортировать, удалить аккаунт и.т.д
		case adm_Mute_input:
		{
			if(response)
			{
				new time, reason[32], glstr[128];
				if(!IsAdminAccess(playerid,500))
				{
					format(glstr, sizeof(glstr), "%d", GetPVarInt(playerid, "ClickPlayer"));
				} else {
					if(!strlen(inputtext) || emptyMessage(inputtext))
					{
						ShowAdmin_input(playerid, adm_Mute_input);
						return SendClientMessage(playerid,CGRAY,"Введи время");
					}
                    sscanf(inputtext, "ds[32]", time, reason);
					format(glstr, sizeof(glstr), "%d %d %s", GetPVarInt(playerid, "ClickPlayer"), time, reason);
				}
				callcmd::mute(playerid, glstr);
			}
			else ShowAdmin(playerid, d_Penalty, 1);
		}
		case adm_MuteIP_input:
		{
			if(response)
			{
				new time, reason[32], glstr[128];
				if(!IsAdminAccess(playerid,500))
				{
					format(glstr, sizeof(glstr), "%d", GetPVarInt(playerid, "ClickPlayer"));
				} else {
					if(!strlen(inputtext) || emptyMessage(inputtext))
					{
						ShowAdmin_input(playerid, adm_MuteIP_input);
						return SendClientMessage(playerid,CGRAY,"Введи время");
					}
                    sscanf(inputtext, "ds[32]", time, reason);
					format(glstr, sizeof(glstr), "%d %d %s", GetPVarInt(playerid, "ClickPlayer"), time, reason);
				}
				callcmd::muteip(playerid, glstr);
			}
			else ShowAdmin(playerid, d_Penalty, 1);
		}
		case adm_Jail_input:
		{
			if(response)
			{
				new time, reason[32], glstr[128];
				sscanf(inputtext, "ds[32]", time, reason);
				if(!strlen(inputtext) || emptyMessage(inputtext)) return SendClientMessage(playerid,CGRAY,"Введи время");
				format(glstr, sizeof(glstr), "%d %d %s", GetPVarInt(playerid, "ClickPlayer"), time, reason);
				callcmd::jail(playerid, glstr);
			}
			else ShowAdmin(playerid, d_Penalty, 1);
		}
		case adm_JailAcc_input:
		{
			if(response)
			{
				new name[24], ttime, reason[32], f_str[128];
				sscanf(inputtext, "s[24]ds[32]",name, ttime, reason);
				if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_JailAcc_input);
					return SendClientMessage(playerid, COLOR_GREY, "Введи ник и время");
				}
				format(f_str,sizeof(f_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",name);
	            mysql_function_query(mysqlConnection, f_str, true, "JailAccount", "dsds", playerid, name, ttime, reason);
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_MuteCMD_input:
		{
			if(response)
			{
				new time, reason[32], glstr[128];
				sscanf(inputtext, "ds[32]", time, reason);
				if(!strlen(inputtext) || emptyMessage(inputtext)) return SendClientMessage(playerid,CGRAY,"Введи время");
				format(glstr, sizeof(glstr), "%d %d %s", GetPVarInt(playerid, "ClickPlayer"), time, reason);
				callcmd::mutecmd(playerid, glstr);
			}
			else ShowAdmin(playerid, d_Penalty, 1);
		}
		case adm_MuteCMDAcc_input:
		{
			if(response)
			{
			    new name[24], mctime, reason[32], f_str[128];
				sscanf(inputtext, "s[24]ds[32]",name, mctime, reason);
				if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_MuteCMDAcc_input);
					return SendClientMessage(playerid, COLOR_GREY, "Введи ник и время");
				}
				format(f_str,sizeof(f_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",name);
	            mysql_function_query(mysqlConnection, f_str, true, "MuteAccountCMD", "dsds", playerid, name, mctime, reason);
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_PL_HP_input:
		{
			if(!response) return ShowAdmin(playerid, d_admPlayer, 1);
			new health = strval(inputtext);
			new targetid = GetPVarInt(playerid, "ClickPlayer");
			new Float:oldhealth;
			GetPlayerHealth(targetid, oldhealth);
			if(!strlen(inputtext) || emptyMessage(inputtext))
			{
                ShowAdmin_input(playerid, adm_PL_HP_input);
				return SendClientMessage(playerid, COLOR_GREY, "Введи кол-во здоровья от 0 до 100");
			}
			if(!(0 <= health <= 100))
			{
			    ShowAdmin_input(playerid, adm_PL_HP_input);
				return SendClientMessage(playerid, COLOR_GREY, "Введи кол-во здоровья от 0 до 100");
			}
			if(IsPlayerGodMode(playerid))
			{
				ShowAdmin_input(playerid, adm_PL_HP_input);
				return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь изменить здоровье у бессмертного игрока");
			}
			if(playerid != targetid)
			{
				SendClientMessagef(targetid, -1, "Админ %s [%d] изменил тебе здоровье с %.0f на %d", PlayerInfo[playerid][Name], playerid, oldhealth, health);
				SendClientMessagef(playerid, -1, "Ты изменил игроку %s [%d] здоровье с %.0f на %d", PlayerInfo[targetid][Name], targetid, oldhealth, health);
			} else {
				SendClientMessagef(playerid, -1, "Ты изменил себе здоровья с %.0f на %d", oldhealth, health);
			}
			ShowAdmin_input(playerid, adm_PL_HP_input);
			SetPlayerHealth(targetid, health);
		}
		case adm_PL_AR_input:
		{
			if(!response) return ShowAdmin(playerid, d_admPlayer, 1);
			new armour = strval(inputtext);
			new targetid = GetPVarInt(playerid, "ClickPlayer");
			new Float:oldarmour;
			GetPlayerArmour(targetid, oldarmour);
			if(!strlen(inputtext) || emptyMessage(inputtext))
			{
                ShowAdmin_input(playerid, adm_PL_AR_input);
				return SendClientMessage(playerid, COLOR_GREY, "Введи кол-во брони от 0 до 100");
			}
			if(!(0 <= armour <= 100))
			{
			    ShowAdmin_input(playerid, adm_PL_AR_input);
				return SendClientMessage(playerid, COLOR_GREY, "Введи кол-во брони от 0 до 100");
			}
			if(IsPlayerGodMode(playerid))
			{
				ShowAdmin_input(playerid, adm_PL_AR_input);
				return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь изменить броню у бессмертного игрока");
			}
			if(playerid != targetid)
			{
				SendClientMessagef(targetid, -1, "Админ %s [%d] изменил тебе броню с %.0f на %d", PlayerInfo[playerid][Name], playerid, oldarmour, armour);
				SendClientMessagef(playerid, -1, "Ты изменил игроку %s [%d] броню с %.0f на %d", PlayerInfo[targetid][Name], targetid, oldarmour, armour);
			} else {
				SendClientMessagef(playerid, -1, "Ты изменил себе броню с %.0f на %d", oldarmour, armour);
			}
			ShowAdmin_input(playerid, adm_PL_AR_input);
			SetPlayerArmour(targetid, armour);
		}
		case adm_PL_VW_input:
		{
			if(!response) return ShowAdmin(playerid, d_admPlayer, 1);
			new vwid = strval(inputtext);
			new targetid = GetPVarInt(playerid, "ClickPlayer");
			if(vwid < 0 || vwid > 1000000)
			{
				ShowAdmin_input(playerid, adm_PL_VW_input);
				return SendClientMessage(playerid, COLOR_GREY, "Неверный номер виртуального мира");
			}
			if(playerid != targetid)
			{
				SendClientMessagef(targetid, -1, "Админ %s [%d] выставил тебе виртуальный мир %d", PlayerInfo[playerid][Name], playerid, vwid);
				SendClientMessagef(playerid, -1, "Ты выставил игроку %s [%d] виртуальный мир %d", PlayerInfo[targetid][Name], targetid, vwid);
			} else {
				SendClientMessagef(playerid, -1, "Ты выставил виртуальный мир %d", vwid);
			}
			SetPlayerVirtualWorld(targetid, vwid);
		}
		/*case adm_PL_INT_input:
		{
			if(!response) return ShowAdmin(playerid, d_admPlayer, 1);
			new intid = strval(inputtext);
			new targetid = GetPVarInt(playerid, "ClickPlayer");
			if(intid < 1 || intid > 134) return SendClientMessage(playerid, COLOR_GREY, "Неверный номер интерьер локации");
		    if(playerid != targetid)
			{
				SendClientMessagef(targetid, -1, "Админ %s [%d] выставил тебе интерьер %d", PlayerInfo[playerid][Name], playerid, intid);
				SendClientMessagef(playerid, -1, "Ты выставил игроку %s [%d] интерьер %d", PlayerInfo[targetid][Name], targetid, intid);
			} else {
				SendClientMessagef(playerid, -1, "Ты выставил интерьер %d", intid);
			}
		}*/
		case adm_FakeChat_input:
		{
			if(!response) return ShowAdmin(playerid, d_Penalty, 1);
			if(!strlen(inputtext) || emptyMessage(inputtext))
			{
                ShowAdmin_input(playerid, adm_FakeChat_input);
				return SendClientMessage(playerid, COLOR_GREY, "Введи текст");
			}
			new str[128];
			format(str, sizeof(str), "%d %s", GetPVarInt(playerid, "ClickPlayer"), inputtext);
			callcmd::c(playerid, str);
			ShowAdmin_input(playerid, adm_FakeChat_input);
		}
		case adm_giveGun_input:
		{
			if(response)
			{
                new glstr[128];
                new weap, ammo;
			 	sscanf(inputtext, "dd", weap, ammo);
			 	new id = GetPVarInt(playerid, "ClickPlayer");
			 	if(weap < 1 || weap > 46)
		 		{
				 	ShowAdmin_input(playerid, adm_giveGun_input);
				 	return SendClientMessage(playerid, COLOR_GREY, "Не меньше 1 и не больше 46");
		 		}
			 	else if(ammo < -10000 || ammo > 10000)
		        {
		        	ShowAdmin_input(playerid, adm_giveGun_input);
					return SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 10000");
				}
				else
				{
				 	switch(weap)
			 	 	{
			 	 	 	case 40:
				        {
						   ShowAdmin_input(playerid, adm_giveGun_input);
						   GivePlayerWeapon(id, 39, 1);
						   GivePlayerWeapon(id, 40, ammo);
				        }
			 	 	 	case 0 .. 15,44 .. 46:
				 	 	{
					 	 	GivePlayerWeapon(id, weap, 1);
					 	 	format(glstr, sizeof(glstr), "Ты дал %s игроку %s [%d]", wName[weap], PlayerInfo[id][Name], id);
					 	 	SendClientMessage(playerid, COLOR_WHITE, glstr);
			 	 	 	 	format(glstr, sizeof(glstr), "Админ %s [%d] выдал тебе оружие", PlayerInfo[playerid][Name], playerid);
					 	 	if(playerid != id) SendClientMessage(id, COLOR_WHITE, glstr);
					 	 	format(glstr, sizeof(glstr), "Админ %s [%d] выдал игроку %s [%d] %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[id][Name], id, wName[weap]);
					        SendAdminMessage(2000,CWHITE, glstr, playerid, id);
				 	 	}
				 	 	default:
				 	 	{
							GivePlayerWeapon(id, weap, ammo);
							if(weap == 39) GivePlayerWeapon(id, 40, 1);
							format(glstr, sizeof(glstr), "Ты дал %s игроку %s [%d] с количеством патронов: %d", wName[weap], PlayerInfo[id][Name], id, ammo);
							SendClientMessage(playerid, COLOR_WHITE, glstr);
							format(glstr, sizeof(glstr), "Админ %s [%d] выдал тебе %s, c количеством патронов: %d", PlayerInfo[playerid][Name], playerid, wName[weap], ammo);
							if(playerid != id) SendClientMessage(id, COLOR_WHITE, glstr);
							format(glstr, sizeof(glstr), "Админ %s [%d] выдал игроку %s [%d] %s с количеством патронов: %d", PlayerInfo[playerid][Name], playerid, PlayerInfo[id][Name], id, wName[weap], ammo);
					        SendAdminMessage(2000,CWHITE, glstr, playerid, id);
				 	 	}
			 	 	}
				}
			}
			else ShowAdmin(playerid, d_admPlayer, 1);
		}
		case adm_addDonate_input:
		{
			if(response)
			{
			 	new Float:amount, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "f", amount);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_addDonate_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(amount < -99999999.0 || amount > 99999999.0)
				{
				 	ShowAdmin_input(playerid, adm_addDonate_input);
				 	return 1;
				}
		 	 	PlayerInfo[id][DonateCount] += amount;
		 	 	mysql_player_update_float(id, "DonateCount", PlayerInfo[id][DonateCount]);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] начислил вам %.2f рублей",PlayerInfo[playerid][Name],playerid, amount);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил %.2f рублей игроку %s [%d]",amount,PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил себе %.2f рублей",amount);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_addDonate_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_resetStatKill_input:
		{
			if(response)
			{
				new id = GetPVarInt(playerid, "ClickPlayer");
				SetPlayerKills(id, 0);
		        SetPlayerDeaths(id, 0);
		        if(playerid != id)
		 	 	{
		            SendClientMessagef(id,-1,"Админ %s [%d] обнулил вам статистику киллов",PlayerInfo[playerid][Name],playerid);
			 	 	SendClientMessagef(playerid,-1,"Ты обнулил игроку %s [%d] статистику киллов",PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessage(playerid,-1,"Ты обнулил себе статистику киллов");
		 	 	}
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_addOA_input:
		{
			if(response)
			{
			 	new point, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", point);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_addOA_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(point < -99999999 || point > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_addOA_input);
				 	return 1;
				}
		 	 	SetPlayerPoints(id, PlayerInfo[id][Points]+point);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] добавил вам %d очки апгрейда",PlayerInfo[playerid][Name],playerid, point);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил %d очки апгрейда игроку %s [%d]",point,PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил себе %d очки апгрейда",point);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_addOA_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_addLevel_input:
		{
			if(response)
			{
			 	new level, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", level);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_addLevel_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(level < -99999999 || level > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_addLevel_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Минимальное кол-во выдачи уровней 1 Максимальное 99999999");
				}
		 	 	SetPlayerLevel(id, PlayerInfo[id][Level]+level);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] добавил вам %d уровень",PlayerInfo[playerid][Name],playerid,level);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил %d уровень игроку %s [%d]", level,PlayerInfo[id][Name],id);
		        } else {
			        SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил себе %d уровень", level,PlayerInfo[id][Name],id);
		        }
		 	 	ShowAdmin_input(playerid, adm_addLevel_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_addMoney_input:
		{
			if(response)
			{
			 	new money, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", money);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_addMoney_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(money < -99999999 || money > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_addMoney_input);
				 	return 1;
				}
		 	 	SetPlayerMoney(id, PlayerInfo[id][Money]+money);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] добавил вам %d денег",PlayerInfo[playerid][Name],playerid, money);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил %d денег игроку %s [%d]", money, PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил себе %d денег", money);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_addMoney_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_addBank_input:
		{
			if(response)
			{
			 	new bank, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", bank);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_addBank_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(bank < -99999999 || bank > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_addBank_input);
				 	return 1;
				}
		 	 	SetPlayerMoneyBank(id, PlayerInfo[id][Bank]+bank);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] добавил вам %d деньги в банке",PlayerInfo[playerid][Name],playerid, bank);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил %d денег в банке игроку %s [%d]", bank, PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил себе %d денег в банке", bank);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_addBank_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_setLevel_input:
		{
			if(response)
			{
			 	new level, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", level);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_setLevel_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(level < -99999999 || level > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_setLevel_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Минимальное кол-во выдачи уровней 1 Максимальное 99999999");
				}
		 	 	SetPlayerLevel(id, level);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] выставил вам %d уровень",PlayerInfo[playerid][Name],playerid,level);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил %d уровень игроку %s [%d]", level,PlayerInfo[id][Name],id);
		        } else {
			        SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил себе %d уровень", level,PlayerInfo[id][Name],id);
		        }
		 	 	ShowAdmin_input(playerid, adm_setLevel_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_setOA_input:
		{
			if(response)
			{
			 	new point, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", point);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_setOA_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(point < -99999999 || point > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_setOA_input);
				 	return 1;
				}
		 	 	SetPlayerPoints(id, point);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] выставил вам %d очки апгрейда",PlayerInfo[playerid][Name],playerid, point);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил %d очки апгрейда игроку %s [%d]",point,PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил себе %d очки апгрейда",point);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_setOA_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_setMoney_input:
		{
			if(response)
			{
			 	new money, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", money);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_setMoney_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(money < -99999999 || money > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_setMoney_input);
				 	return 1;
				}
		 	 	SetPlayerMoney(id, money);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] выставил вам %d денег",PlayerInfo[playerid][Name],playerid, money);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил %d денег игроку %s [%d]", money, PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил себе %d денег", money);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_setMoney_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_setBank_input:
		{
			if(response)
			{
			 	new bank, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", bank);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_setBank_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(bank < -99999999 || bank > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_setBank_input);
				 	return 1;
				}
		 	 	SetPlayerMoneyBank(id, bank);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] выставил вам %d деньги в банке",PlayerInfo[playerid][Name],playerid, bank);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил %d денег в банке игроку %s [%d]", bank, PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты выставил себе %d денег в банке", bank);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_setBank_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_addExp_input:
		{
			if(response)
			{
			 	new exp, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", exp);
		 	 	if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_addExp_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	if(exp < -99999999 || exp > 99999999)
				{
				 	ShowAdmin_input(playerid, adm_addExp_input);
				 	return 1;
				}
				GivePlayerExp(id, exp);
		 	 	if(playerid != id)
		 	 	{
		            SendClientMessagef(id,CLIGHTGREEN,"Админ %s [%d] добавил вам %d опыта",PlayerInfo[playerid][Name],playerid, exp);
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил %d опыта игроку %s [%d]", exp,PlayerInfo[id][Name],id);
		 	 	} else {
			 	 	SendClientMessagef(playerid,CLIGHTGREEN,"Ты добавил себе %d опыта", exp);
		 	 	}
		 	 	ShowAdmin_input(playerid, adm_addExp_input);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_addOA_offline_input:
		{
			if(response)
			{
				new mysqlname[24],point;
		 	 	sscanf(inputtext, "s[24]d",mysqlname, point);
				if(!strlen(inputtext) || emptyMessage(inputtext))
				{
					ShowAdmin_input(playerid, adm_addOA_offline_input);
					return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
				new name_str[256];
		 	 	format(name_str,sizeof(name_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",mysqlname);
		 	 	mysql_function_query(mysqlConnection, name_str, true, "AddPointOffline", "dsd", playerid, mysqlname, point);
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_addMoney_offline_input:
		{
			if(response)
			{
				new mysqlname[24],money;
		 	 	sscanf(inputtext, "s[24]d",mysqlname, money);
				if(!strlen(inputtext) || emptyMessage(inputtext))
				{
					ShowAdmin_input(playerid, adm_addMoney_offline_input);
					return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
				new name_str[256];
		 	 	format(name_str,sizeof(name_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",mysqlname);
		 	 	mysql_function_query(mysqlConnection, name_str, true, "AddMoneyOffline", "dsd", playerid, mysqlname, money);
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_addBank_offline_input:
		{
			if(response)
			{
				new mysqlname[24],mbank;
		 	 	sscanf(inputtext, "s[24]d",mysqlname, mbank);
				if(!strlen(inputtext) || emptyMessage(inputtext))
				{
					ShowAdmin_input(playerid, adm_addBank_offline_input);
					return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
				new name_str[256];
		 	 	format(name_str,sizeof(name_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",mysqlname);
		 	 	mysql_function_query(mysqlConnection, name_str, true, "AddMBankOffline", "dsd", playerid, mysqlname, mbank);
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_deleteAcc_input:
		{
			if(response)
			{
				if(!emptyMessage(inputtext))
				{
				 	if(strlen(inputtext) <= 24)
			  	 	{
					 	new name_str[256];
		 	 	 	 	format(name_str,sizeof(name_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",inputtext);
		 	 	 	 	mysql_function_query(mysqlConnection, name_str, true, "DeleteAccount", "ds", playerid, inputtext);
	 	 	 	 	}
	 	 	 	 	else
	 	 	 	 	{
	 	 	 	 	 	SendClientMessage(playerid, COLOR_GREY, "Вы указали слишком длинный ник");
	 	 	 	 	 	ShowAdmin_input(playerid, adm_deleteAcc_input);
	 	 	 	 	}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи ник аккаунта");
	 	 	 	 	ShowAdmin_input(playerid, adm_deleteAcc_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_deleteEmail_input:
		{
			if(response)
			{
				if(!emptyMessage(inputtext))
				{
				 	if(strlen(inputtext) <= 24)
			  	 	{
					 	new name_str[256];
		 	 	 	 	format(name_str,sizeof(name_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'",inputtext);
		 	 	 	 	mysql_function_query(mysqlConnection, name_str, true, "DeleteEmail", "ds", playerid, inputtext);
	 	 	 	 	}
	 	 	 	 	else
	 	 	 	 	{
	 	 	 	 	 	SendClientMessage(playerid, COLOR_GREY, "Вы указали слишком длинный ник");
	 	 	 	 	 	ShowAdmin_input(playerid, adm_deleteEmail_input);
	 	 	 	 	}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи ник аккаунта");
	 	 	 	 	ShowAdmin_input(playerid, adm_deleteEmail_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admPlayerAcc_offline, 1);
		}
		case adm_changeName_input:
		{
			if(response)
			{
				new targetid = GetPVarInt(playerid, "ClickPlayer"), oldname[MAX_PLAYER_NAME];
                if(PlayerInfo[playerid][AdminLevel] <= PlayerInfo[targetid][AdminLevel] && targetid != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок администратор");
				if(!emptyMessage(inputtext))
				{
					if(CheckAdv(inputtext))
					{
						ShowAdmin_input(playerid, adm_changeName_input);
						return SendClientMessage(playerid,COLOR_GREY,"Подозрение на рекламу");
					}
	 	 	 	 	switch(SetPlayerNickName(targetid, inputtext, oldname))
				    {
				        case -2:
						{
							ShowAdmin_input(playerid, adm_changeName_input);
							return SendClientMessage(playerid, COLOR_GREY, "Ник слишком длинный");
						}
				        case -1:
						{
							ShowAdmin_input(playerid, adm_changeName_input);
							return SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы в нике");
						}
				        case 0:
						{
							ShowAdmin_input(playerid, adm_changeName_input);
						    return SendClientMessage(playerid, COLOR_GREY, "Этот ник уже занят");
					    }
						case 1:
						{
							new fstr[144];
							if(playerid != targetid)
							{
								format(fstr, sizeof(fstr), "Админ %s [%d] сменил игроку %s [%d] ник на %s", PlayerInfo[playerid][Name], playerid, oldname, targetid , inputtext);
							    SendClientMessageWithoutPlayer(COLOR_GREY,fstr);
							    format(fstr, sizeof(fstr), "Админ %s [%d] сменил игроку %s [%d] ник на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], oldname, PlayerInfo[targetid][ID], inputtext);
							    Logs_Admins(gettime(), fstr);
						    } else {
							    format(fstr, sizeof(fstr), "Игрок %s [%d] сменил ник на %s", oldname, playerid , inputtext);
							    SendClientMessageWithoutPlayer(COLOR_GREY,fstr);
						    }
							SendClientMessage(targetid, CRED, "ВНИМАНИЕ: не забудь поменять на новый ник в клиенте");
							SendClientMessage(targetid, CRED, "ВНИМАНИЕ: Если ты забудешь сменить имя в клиенте, свой новый ник можно посмотреть на сайте");
							SendClientMessage(targetid, CRED, "В разделе Разное - история аккаунтов");
						}
				    }
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи новый ник");
	 	 	 	 	ShowAdmin_input(playerid, adm_changeName_input);
					return 1;
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_giveAdmin_input:
		{
			if(response)
			{
			    new glstr[128];
			 	new level, id = GetPVarInt(playerid, "ClickPlayer");
		 	 	sscanf(inputtext, "d", level);
				if(!strlen(inputtext) || emptyMessage(inputtext))
				{
                    ShowAdmin_input(playerid, adm_giveAdmin_input);
				 	return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
				}
		 	 	switch(level)
		        {
		            case 0:
			 	 	{
			 	 		format(glstr, sizeof(glstr), "%s [%d] снял с тебя права админа", PlayerInfo[playerid][Name], playerid, level);
						SendClientMessage(id, CRED, glstr);
						format(glstr, sizeof(glstr), "Ты снял с %s [%d] права админа", PlayerInfo[id][Name], id, level);
						SendClientMessage(playerid, CRED, glstr);
						PlayerInfo[id][AdminLevel] = level;
						PlayerInfo[id][AdminDate] = 0;
					}
		         	case VALID_ADMIN_LEVEL:
			 	 	{
						format(glstr, sizeof(glstr), "%s [%d] сделал вас админом %d уровня", PlayerInfo[playerid][Name], playerid, level);
						SendClientMessage(id, CRED, glstr);
						format(glstr, sizeof(glstr), "Ты сделал %s [%d] админом %d уровня", PlayerInfo[id][Name], id, level);
						SendClientMessage(playerid, CRED, glstr);
						if(PlayerInfo[id][AdminLevel] == 0)
						{
							PlayerInfo[id][AdminDate] = gettime();
						}
		 	 	 	 	PlayerInfo[id][AdminLevel] = level;
			 	 	}
		         	default:
			 	 	{
                        ShowAdmin_input(playerid, adm_giveAdmin_input);
				 	 	return SendClientMessage(playerid, COLOR_GREY, "Неверный уровень админки");
			 	 	}
		        }
		        mysql_player_update_int(id, "AdminLevel", PlayerInfo[id][AdminLevel]);
		        mysql_player_update_int(id, "AdminDate", PlayerInfo[id][AdminDate]);
			}
			else ShowAdmin(playerid, d_admPlayerAcc, 1);
		}
		case adm_TP_House_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admTeleport, 1);
		 	callcmd::tph(playerid, inputtext);
		}
		case adm_cmdList_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admOther, 1);
		}
		case adm_admList_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admOther, 1);
		 	if( GetPVarInt(playerid, "adminListID") == ( GetPVarInt(playerid, "adminList") + 50 ) - 1 && GetPVarInt(playerid, "adminListID") < GetPVarInt(playerid, "adminRows"))
			{
				ShowAdminList(playerid, GetPVarInt(playerid, "adminList") + 50);
		    }
		}
		case adm_infoAcc_input:
		{
	 	    if(!response) return ShowAdmin(playerid, d_admOther, 1);
	 	    if(!strlen(inputtext) || emptyMessage(inputtext))
		    {
			    ShowAdmin_input(playerid, adm_infoAcc_input);
			    return SendClientMessage(playerid,0xAFAFAFAA,"Поле не может быть пустым");
	        }
	        new name_str[256];
			format(name_str,sizeof(name_str),"SELECT * FROM `accounts` WHERE `Name` = '%s'", inputtext);
			mysql_function_query(mysqlConnection, name_str, true, "GetStats", "ds", playerid, inputtext);
		}
		case adm_infoAcc2:
		{
			ShowAdmin_input(playerid, adm_infoAcc_input);
		}
		case adm_searchIP_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admOther, 1);
		 	if(!strlen(inputtext) || emptyMessage(inputtext))
		    {
			    ShowAdmin_input(playerid, adm_searchIP_input);
			    return SendClientMessage(playerid,0xAFAFAFAA,"Ты хочешь искать по пустой строке?");
	        }
        	new SearchIP, str[528];
        	f(str,"Ид\t\t\t\tНик\t\tIP\n%s", str);
			for(new i;i<=GetPlayerPoolSize();i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(!PlayerInfo[i][Logged]) continue;
		        if(strfind(PlayerInfo[i][GetIP],inputtext,true) != -1)
		        {
			        format(str, sizeof(str), "%s%d\t\t\t\t%s\t\t%s\n", str, i, PlayerInfo[i][Name], PlayerInfo[i][GetIP]);
			        PlayerInfo[playerid][ListItem][SearchIP] = i;
				    SearchIP++;
			    }
		    }
		    if(!SearchIP) strcat(str, "Что случилось? Ничего не найдено!");
		    SetPVarInt(playerid, "ItemAmount", SearchIP);
			ShowPlayerDialog(playerid, adm_searchIP2, DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Поиск игроков по IP",str, "Выход", "Назад");
		}
		case adm_searchIP2:
		{
			if(!response) return ShowAdmin_input(playerid, adm_searchIP_input);
			if(GetPVarInt(playerid, "ItemAmount") == 0)
     	    {
	     	    ShowAdmin_input(playerid, adm_searchIP_input);
		    }else{
			    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
		    }
		}
		case adm_searchCountry_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admOther, 1);
		 	if(!strlen(inputtext) || emptyMessage(inputtext))
		    {
			    ShowAdmin_input(playerid, adm_searchCountry_input);
			    return SendClientMessage(playerid,0xAFAFAFAA,"Ты хочешь искать по пустой строке?");
	        }
        	new SearchCountry, str[528];
        	f(str,"Ид\t\t\t\tНик\t\tСтрана\n%s", str);
			for(new i;i<=GetPlayerPoolSize();i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(!PlayerInfo[i][Logged]) continue;
		        if(strfind(PlayerInfo[i][GetCountry],inputtext,true) != -1)
		        {
			        format(str, sizeof(str), "%s%d\t\t\t\t%s\t\t%s\n", str, i, PlayerInfo[i][Name], PlayerInfo[i][GetCountry]);
			        PlayerInfo[playerid][ListItem][SearchCountry] = i;
				    SearchCountry++;
			    }
		    }
		    if(!SearchCountry) strcat(str, "Что случилось? Ничего не найдено!");
		    SetPVarInt(playerid, "ItemAmount", SearchCountry);
			ShowPlayerDialog(playerid, adm_searchCountry2, DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Поиск игроков по стране",str, "Выход", "Назад");
		}
		case adm_searchCountry2:
		{
			if(!response) return ShowAdmin_input(playerid, adm_searchCountry_input);
			if(GetPVarInt(playerid, "ItemAmount") == 0)
     	    {
	     	    ShowAdmin_input(playerid, adm_searchCountry_input);
		    }else{
			    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
		    }
		}
		case adm_searchCity_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admOther, 1);
		 	if(!strlen(inputtext) || emptyMessage(inputtext))
		    {
			    ShowAdmin_input(playerid, adm_searchCity_input);
			    return SendClientMessage(playerid,0xAFAFAFAA,"Ты хочешь искать по пустой строке?");
	        }
        	new SearchCity, str[528];
        	f(str,"Ид\t\t\t\tНик\t\tГород\n%s", str);
			for(new i;i<=GetPlayerPoolSize();i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(!PlayerInfo[i][Logged]) continue;
		        if(strfind(PlayerInfo[i][GetCity],inputtext,true) != -1)
		        {
			        format(str, sizeof(str), "%s%d\t\t\t\t%s\t\t%s\n", str, i, PlayerInfo[i][Name], PlayerInfo[i][GetCity]);
			        PlayerInfo[playerid][ListItem][SearchCity] = i;
				    SearchCity++;
			    }
		    }
		    if(!SearchCity) strcat(str, "Что случилось? Ничего не найдено!");
		    SetPVarInt(playerid, "ItemAmount", SearchCity);
			ShowPlayerDialog(playerid, adm_searchCity2, DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Поиск игроков по городу",str, "Выход", "Назад");
		}
		case adm_searchCity2:
		{
			if(!response) return ShowAdmin_input(playerid, adm_searchCity_input);
			if(GetPVarInt(playerid, "ItemAmount") == 0)
     	    {
	     	    ShowAdmin_input(playerid, adm_searchCity_input);
		    }else{
			    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
		    }
		}
		case adm_searchRegion_input:
		{
		 	if(!response) return ShowAdmin(playerid, d_admOther, 1);
		 	if(!strlen(inputtext) || emptyMessage(inputtext))
		    {
			    ShowAdmin_input(playerid, adm_searchRegion_input);
			    return SendClientMessage(playerid,0xAFAFAFAA,"Ты хочешь искать по пустой строке?");
	        }
        	new SearchRegion, str[528];
        	f(str,"Ид\t\t\t\tНик\t\tРегион\n%s", str);
			for(new i;i<=GetPlayerPoolSize();i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(!PlayerInfo[i][Logged]) continue;
		        if(strfind(PlayerInfo[i][GetRegion],inputtext,true) != -1)
		        {
			        format(str, sizeof(str), "%s%d\t\t\t\t%s\t\t%s\n", str, i, PlayerInfo[i][Name], PlayerInfo[i][GetRegion]);
			        PlayerInfo[playerid][ListItem][SearchRegion] = i;
				    SearchRegion++;
			    }
		    }
		    if(!SearchRegion) strcat(str, "Что случилось? Ничего не найдено!");
		    SetPVarInt(playerid, "ItemAmount", SearchRegion);
			ShowPlayerDialog(playerid, adm_searchRegion2, DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Поиск игроков по региону",str, "Выход", "Назад");
		}
		case adm_searchRegion2:
		{
			if(!response) return ShowAdmin_input(playerid, adm_searchRegion_input);
			if(GetPVarInt(playerid, "ItemAmount") == 0)
     	    {
	     	    ShowAdmin_input(playerid, adm_searchRegion_input);
		    }else{
			    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
		    }
		}
		case adm_clanRename_input:
		{
		 	new cid, name[24];
		 	sscanf(inputtext, "ds[24]", cid, name);
 			if(response)
			{
				if(!emptyMessage(inputtext))
				{
					if((cid < 1 || cid > MAX_CLAN-1) || ClanInfo[cid][cOwnedID] == 0)
					{
						SendClientMessage(playerid,CGRAY,"Такого клана не существует");
		 	 	 	 	return ShowAdmin_input(playerid, adm_clanRename_input);
					}
					if(emptyMessage(name))
				    {
					    SendClientMessage(playerid,CGRAY,"Введи название");
		 	 	 	 	return ShowAdmin_input(playerid, adm_clanRename_input);
				    }
				 	if(strlen(name) <= 20)
			  	 	{
					 	new name_str[256];
						format(name_str,sizeof(name_str),"SELECT * FROM `clans` WHERE `cName` = '%s'",name);
						mysql_function_query(mysqlConnection, name_str, true, "adm_ChangeClanName", "dds", playerid, cid, name);
	 	 	 	 	}
	 	 	 	 	else
	 	 	 	 	{
	 	 	 	 	 	SendClientMessage(playerid, COLOR_GREY, "Слишком длинное название, максимум символов: 20");
	 	 	 	 	 	return ShowAdmin_input(playerid, adm_clanRename_input);
	 	 	 	 	}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи номер клана и имя");
	 	 	 	 	return ShowAdmin_input(playerid, adm_clanRename_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admOther, 1);
		}
		case adm_clanRetag_input:
		{
		 	new cid, name[24];
		 	sscanf(inputtext, "ds[24]", cid, name);
 			if(response)
			{
				if(!emptyMessage(inputtext))
				{
					if((cid < 1 || cid > MAX_CLAN-1) || ClanInfo[cid][cOwnedID] == 0)
					{
						SendClientMessage(playerid,CGRAY,"Такого клана не существует");
		 	 	 	 	return ShowAdmin_input(playerid, adm_clanRetag_input);
					}
					if(emptyMessage(name))
				    {
					    SendClientMessage(playerid,CGRAY,"Введи название тега");
		 	 	 	 	return ShowAdmin_input(playerid, adm_clanRetag_input);
				    }
				 	if(strlen(name) <= 20)
			  	 	{
					 	new name_str[256];
						format(name_str,sizeof(name_str),"SELECT * FROM `clans` WHERE `cTag` = '%s'",name);
						mysql_function_query(mysqlConnection, name_str, true, "adm_ChangeClanTag", "dds", playerid, cid, name);
	 	 	 	 	}
	 	 	 	 	else
	 	 	 	 	{
	 	 	 	 	 	SendClientMessage(playerid, COLOR_GREY, "Слишком длинное название тега, максимум символов: 20");
	 	 	 	 	 	return ShowAdmin_input(playerid, adm_clanRetag_input);
	 	 	 	 	}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи номер клана и тег");
	 	 	 	 	return ShowAdmin_input(playerid, adm_clanRetag_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admOther, 1);
		}
		case adm_DeleteClan_input:
		{
		 	new clan;
		 	sscanf(inputtext, "d", clan);
 			if(response)
			{
				if(!emptyMessage(inputtext))
				{
					if((clan < 1 || clan > MAX_CLAN-1) || ClanInfo[clan][cOwnedID] == 0)
					{
						SendClientMessage(playerid,CGRAY,"Такого клана не существует");
		 	 	 	 	return ShowAdmin_input(playerid, adm_DeleteClan_input);
					}
					DeleteClan(clan);
					ShowAdmin(playerid, d_admOther, 1);
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи номер клана");
	 	 	 	 	return ShowAdmin_input(playerid, adm_DeleteClan_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admOther, 1);
		}
		case adm_sellHouse_input:
		{
		 	new hid;
		 	sscanf(inputtext, "d", hid);
 			if(response)
			{
				if(!emptyMessage(inputtext))
				{
					if(hid < 0 || hid > houseid-1)
					{
						ShowAdmin_input(playerid, adm_sellHouse_input);
						return SendClientMessage(playerid, CGRAY, "Неверный номер дома");
					}
					if(HouseInfo[hid][hOwnedID] == 0)
					{
						ShowAdmin_input(playerid, adm_sellHouse_input);
						return SendClientMessage(playerid,CGRAY,"Этот дом уже продается");
					}
					else
					{
						new query[256];
						new ownerid = GetPlayerID_Name(HouseInfo[hid][hOwner]);
						if(IsPlayerConnected(ownerid) && PlayerInfo[ownerid][House] == hid)
					    {
						   	for(new i;i<=GetPlayerPoolSize();i++)
							{
								if(!IsPlayerConnected(i) && !PlayerInfo[i][Logged])  continue;
								if(PlayerInfo[i][Renter] == hid)
								{
									PlayerInfo[i][Renter] = INVALID_HOUSE_ID;
									SendClientMessage(i, 0xFF0000FF, "Администратор продал дом хозяина");
								}
							}
							SetPlayerMoney(ownerid, PlayerInfo[ownerid][Money]+GetHouseCost(HouseInfo[hid][hLevel])+HouseInfo[hid][hBank]);
						   	PlayerInfo[ownerid][House] = INVALID_HOUSE_ID;
						   	PlayerInfo[ownerid][Renter] = INVALID_HOUSE_ID;
						   	DestroyPlayerCar(ownerid);
						   	DestroyDynamicMapIcon(PlayerInfo[ownerid][HouseIcon]);
						    SendClientMessage(ownerid,CRED,"Твой дом продал администратор");
					    }
						else
						{
						  	format(query,sizeof(query),"UPDATE `accounts` SET `House` = '-1', `Money` = `Money` + '%d' WHERE `Name` = '%s' AND `House` >= '-1'", GetHouseCost(HouseInfo[hid][hLevel]), HouseInfo[hid][hOwner]);
						  	mysql_tquery(mysqlConnection, query, "", "");
						}
						format(query,sizeof(query),"Админ %s [%d] продал дом %d игрока %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], hid, HouseInfo[hid][hOwner]);
					    Logs_Admins(gettime(), query);
						strmid(HouseInfo[hid][hOwner], "None", 0, strlen("None"), 255);
					   	HouseInfo[hid][hOwnedID] = 0;
					   	HouseInfo[hid][hLocked] = 0;
					   	HouseInfo[hid][hCostRent] = 0;
					   	HouseInfo[hid][hBank] = 0;
					   	format(HouseInfo[hid][hName], 64, " ", " ");
					   	HouseInfo[hid][hVayp] = 0;
					   	UpdateHouse(hid);
						format(query,sizeof(query),"Дом № %d успешно продан",hid);
					    SendClientMessage(playerid,-1,query);
		    		   	mysql_house_update_int(hid, "hOwnedID", HouseInfo[hid][hOwnedID]);
					    mysql_house_update_str(hid, "hOwner", HouseInfo[hid][hOwner]);
					    mysql_house_update_int(hid, "hLocked", HouseInfo[hid][hLocked]);
					    mysql_house_update_int(hid, "hCostRent", HouseInfo[hid][hCostRent]);
					    mysql_house_update_int(hid, "hBank", HouseInfo[hid][hBank]);
					    mysql_house_update_int(hid, "hVayp", HouseInfo[hid][hVayp]);
					    mysql_house_update_str(hid, "hName", HouseInfo[hid][hName]);
					}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи номер дома");
	 	 	 	 	return ShowAdmin_input(playerid, adm_sellHouse_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admOther, 1);
		}
		case adm_unBanIP_input:
		{
		 	new ipaddress[16];
		 	sscanf(inputtext, "s[16]", ipaddress);
 			if(response)
			{
				if(!emptyMessage(inputtext))
				{
					if(IsBanned(ipaddress))
					{
						new string[96];
						format(string,sizeof(string),"unbanip %s",ipaddress);
		                SendRconCommand(string);
		                SendRconCommand("reloadbans");
		                SendClientMessagef(playerid,-1,"IP %s разбанен", ipaddress);
					}
					else
					{
		 	 	 	 	SendClientMessage(playerid,CGRAY,"Данный IP или подсеть не в бане!");
		 	 	 	 	return ShowAdmin_input(playerid, adm_unBanIP_input);
					}
	 	 	 	}
	 	 	 	else
	 	 	 	{
	 	 	 	 	SendClientMessage(playerid,CGRAY,"Введи IP или подсеть");
	 	 	 	 	return ShowAdmin_input(playerid, adm_unBanIP_input);
	 	 	 	}
			}
			else ShowAdmin(playerid, d_admOther, 1);
		}
 	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    if(clickedplayerid == playerid)
	{
 		ShowMenu(playerid, d_Menu);
	}
	else
	{
        if(PlayerInfo[playerid][Logged] != 1)
	    {
	    	return SendClientMessage(playerid,COLOR_GREY,"Ты не залогинился, меню не откроется");
	    }
	    SetPVarInt(playerid, "ClickPlayer", clickedplayerid);
	    ShowPlayerMenu(clickedplayerid, playerid, d_pMenu);
	}
	return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(IsAdminAccess(playerid,100,1))
	{
		PlayerInfo[playerid][MapTP] = 1;
	    PlayerInfo[playerid][MapTPTry] = 0;
		PlayerInfo[playerid][MapTPx] = fX;
		PlayerInfo[playerid][MapTPy] = fY;
		SetPlayerPos(playerid, fX, fY, -5);
	}
    return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	OffAntiSpawnKill(playerid);
    return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    return true;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
    return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	if(issuerid != INVALID_PLAYER_ID)
    {
	    if(!IsPlayerGodMode(playerid))
		{
			PlayerInfo[playerid][LastFight] = gettime()+20;
		}
    }
    return 1;
}

public OnQueryError(errorid, error[], callback[], query[], connectionHandle)
{
	switch(errorid)
	{
		case CR_SERVER_GONE_ERROR:
		{
			print("Lost connection to server, trying reconnect...");
			mysql_reconnect(connectionHandle);
		}
		case ER_SYNTAX_ERROR:
		{
			printf("Something is wrong in your syntax, query: %s",query);
		}
	}
	return 1;
}

stock ShowRegister(playerid)
{
	static const fmt_register[] = "{"#cWHITE"}Добро пожаловать на сервер\n\n\
	{"#cWHITE"}Аккаунт с ником {"#cLIGHTBLUE"}%s {"#cWHITE"}не зарегистрирован\n\n\
	{"#cWHITE"}Введите пароль для регистрации:";
    new str[sizeof(fmt_register)+MAX_PLAYER_NAME];
    f(str,fmt_register, PlayerInfo[playerid][Name]);
    ShowPlayerDialogEx(playerid,"Register",DIALOG_STYLE_INPUT,"{"#cWHITE"}Регистрация",str,"Далее","Опции");
    return 1;
}

DIALOG:Register(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
    if(response)
    {
	   	if(strlen(inputtext) > MAX_PLAYER_PASSWORD)
		{
			ShowRegister(playerid);
			return SendClientMessage(playerid, CGRAY, "Пароль не должен превышать 100 символов");
		}
		if(!strlen(inputtext) || emptyMessage(inputtext))return ShowRegister(playerid);
		if(!IsPassword(inputtext)) return ShowRegister(playerid),SendClientMessage(playerid, 0xAFAFAFAA, "Ты использовал запрещенные символы в пароле");
	 	OnPlayerRegister(playerid,inputtext);
		return 1;
	}
	else
	{
		ShowConnect(playerid, d_connectMenu);
	}
	return 1;
}

stock ShowLogin(playerid)
{
    static const fmt_login[] = "{"#cWHITE"}Добро пожаловать на сервер\n\n\
	{"#cWHITE"}Аккаунт с ником {"#cLIGHTBLUE"}%s {"#cWHITE"}зарегистрирован\n\
	{"#cWHITE"}Введите пароль для входа:";
    new str[sizeof(fmt_login)+MAX_PLAYER_NAME];
    f(str,fmt_login, PlayerInfo[playerid][Name]);
    ShowPlayerDialogEx(playerid,"Login",3,"{"#cWHITE"}Авторизация",str,"Логин","Опции");
    return 1;
}

DIALOG:Login(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(response)
	{
		if(strlen(inputtext) > MAX_PLAYER_PASSWORD)
		{
			ShowLogin(playerid);
			return SendClientMessage(playerid, CGRAY, "Пароль не должен превышать 100 символов");
		}
	    if(!strlen(inputtext) || emptyMessage(inputtext))return ShowLogin(playerid);
	    if(!IsPassword(inputtext)) return ShowLogin(playerid),SendClientMessage(playerid, 0xAFAFAFAA, "Ты использовал запрещенные символы в пароле");
	   	OnPlayerLogin(playerid,inputtext);
	}
	else
	{
		ShowConnect(playerid, d_connectMenu);
	}
	return 1;
}

forward OnPlayerRegCheck(playerid);
public OnPlayerRegCheck(playerid)
{
	new str[256];
	format(str, sizeof(str),"SELECT * FROM `accounts` WHERE `Name` = '%s'", PlayerInfo[playerid][Name]);
	mysql_function_query(mysqlConnection, str, true, "RegCheckCallback","d", playerid);
	return 1;
}

forward RegCheckCallback(playerid);
public RegCheckCallback(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new rows, fields;
        cache_get_data(rows, fields);
        if(rows)
        {
		    ShowLogin(playerid);
		    
			//Автологин аккаунтов после перезагрузки сервера
		    new alpassword[MAX_PLAYER_PASSWORD], oldip[60];
			cache_get_field_content(0, "Password", alpassword);
			cache_get_field_content(0, "LastIP", oldip);
			new alrestart = cache_get_field_content_int(0, "Restart");
			new alLoginDate = gettime() - cache_get_field_content_int(0, "LoginDate");
			if(!strcmp(PlayerInfo[playerid][GetIP],oldip,true))
			{
				if(alrestart == 1 && alLoginDate <= 600)
				{
					ShowPlayerDialog(playerid,65535,DIALOG_STYLE_MSGBOX,"1","1","","");
					OnPlayerLogin(playerid, alpassword);
				}
			}
			
	    }else{
			ShowRegister(playerid);
		}
    }
    return 1;
}

stock OnPlayerRegister(playerid, password[])
{
    new str[384];
    
	GetPlayerIp(playerid, PlayerInfo[playerid][RegIP], 32);
	PlayerInfo[playerid][RegDate] = gettime();
	
    format(str, sizeof(str), "INSERT INTO `accounts` (`Name`, `Password`, `RegDate`, `RegIP`) VALUES ('%s', '%s', '%d', '%s')", PlayerInfo[playerid][Name], password, PlayerInfo[playerid][RegDate], PlayerInfo[playerid][RegIP]);
    mysql_function_query(mysqlConnection, str, false, "RegisterCallback","d", playerid);
    format(str,sizeof(str),"Твой пароль - %s , никому его не сообщайте",password);
	SendClientMessage(playerid,0xFFFFFFAA,str);
    return 1;
}

forward RegisterCallback(playerid);
public RegisterCallback(playerid)
{
    PlayerInfo[playerid][ID] = cache_insert_id();
    PlayerInfo[playerid][AdminLevel] = 0;
    PlayerInfo[playerid][AdminDate] = 0;
    PlayerInfo[playerid][Vip] = 0;
    PlayerInfo[playerid][VipTime] = 0;
    PlayerInfo[playerid][Skin] = 0;
    SetPlayerMoney(playerid, 1000);
    SetPlayerMoneyBank(playerid, 0);
    SetPlayerLevel(playerid, 1);
    PlayerInfo[playerid][Exp] = 0;
    SetPlayerPoints(playerid, 0);
    SetPlayerKills(playerid, 0);
    SetPlayerDeaths(playerid, 0);
    PlayerInfo[playerid][MuteTime] = 0;
    PlayerInfo[playerid][MuteCount] = 0;
    PlayerInfo[playerid][MuteCMD] = 0;
    PlayerInfo[playerid][JailTime] = 0;
    PlayerInfo[playerid][Health] = 0.0;
	PlayerInfo[playerid][Armour] = 0.0;
	for(new i = 0; i < 11; i++)
	{
		PlayerInfo[playerid][Weapon][i] = 0;
		PlayerInfo[playerid][Ammo][i] = 0;
	}
	PlayerInfo[playerid][Weapon][1] = 24;
	PlayerInfo[playerid][Ammo][1] = 100;
	PlayerInfo[playerid][Weapon][2] = 26;
	PlayerInfo[playerid][Ammo][2] = 100;
	PlayerInfo[playerid][Weapon][3] = 28;
	PlayerInfo[playerid][Ammo][3] = 300;
	PlayerInfo[playerid][Weapon][7] = 16;
	PlayerInfo[playerid][Ammo][7] = 1;
    format(PlayerInfo[playerid][Code],MAX_PLAYER_PASSWORD," "," ");
    format(PlayerInfo[playerid][Email],MAX_PLAYER_EMAIL," "," ");
    PlayerInfo[playerid][CheckEmail] = 0;
    PlayerInfo[playerid][EmailKey] = 0;
    PlayerInfo[playerid][Clan] = 0;
    PlayerInfo[playerid][ClanRank] = 0;
    format(PlayerInfo[playerid][ColorNick],16,"FFFFFF","FFFFFF");
    mysql_player_update_str(playerid, "ColorNick", PlayerInfo[playerid][ColorNick]);
    format(PlayerInfo[playerid][ColorChat],16,"FFFFFF","FFFFFF");
    mysql_player_update_str(playerid, "ColorChat", PlayerInfo[playerid][ColorChat]);
    PlayerInfo[playerid][House] = INVALID_HOUSE_ID;
    mysql_player_update_int(playerid, "House", PlayerInfo[playerid][House]);
    PlayerInfo[playerid][Renter] = INVALID_HOUSE_ID;
    mysql_player_update_int(playerid, "Renter", PlayerInfo[playerid][Renter]);
    PlayerInfo[playerid][GodMode] = 0;
    PlayerInfo[playerid][Restart] = 0;
    PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
    mysql_player_update_int(playerid, "HouseEnter", PlayerInfo[playerid][HouseEnter]);
    PlayerInfo[playerid][ReferalID] = 0;
    PlayerInfo[playerid][ReferalBonus] = 0;
    PlayerInfo[playerid][WorldTime] = 24;
    mysql_player_update_int(playerid, "WorldTime", PlayerInfo[playerid][WorldTime]);
    PlayerInfo[playerid][Weather] = 16;
    mysql_player_update_int(playerid, "Weather", PlayerInfo[playerid][Weather]);
    PlayerInfo[playerid][FightStyle] = 0;
    PlayerInfo[playerid][RegenHealth] = 0;
    PlayerInfo[playerid][RegenArmour] = 0;
    PlayerInfo[playerid][RegenOn] = 0;
    PlayerInfo[playerid][InviteClan] = 0;
    PlayerInfo[playerid][GangZoneOn] = 0;
    PlayerInfo[playerid][DonateCount] = 0.0;
    PlayerInfo[playerid][EarsPM] = 0;
    PlayerInfo[playerid][EarsRCHAT] = 0;
    PlayerInfo[playerid][EarsCMD] = 0;
    for(new i = 0; i < 6; i++) PlayerInfo[playerid][ObjectID][i] = 0;
    PlayerInfo[playerid][LoginDate] = gettime();
    PlayerInfo[playerid][TotalDate] = 0;
    PlayerInfo[playerid][SessionTime] = gettime();
    PlayerInfo[playerid][BankComission] = 1.00;
    PlayerInfo[playerid][TimeWage] = gettime()+3600;
    
    PlayerInfo[playerid][carModel] = 462;
    mysql_player_update_int(playerid, "carModel", PlayerInfo[playerid][carModel]);
	PlayerInfo[playerid][carColor][0] = 0;
	PlayerInfo[playerid][carColor][1] = 0;
	PlayerInfo[playerid][carPaintjob] = 0;
	format(PlayerInfo[playerid][carPlate], 32, "Server");
	mysql_player_update_str(playerid, "carPlate", PlayerInfo[playerid][carPlate]);
	for (new i = 0; i < MAX_VEHICLE_COMPONENTS; i++)
	{
		PlayerInfo[playerid][carComponent][i] = 0;
	}
	PlayerInfo[playerid][carObject][0] = 0;
	PlayerInfo[playerid][carObject][1] = 0;
    PlayerInfo[playerid][Logged] = 1;
    Logs_Accounts(PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[playerid][GetIP], PlayerInfo[playerid][GetGpci], PlayerInfo[playerid][RegDate], "register");
    SavePlayerWeapon(playerid);
    SavePlayerObject(playerid);
    SaveCarObject(playerid);
    SavePlayerTimeData(playerid);
    return 1;
}

stock OnPlayerLogin(playerid, password[])
{
    new str[384];
    format(str, sizeof(str),"SELECT * FROM `accounts` WHERE `Name` = '%s' AND (`Password` = '%s' OR `GeneratePass` = '%s')", PlayerInfo[playerid][Name], password, password);
    mysql_function_query(mysqlConnection, str, true, "LoginCallback","ds", playerid, password);
    return 1;
}

forward LoginCallback(playerid, password[]);
public LoginCallback(playerid, password[])
{
    new rows, fields, maximum[128];
    cache_get_data(rows, fields);
    if(!rows)
    {
	    SendClientMessage(playerid,CLIGHTBLUE,"Пароль не верен!{"#cWHITE"} Проверь раскладку и включен ли {"#cLIGHTBLUE"}Caps Lock");
	    ShowLogin(playerid);
	    return 1;
    }
    cache_get_field_content(0, "ID", maximum), PlayerInfo[playerid][ID] = strval(maximum);
    cache_get_field_content(0, "Password", PlayerInfo[playerid][Password], mysqlConnection, MAX_PLAYER_PASSWORD);
    cache_get_field_content(0, "GeneratePass", PlayerInfo[playerid][GeneratePass], mysqlConnection, MAX_PLAYER_PASSWORD);
    cache_get_field_content(0, "AdminLevel", maximum), PlayerInfo[playerid][AdminLevel] = strval(maximum);
    cache_get_field_content(0, "AdminDate", maximum), PlayerInfo[playerid][AdminDate] = strval(maximum);
    cache_get_field_content(0, "Vip", maximum), PlayerInfo[playerid][Vip] = strval(maximum);
    cache_get_field_content(0, "VipTime", maximum), PlayerInfo[playerid][VipTime] = strval(maximum);
    cache_get_field_content(0, "Skin", maximum), PlayerInfo[playerid][Skin] = strval(maximum);
    cache_get_field_content(0, "Money", maximum), PlayerInfo[playerid][Money] = strval(maximum);
    cache_get_field_content(0, "Bank", maximum), PlayerInfo[playerid][Bank] = strval(maximum);
    cache_get_field_content(0, "Level", maximum), PlayerInfo[playerid][Level] = strval(maximum);
    cache_get_field_content(0, "Exp", maximum), PlayerInfo[playerid][Exp] = strval(maximum);
    cache_get_field_content(0, "Points", maximum), PlayerInfo[playerid][Points] = strval(maximum);
    cache_get_field_content(0, "Kills", maximum), PlayerInfo[playerid][Kills] = strval(maximum);
    cache_get_field_content(0, "Death", maximum), PlayerInfo[playerid][Death] = strval(maximum);
    cache_get_field_content(0, "RegDate", maximum), PlayerInfo[playerid][RegDate] = strval(maximum);
    cache_get_field_content(0, "RegIP", PlayerInfo[playerid][RegIP], mysqlConnection, 32);
    cache_get_field_content(0, "LastIP", PlayerInfo[playerid][LastIP], mysqlConnection, 32);
    cache_get_field_content(0, "LastGpci", PlayerInfo[playerid][LastGpci], mysqlConnection, 64);
    cache_get_field_content(0, "MuteTime", maximum), PlayerInfo[playerid][MuteTime] = strval(maximum);
    cache_get_field_content(0, "MuteCount", maximum), PlayerInfo[playerid][MuteCount] = strval(maximum);
    cache_get_field_content(0, "MuteCMD", maximum), PlayerInfo[playerid][MuteCMD] = strval(maximum);
    cache_get_field_content(0, "JailTime", maximum), PlayerInfo[playerid][JailTime] = strval(maximum);
    cache_get_field_content(0, "dataPos", maximum), PlayerInfo[playerid][dataPos] = strval(maximum);
    PlayerInfo[playerid][dataPosX] = cache_get_field_content_float(0,"dataPosX");
    PlayerInfo[playerid][dataPosY] = cache_get_field_content_float(0,"dataPosY");
    PlayerInfo[playerid][dataPosZ] = cache_get_field_content_float(0,"dataPosZ");
    cache_get_field_content(0, "dataInt", maximum), PlayerInfo[playerid][dataInt] = strval(maximum);
    cache_get_field_content(0, "dataWorld", maximum), PlayerInfo[playerid][dataWorld] = strval(maximum);
    cache_get_field_content(0, "LoginDate", maximum), PlayerInfo[playerid][LoginDate] = strval(maximum);
    cache_get_field_content(0, "TotalDate", maximum), PlayerInfo[playerid][TotalDate] = strval(maximum);
    PlayerInfo[playerid][Health] = cache_get_field_content_float(0,"Health");
    PlayerInfo[playerid][Armour] = cache_get_field_content_float(0,"Armour");
    cache_get_field_content(0, "Weapons", PlayerInfo[playerid][Weapons], mysqlConnection, 50);
    sscanf(PlayerInfo[playerid][Weapons], "a<i>[11]", PlayerInfo[playerid][Weapon]);
    cache_get_field_content(0, "Ammos", PlayerInfo[playerid][Ammos], mysqlConnection, 50);
    sscanf(PlayerInfo[playerid][Ammos], "a<i>[11]", PlayerInfo[playerid][Ammo]);
    cache_get_field_content(0, "Objects", PlayerInfo[playerid][Objects], mysqlConnection, 36);
    sscanf(PlayerInfo[playerid][Objects], "a<i>[6]", PlayerInfo[playerid][ObjectID]);
    cache_get_field_content(0, "Code", PlayerInfo[playerid][Code], mysqlConnection, MAX_PLAYER_PASSWORD);
    cache_get_field_content(0, "Email", PlayerInfo[playerid][Email], mysqlConnection, MAX_PLAYER_EMAIL);
    cache_get_field_content(0, "CheckEmail", maximum), PlayerInfo[playerid][CheckEmail] = strval(maximum);
    cache_get_field_content(0, "EmailKey", maximum), PlayerInfo[playerid][EmailKey] = strval(maximum);
    cache_get_field_content(0, "Clan", maximum), PlayerInfo[playerid][Clan] = strval(maximum);
    cache_get_field_content(0, "ClanRank", maximum), PlayerInfo[playerid][ClanRank] = strval(maximum);
    cache_get_field_content(0, "ColorNick", PlayerInfo[playerid][ColorNick], mysqlConnection, 16);
    cache_get_field_content(0, "ColorChat", PlayerInfo[playerid][ColorChat], mysqlConnection, 16);
    cache_get_field_content(0, "House", maximum), PlayerInfo[playerid][House] = strval(maximum);
    cache_get_field_content(0, "Renter", maximum), PlayerInfo[playerid][Renter] = strval(maximum);
    cache_get_field_content(0, "GodMode", maximum), PlayerInfo[playerid][GodMode] = strval(maximum);
    cache_get_field_content(0, "Restart", maximum), PlayerInfo[playerid][Restart] = strval(maximum);
    cache_get_field_content(0, "HouseEnter", maximum), PlayerInfo[playerid][HouseEnter] = strval(maximum);
    cache_get_field_content(0, "ReferalID", maximum), PlayerInfo[playerid][ReferalID] = strval(maximum);
    cache_get_field_content(0, "ReferalBonus", maximum), PlayerInfo[playerid][ReferalBonus] = strval(maximum);
    cache_get_field_content(0, "WorldTime", maximum), PlayerInfo[playerid][WorldTime] = strval(maximum);
    cache_get_field_content(0, "Weather", maximum), PlayerInfo[playerid][Weather] = strval(maximum);
    cache_get_field_content(0, "FightStyle", maximum), PlayerInfo[playerid][FightStyle] = strval(maximum);
    cache_get_field_content(0, "RegenHealth", maximum), PlayerInfo[playerid][RegenHealth] = strval(maximum);
    cache_get_field_content(0, "RegenArmour", maximum), PlayerInfo[playerid][RegenArmour] = strval(maximum);
    cache_get_field_content(0, "RegenOn", maximum), PlayerInfo[playerid][RegenOn] = strval(maximum);
    cache_get_field_content(0, "InviteClan", maximum), PlayerInfo[playerid][InviteClan] = strval(maximum);
    cache_get_field_content(0, "GangZoneOn", maximum), PlayerInfo[playerid][GangZoneOn] = strval(maximum);
    PlayerInfo[playerid][DonateCount] = cache_get_field_content_float(0,"DonateCount");
    PlayerInfo[playerid][EarsPM] = cache_get_field_content_int(0,"EarsPM");
    PlayerInfo[playerid][EarsRCHAT] = cache_get_field_content_int(0,"EarsRCHAT");
    PlayerInfo[playerid][EarsCMD] = cache_get_field_content_int(0,"EarsCMD");
    cache_get_field_content(0, "carModel", maximum), PlayerInfo[playerid][carModel] = strval(maximum);
	cache_get_field_content(0, "carColors", PlayerInfo[playerid][carColors], mysqlConnection, 32);
	sscanf(PlayerInfo[playerid][carColors], "a<i>[2]", PlayerInfo[playerid][carColor]);
	cache_get_field_content(0, "carPlate", PlayerInfo[playerid][carPlate], mysqlConnection, 32);
	cache_get_field_content(0, "carPaintjob", maximum), PlayerInfo[playerid][carPaintjob] = strval(maximum);
	cache_get_field_content(0, "carComponents", PlayerInfo[playerid][carComponents], mysqlConnection, 32);
	sscanf(PlayerInfo[playerid][carComponents], "a<i>[14]", PlayerInfo[playerid][carComponent]);
	cache_get_field_content(0, "carObjects", PlayerInfo[playerid][carObjects], mysqlConnection, 20);
	sscanf(PlayerInfo[playerid][carObjects], "a<i>[2]", PlayerInfo[playerid][carObject]);
	
	if(strlen(PlayerInfo[playerid][GeneratePass]) && strcmp(PlayerInfo[playerid][GeneratePass],password) == 0)
	{
		SendClientMessage(playerid,CLIGHTGREEN, "Ты вошёл в аккаунт используя новый пароль");
		format(PlayerInfo[playerid][Password],MAX_PLAYER_PASSWORD,"%s",PlayerInfo[playerid][GeneratePass]);
		format(PlayerInfo[playerid][GeneratePass],MAX_PLAYER_PASSWORD,"","");
		mysql_player_update_str(playerid, "Password", PlayerInfo[playerid][Password]);
		mysql_player_update_str(playerid, "GeneratePass", PlayerInfo[playerid][GeneratePass]);
	} else {
		format(PlayerInfo[playerid][GeneratePass],MAX_PLAYER_PASSWORD,"","");
		mysql_player_update_str(playerid, "GeneratePass", PlayerInfo[playerid][GeneratePass]);
	}
	
	if(!GetPasswordLevel(PlayerInfo[playerid][Password]))
    {
        SendClientMessage(playerid,0xFF0000AA,"У тебя слишком простой пароль, рекомендуется выбрать сложнее");
    }
    
    if(!IsValidCode(playerid))
    {
        SendClientMessage(playerid,0xFF0000AA,"У тебя отсутствует секретное слово, Клавиша Y - Разное - Управление аккаунтом - Смена секретного слова");
    }
    
    if(IsOkEmail(playerid))
    {
		if(!PlayerInfo[playerid][CheckEmail])
		{
		    ShowPlayerDialog(playerid,d_Null,0,"{"#COLOR_DIALOG_MENU"}Email",str_ConfirmEmail,"Ок","");
	    }
    }
    
	new str[256];
	new house = PlayerInfo[playerid][House];
	new clan = PlayerInfo[playerid][Clan];
	new date[3], time[3];
	gmtime(PlayerInfo[playerid][LoginDate], date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
    
    Logs_Accounts(PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[playerid][GetIP], PlayerInfo[playerid][GetGpci], gettime(), "login");
    
    format(str, sizeof(str),"SELECT * FROM `mutedip` WHERE `IP` = '%s'", PlayerInfo[playerid][GetIP]);
    mysql_function_query(mysqlConnection, str, true, "CheckMuteIP","d", playerid);
	
    if(gettime() - PlayerInfo[playerid][LoginDate] <= 86400)
    {
	    format(str, sizeof(str), "Последний раз ты заходил на сервер: %02d:%02d:%02d", time[0],time[1],time[2]);
    }
    if(gettime() - PlayerInfo[playerid][LoginDate] >= 86400)
    {
	    format(str, sizeof(str), "Последний раз ты заходил на сервер: %d числа %02d:%02d:%02d",date[0],time[0],time[1],time[2]);
    }
    if(gettime() - PlayerInfo[playerid][LoginDate] >= 2592000)
    {
	    format(str, sizeof(str), "Последний раз ты заходил на сервер: %d месяце %d числа %02d:%02d:%02d", date[1], date[0], time[0], time[1], time[2]);
    }
    if(gettime() - PlayerInfo[playerid][LoginDate] >= 31536000)
    {
	    format(str, sizeof(str), "Последний раз ты заходил на сервер: %d года %d месяце %d числа %02d:%02d:%02d",date[2], date[1], date[0], time[0], time[1], time[2]);
	}
    SendClientMessage(playerid,CLIGHTGREEN, str);

    if(IsAdminAccess(playerid,100,1))
	{
	    format(str, sizeof(str), "Подключился как админ %d уровня", PlayerInfo[playerid][AdminLevel]);
        SendClientMessage(playerid,0xFFFF00AA, str);
    }
    if(PlayerInfo[playerid][Clan] != 0)
    {
	    format(str,sizeof(str),"Соклан %s [%d] подключился",PlayerInfo[playerid][Name],playerid);
	    SendTeamMessage(PlayerInfo[playerid][Clan],0x00FFFFAA,str,playerid);
    }
    if(PlayerInfo[playerid][Renter] == -2)
    {
	    SendClientMessage(playerid,CRED, "Хозяин продал свой дом, ты не арендатор");
	    PlayerInfo[playerid][Renter] = INVALID_HOUSE_ID;
	    mysql_player_update_int(playerid, "Renter", PlayerInfo[playerid][Renter]);
    }
    if(PlayerInfo[playerid][Clan] == -1)
    {
	    SendClientMessage(playerid,CRED, "Ты больше не в клане");
	    PlayerInfo[playerid][Clan] = 0;
	    clan = PlayerInfo[playerid][Clan];
    }
    if(PlayerInfo[playerid][House] != INVALID_HOUSE_ID)
    {
	    if(HouseInfo[house][hOwnedID] == 0)
		{
			PlayerInfo[playerid][House] = INVALID_HOUSE_ID;
		}
		else
		{
		    PlayerInfo[playerid][HouseIcon] = CreateDynamicMapIcon(HouseInfo[house][hEnterX], HouseInfo[house][hEnterY], HouseInfo[house][hEnterZ], 31, 0, 0, 0, playerid, 8000.0, MAPICON_GLOBAL);
		    SpawnPlayerCar(playerid);
	    }
    }
    if(gettime() - PlayerInfo[playerid][LoginDate] >= 600)
    {
	    PlayerInfo[playerid][dataPos] = 0;
	    PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
	}else{
	    PlayerInfo[playerid][dataPos] = 1;
	}
	//Удаление данных, если те им не соотвествуют
	if(ClanInfo[clan][cOwnedID] == 0)
	{
		PlayerInfo[playerid][Clan] = 0;
	}
	PlayerInfo[playerid][SessionTime] = gettime();
	PlayerInfo[playerid][TimeWage] = gettime()+3600;
	PlayerInfo[playerid][NewsTime] = 20;
	PlayerInfo[playerid][Restart] = 0;
	PlayerInfo[playerid][Logged] = 1;
	mysql_player_update_int(playerid, "Clan", PlayerInfo[playerid][Clan]);
	mysql_player_update_int(playerid, "Restart",PlayerInfo[playerid][Restart]);
    SavePlayerTimeData(playerid);
    SpawnPlayer(playerid);
    return 1;
}

cmd:menu(playerid, params[])
{
    return ShowMenu(playerid, d_Menu);
}
alias:menu("меню");

stock ShowMenu(playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	switch(menuid)
	{
		case d_Menu:
		{
            SetPVarInt(playerid, "ClickPlayer", playerid);
			if(IsAdminAccess(playerid,100,1))
			{
				AddDListItem(playerid, "Админка", mn_Admin);
			}
			AddDListItem(playerid, "Кланы", mn_Clans);
			AddDListItem(playerid, "Территории", mn_GangZones);
			AddDListItem(playerid, "{00FF00}Телепорты", mn_TeleportList);
			AddDListItem(playerid, "Разное", mn_Other);
			AddDListItem(playerid, "Информация", mn_Info);
			AddDListItem(playerid, "{FF0000}Донат", mn_Donate);
	     	ShowPlayerDList(playerid, d_Menu, "{"#COLOR_DIALOG_MENU"}Главное Меню", "Выбрать", "Выход");
		}
		case d_Other:
		{
			AddDListItem(playerid, "Управления аккаунтом", mn_Options);
			AddDListItem(playerid, "Улучшения", mn_Upgrade);
			AddDListItem(playerid, "Объекты к игроку", mn_ObjectToPL);
			AddDListItem(playerid, "Чат", mn_Chat);
			AddDListItem(playerid, "{00FFFF}Настройки", mn_Setting);
			AddDListItem(playerid, "Совершить самоубийство", mn_Kill);
	     	ShowPlayerDList(playerid, d_Other, "{"#COLOR_DIALOG_MENU"}Разное", "Выбрать", "Назад");
		}
		case d_Info:
		{
			AddDListItem(playerid, "{00FF00}Управление", mn_Control);
			AddDListItem(playerid, "{00FF00}Команды", mn_Command);
			//AddDListItem(playerid, "Анимации", mn_Anim);
			AddDListItem(playerid, "{00FF00}Статистика", mn_Stats);
			AddDListItem(playerid, "Указатель к дому", mn_pointerHouse);
			AddDListItem(playerid, "Поиск игроков по никам", mn_searchNick);
			AddDListItem(playerid, "Поиск игроков по номеру аккаунта", mn_searchAccount);
			if(NewsInfo[nActive] == 0)
			{
				AddDListItem(playerid, "Новости", mn_ReadNews);
			}
			AddDListItem(playerid, "Админы в сети", mn_admList);
	     	ShowPlayerDList(playerid, d_Info, "{"#COLOR_DIALOG_MENU"}Информация", "Выбрать", "Назад");
		}
		//
		case d_Options:
		{
			AddDListItem(playerid, "Сменить ник", mn_changeName);
			AddDListItem(playerid, "Сменить пароль", mn_changePass);
			AddDListItem(playerid, "Сменить секретное слово", mn_changeCode);
			AddDListItem(playerid, "Сменить скин", mn_changeSkin);
			AddDListItem(playerid, "Email", mn_Email);
			if(PlayerInfo[playerid][ReferalID] == 0 && PlayerInfo[playerid][Level] < 20)
			{
				AddDListItem(playerid, "Выбрать друга пригласившего тебя на сервер", mn_Referal);
			}
	     	ShowPlayerDList(playerid, d_Options, "{"#COLOR_DIALOG_MENU"}Управления аккаунтом", "Выбрать", "Назад");
		}
		case d_Email:
		{
		    AddDListItem(playerid, "Выслать информацию об аккаунте на Email", mn_emailSend);
			AddDListItem(playerid, "Изменить свой Email", mn_emailChange);
			if(PlayerInfo[playerid][CheckEmail] == 0)
			{
				AddDListItem(playerid, "Подтвердить Email", mn_emailCheck);
			}else{
				AddDListItem(playerid, "Открепить Email", mn_emailCheck);
			}
	     	ShowPlayerDList(playerid, d_Email, "{"#COLOR_DIALOG_MENU"}Email", "Выбрать", "Назад");
		}
		case d_Upgrade:
		{
			AddDListItem(playerid, "Оружие при появлении", mn_upgradeWeapons);
		    AddDListItem(playerid, "Цвет", mn_upgradeColor);
	     	ShowPlayerDList(playerid, d_Upgrade, "{"#COLOR_DIALOG_MENU"}Установка улучшений", "Выбрать", "Назад");
		}
		case d_Color:
		{
			new colstr[712];
	        for(new i; i < sizeof(ColorsList); i++)
			{
				format(colstr,sizeof(colstr),"%s{%s}%s\n", colstr, ColorsList[i][col_Color],ColorsList[i][col_Name]);
			}
			ShowPlayerDialog(playerid,d_Color,DIALOG_STYLE_LIST,"{"#COLOR_DIALOG_MENU"}Цвет",colstr,"Выбрать","Назад");
		}
		case d_upgWeapons:
		{
			new msg[sizeof(WeaponsBuy)*30];
			msg = "Оружие\tЦена\tУровень\tПотрон\n";
			for(new i; i < sizeof(WeaponsBuy); i++)
			{
				new weapslot = WeaponsBuy[i][wbWeapSlot];
				if(PlayerInfo[playerid][Weapon][weapslot] == WeaponsBuy[i][wbWeapID])
				{
					if(WeaponsBuy[i][wbWeapAmmo] == 1)
					{
						format(msg,sizeof(msg),"%s{00FF00}%s\t$%d и %dОА\t%d\t\n", msg, WeaponsBuy[i][wbName], WeaponsBuy[i][wbCostMoney], WeaponsBuy[i][wbCostPoint], WeaponsBuy[i][wbLevel]);
					} else {
						format(msg,sizeof(msg),"%s{00FF00}%s\t$%d и %dОА\t%d\t%d\n", msg, WeaponsBuy[i][wbName], WeaponsBuy[i][wbCostMoney], WeaponsBuy[i][wbCostPoint], WeaponsBuy[i][wbLevel], WeaponsBuy[i][wbWeapAmmo]);
					}
				} else {
					if(WeaponsBuy[i][wbWeapAmmo] == 1)
					{
						format(msg,sizeof(msg),"%s%s\t$%d и %dОА\t%d\t\n", msg, WeaponsBuy[i][wbName], WeaponsBuy[i][wbCostMoney], WeaponsBuy[i][wbCostPoint], WeaponsBuy[i][wbLevel]);
					} else {
						format(msg,sizeof(msg),"%s%s\t$%d и %dОА\t%d\t%d\n", msg, WeaponsBuy[i][wbName], WeaponsBuy[i][wbCostMoney], WeaponsBuy[i][wbCostPoint], WeaponsBuy[i][wbLevel], WeaponsBuy[i][wbWeapAmmo]);
					}
				}
			}
			ShowPlayerDialog(playerid,d_upgWeapons,DIALOG_STYLE_TABLIST_HEADERS,"{"#COLOR_DIALOG_MENU"}Оружия на респаун",msg,"Выбрать","Назад");
		}
		case d_Chat:
		{
		    AddDListItem(playerid, "Цвет чата", mn_ColorChat);
	     	ShowPlayerDList(playerid, d_Chat, "{"#COLOR_DIALOG_MENU"}Чат", "Выбрать", "Назад");
		}
		case d_Setting:
		{
			new msgsize[DLD_STRING_SIZE];
			new fstyle = PlayerInfo[playerid][FightStyle];
			new wtime = PlayerInfo[playerid][WorldTime];
			new weather = PlayerInfo[playerid][Weather];
			if(!PlayerInfo[playerid][GodMode])
			{
				AddDListItem(playerid, "Стать бессмертным", mn_GodMode);
			} else {
				AddDListItem(playerid, "Стать смертным\t{"#cLIGHTGREEN"}[Выдаст оружие назад]", mn_GodMode);
			}
			format(msgsize,sizeof(msgsize),"Стили боя\t\t{"#cLIGHTGREEN"}[%s]", msg_FightStyle[fstyle]);
			AddDListItem(playerid, msgsize, mn_FightStyle);
			format(msgsize,sizeof(msgsize),"Игровое время суток\t{"#cLIGHTGREEN"}[%s]", msg_WorldTime[wtime]);
			AddDListItem(playerid, msgsize, mn_WorldTime);
			format(msgsize,sizeof(msgsize),"Погода\t\t\t{"#cLIGHTGREEN"}[%s]", msg_Weather[weather]);
			AddDListItem(playerid, msgsize, mn_Weather);
			if(!PlayerInfo[playerid][RegenOn])
			{
				AddDListItem(playerid, "Регенерация\t\t{"#cLIGHTGREEN"}[Разрешена]", mn_RegenOn);
			} else {
				AddDListItem(playerid, "Регенерация\t\t{"#cYELLOW"}[Запрешена]", mn_RegenOn);
			}
			if(!PlayerInfo[playerid][InviteClan])
			{
				AddDListItem(playerid, "Приглашения в клан\t{"#cLIGHTGREEN"}[Разрешено]", mn_InviteClan);
			} else {
				AddDListItem(playerid, "Приглашения в клан\t{"#cYELLOW"}[Запрещено]", mn_InviteClan);
			}
			if(!PlayerInfo[playerid][GangZoneOn])
			{
				AddDListItem(playerid, "Территории\t\t{"#cLIGHTGREEN"}[Показаны]", mn_GangZoneOn);
			} else {
				AddDListItem(playerid, "Территории\t\t{"#cYELLOW"}[Скрыты]", mn_GangZoneOn);
			}
	     	ShowPlayerDList(playerid, d_Setting, "{"#COLOR_DIALOG_MENU"}Настройки", "Выбрать", "Назад");
		}
	}
	PlayerInfo[playerid][Dialog] = 1;
	return true;
}

stock ShowMenu_input(playerid, menuid[])
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
	if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	new str[256];
	if(strcmp(menuid, "mn_changeName_input") == 0)
	{
        format(str,sizeof(str),"%s\n\n%s",PlayerInfo[playerid][Name],str_ChangeName);
		ShowPlayerDialogEx(playerid,menuid,1, "{"#COLOR_DIALOG_MENU"}Смена ника", str, "Выбрать", "Назад");
	}
	if(strcmp(menuid, "mn_changePass_input") == 0)
	{
		ShowPlayerDialogEx(playerid, menuid, DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Смена пароля", "Введи своё секретное слово" ,"Выбрать","Назад");
	}
	if(strcmp(menuid, "mn_changePass2_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,1,"{"#COLOR_DIALOG_MENU"}Смена пароля","Введи новый пароль","Выбрать","Назад");
	}
	if(strcmp(menuid, "mn_changeCode_input") == 0)
	{
		if(IsValidCode(playerid)) ShowPlayerDialogEx(playerid, menuid, DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Смена секретного слова", "{"#cWHITE"}Секретное слово необходимо для защиты аккаунта и требуется при смене пароля\n{"#cRED"}Его нельзя сообщать не кому!!!\n{"#cWHITE"}Введи своё существующее слово для его смены", "Выбрать", "Назад");
		else ShowPlayerDialogEx(playerid, "mn_changeCode2_input", DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Смена секретного слова", "{"#cWHITE"}Секретное слово необходимо для защиты аккаунта и требуется при смене пароля\n{"#cRED"}Его нельзя сообщать не кому!!!\n{"#cWHITE"}Введи новое секретное слово" ,"Выбрать","Назад");
	}
	if(strcmp(menuid, "mn_changeCode2_input") == 0)
	{
		ShowPlayerDialogEx(playerid, menuid, DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Смена секретного слова", "{"#cWHITE"}Секретное слово необходимо для защиты аккаунта и требуется при смене пароля\n{"#cRED"}Его нельзя сообщать не кому!!!\n{"#cWHITE"}Введи новое секретное слово" ,"Выбрать","Назад");
	}
	if(strcmp(menuid, "mn_changeSkin_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,1, "{"#COLOR_DIALOG_MENU"}Смена скина", "Введи номер скина от 0 до 311\nПосмотреть номера скинов можно на сайте - {"#cRED"}wiki.sa-mp.com/wiki/Skins:All", "Выбрать", "Назад");
	}
	if(strcmp(menuid, "mn_emailChange_input") == 0)
	{
		if(PlayerInfo[playerid][CheckEmail] == 0)
		{
			format(str,sizeof(str),"{FFFFFF}*****************Введи свой новый Email*****************\n\nТекущий email:{00FF00} %s",PlayerInfo[playerid][Email]);
			ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Смена Email",str,"Выбрать","Назад");
		}
		else
		{
			format(str,sizeof(str),"{FFFFFF}Для ввода нового Email тебе необходимо открепить старый\nТекущий email: {00FF00}%s\nЯщик подтверждён",PlayerInfo[playerid][Email]);
			ShowPlayerDialogEx(playerid,menuid,0,"{"#COLOR_DIALOG_MENU"}Подтвердить свой Email",str,"Назад","");
		}
	}
	if(strcmp(menuid, "mn_emailCheck_input") == 0)
	{
		if(!strcmp(PlayerInfo[playerid][Email], " ", true))
		{
			ShowMenu(playerid, d_Email);
			return SendClientMessage(playerid,0xAFAFAFAA,"Email не введён");
		}
		if(PlayerInfo[playerid][CheckEmail] == 0)
		{
			format(str,sizeof(str),"{FFFFFF}Введи код подтверждения высланный на введённый тобой Email\n\nТекущий email: {00FF00}%s",PlayerInfo[playerid][Email]);
			ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Подтвердить свой Email",str,"Выбрать","Назад");
		}
		else if(PlayerInfo[playerid][CheckEmail] == 1 && PlayerInfo[playerid][EmailKey] == 0)
		{
			format(str,sizeof(str),"{FFFFFF}Ты уверен что хочешь открепить свой Email?\nТекущий Email: {00FF00}%s",PlayerInfo[playerid][Email]);
			ShowPlayerDialogEx(playerid,menuid,0,"{"#COLOR_DIALOG_MENU"}Открепление своего Email",str,"Выбрать","Назад");
		}
		else if(PlayerInfo[playerid][CheckEmail] == 1 && PlayerInfo[playerid][EmailKey])
		{
			format(str,sizeof(str),"{FFFFFF}Введи код подтверждения открепление Email\nТекущий Email: {00FF00}%s",PlayerInfo[playerid][Email]);
			ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Подтвердить открепление своего Email",str,"Выбрать","Назад");
		}
	}
	if(strcmp(menuid, "mn_Referal_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Выбор игрока пригласившего тебя",str_Referal,"Выбрать","Назад");
	}
	if(strcmp(menuid, "mn_ColorChat_input") == 0)
	{
		if(!IsPlayerVip(playerid))
		{
			ShowMenu(playerid, d_Chat);
			return SendClientMessage(playerid,COLOR_GREY,"Функция доступна только Vip пользователям");
		}
		format(str, sizeof(str), "{FFFFFF}Выбери цвет в чате который по умолчанию\nВводить необходимо в формате FFFFFF\nЧтобы устоновить стандартный цвет выбери FFFFFF\n{%s}Твой цвет ника %s", PlayerInfo[playerid][ColorChat], PlayerInfo[playerid][ColorChat]);
		ShowPlayerDialogEx(playerid, menuid, DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Выбор цвета чата по умолчанию", str, "Выбрать", "Назад");
	}
	if(strcmp(menuid, "mn_Kill_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,0,"{"#COLOR_DIALOG_MENU"}Самоубийство","Совершить самоубийство?","Умереть","Назад");
	}
	if(strcmp(menuid, "mn_pointerHouse_input") == 0)
	{
		format(str, sizeof(str), "Введи номер дома от 0 до %d", houseid-1);
		ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Установить указатель к дому",str,"Установить","Назад");
	}
	if(strcmp(menuid, "mn_searchNick_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Поиск игроков по никам","Введи ник или часть ника для поиска по игрокам, максимально показывает 160 игроков\nМаленькие и большие буквы не учитываются","Поиск","Назад");
	}
	if(strcmp(menuid, "mn_searchAccount_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Поиск игроков по номеру аккаунта","Введи номер аккаунта для поиска по игрокам","Поиск","Назад");
	}
	if(strcmp(menuid, "mn_admList_input") == 0)
	{
        new sctring[512], n = 0;
        f(str,"Ид\t\t\tНик\t\tУровень\t\tСтатус\n");
	    strcat(sctring,str);
		for(new i;i<=GetPlayerPoolSize();i++)
		{
			if(!IsPlayerConnected(i) || !PlayerInfo[i][AdminLevel]) continue;
			PlayerInfo[playerid][ListItem][n] = i;
			n ++;
			f(str,"%d\t\t\t", i);
			strcat(sctring,str);
			f(str,"%s\t\t", PlayerInfo[i][Name]);
			strcat(sctring,str);

            if(IsAdminAccess(playerid,100,1))
            {
				f(str,"%d\t\t", PlayerInfo[i][AdminLevel]);
				strcat(sctring,str);
			}
			else
			{
				f(str,"Админ\t\t");
				strcat(sctring,str);
			}

			if(IsPlayerPaused(i))
            {
                f(str,"Отошёл\n");
			}else{
				f(str," \n");
			}
			strcat(sctring,str);
		}
		if(!n) strcat(sctring,"Админов в сети нет");
		SetPVarInt(playerid, "ItemAmount", n);
		ShowPlayerDialogEx(playerid,menuid, DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Админы в сети",sctring, "Выбрать", "Назад");
	}
	if(strcmp(menuid, "mn_Control_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_MSGBOX,"{"#COLOR_DIALOG_MENU"}Управление",str_Control,"Выход","Назад");
	}
	if(strcmp(menuid, "mn_Command_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,DIALOG_STYLE_MSGBOX,"{"#COLOR_DIALOG_MENU"}Команды",str_Commands,"Выход","Назад");
	}
	return true;
}

DIALOG:mn_changeName_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
	if(emptyMessage(inputtext))
	{
 	 	ShowMenu_input(playerid, "mn_changeName_input");
		return SendClientMessage(playerid,CGRAY,"Введи новый ник");
	}
	if(PlayerInfo[playerid][MuteTime] > 0)
	{
		ShowMenu_input(playerid, "mn_changeName_input");
		return SendClientMessage(playerid, COLOR_GREY, "Ты заглушен и не можешь менять ник");
	}
	if(CheckAdv(inputtext))
	{
		ShowMenu_input(playerid, "mn_changeName_input");
		return SendClientMessage(playerid,COLOR_GREY,"Подозрение на рекламу");
	}
	new oldname[MAX_PLAYER_NAME];
	switch(SetPlayerNickName(playerid, inputtext, oldname))
    {
        case -2:
        {
			ShowMenu_input(playerid, "mn_changeName_input");
			return SendClientMessage(playerid, COLOR_GREY, "Ник слишком длинный");
		}
        case -1:
		{
	        ShowMenu_input(playerid, "mn_changeName_input");
			return SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы в нике");
		}
        case 0:
        {
			ShowMenu_input(playerid, "mn_changeName_input");
			return SendClientMessage(playerid, COLOR_GREY, "Этот ник уже занят");
		}
		case 1:
		{
			new fstr[128];
			format(fstr, sizeof(fstr), "Игрок %s [%d] сменил ник на %s", oldname, playerid , inputtext);
		    SendClientMessageWithoutPlayer(COLOR_GREY,fstr);
			SendClientMessage(playerid, CRED, "ВНИМАНИЕ: не забудь поменять на новый ник в клиенте");
			SendClientMessage(playerid, CRED, "ВНИМАНИЕ: Если ты забудешь сменить имя в клиенте, свой новый ник можно посмотреть на сайте");
			SendClientMessage(playerid, CRED, "В разделе Разное - история аккаунтов");
		}
    }
	return 1;
}

DIALOG:mn_changePass_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
    if(!strlen(inputtext) || emptyMessage(inputtext))
 	{
     	ShowMenu_input(playerid, "mn_changePass_input");
     	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
 	}
    if(!IsValidCode(playerid))
    {
	    ShowMenu_input(playerid, "mn_changePass_input");
     	return SendClientMessage(playerid,CGRAY,"У тебя не установлено секретное слово, ты не можешь менять пароль");
    }
    if(!strcmp(inputtext,PlayerInfo[playerid][Code],false) && strlen(inputtext))
    {
        ShowMenu_input(playerid, "mn_changePass2_input");
    }
    else
    {
        ShowMenu_input(playerid, "mn_changePass_input");
        return SendClientMessage(playerid,CGRAY,"Ты ввёл неправильное секретное слово");
    }
	return 1;
}

DIALOG:mn_changePass2_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
    if(!strlen(inputtext) || emptyMessage(inputtext))
 	{
     	ShowMenu_input(playerid, "mn_changePass2_input");
     	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
 	}
 	for(new i; i < strlen(inputtext); i++) switch(inputtext[i])
	{
	    case '0'..'9': continue;
	    case 'a'..'z': continue;
	    case 'A'..'Z': continue;
	    case 'а'..'я': continue;
	    case 'А'..'Я': continue;
	    default: return ShowMenu_input(playerid, "mn_changePass2_input");
    }
    if(strlen(inputtext) > MAX_PLAYER_PASSWORD)
    {
        ShowMenu_input(playerid, "mn_changePass2_input");
        return SendClientMessage(playerid,CGRAY,"Пароль не должен превышать 100 символов");
    }
    ChangePassword(playerid, inputtext);
	return 1;
}

DIALOG:mn_changeCode_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
    if(!emptyMessage(inputtext))
	{
        if(!IsValidCode(playerid) || GetPVarInt(playerid, "changecode") == 1)
        {
		    if(!strcmp(inputtext, PlayerInfo[playerid][Password], true))
			{
				ShowMenu_input(playerid, "mn_changeCode_input");
				return SendClientMessage(playerid,CGRAY,"Секретное слово не может быть равным паролю");
		 	}
		 	if(!IsPassword(inputtext))
			{
				ShowMenu_input(playerid, "mn_changeCode_input");
				return SendClientMessage(playerid, 0xAFAFAFAA, "Ты использовал запрещенные символы");
			}
		 	if(strlen(inputtext) > MAX_PLAYER_PASSWORD)
			{
				ShowMenu_input(playerid, "mn_changeCode_input");
				return SendClientMessage(playerid, CGRAY, "Секретное слово не должен превышать 100 символов");
			}
		 	ChangeCode(playerid, inputtext);
        }
        if(IsValidCode(playerid))
        {
            if(!strcmp(inputtext,PlayerInfo[playerid][Code],false) && strlen(inputtext))
            {
             	ShowMenu_input(playerid, "mn_changeCode2_input");
	        }
	        else
	        {
                ShowMenu_input(playerid, "mn_changeCode_input");
	         	return SendClientMessage(playerid,CGRAY,"Ты ввёл неправильное секретное слово");
	        }
        }
    }
    else
    {
        ShowMenu_input(playerid, "mn_changeCode_input");
     	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
    }
	return 1;
}

DIALOG:mn_changeCode2_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
 	if(!strlen(inputtext) || emptyMessage(inputtext))
 	{
     	ShowMenu_input(playerid, "mn_changeCode2_input");
     	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
 	}
 	if(!strcmp(inputtext, PlayerInfo[playerid][Password], true))
	{
		ShowMenu_input(playerid, "mn_changeCode2_input");
		return SendClientMessage(playerid,CGRAY,"Секретное слово не может быть равным паролю");
    }
    if(!IsPassword(inputtext))
	{
		ShowMenu_input(playerid, "mn_changeCode2_input");
		return SendClientMessage(playerid, 0xAFAFAFAA, "Ты использовал запрещенные символы");
	}
	if(strlen(inputtext) > MAX_PLAYER_PASSWORD)
	{
		ShowMenu_input(playerid, "mn_changeCode2_input");
		return SendClientMessage(playerid, CGRAY, "Секретное слово не должен превышать 100 символов");
	}
 	ChangeCode(playerid, inputtext);
	return 1;
}

DIALOG:mn_changeSkin_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
    if(strval(inputtext) >= 0 && strval(inputtext) <= 311)
	{
    	SetPlayerSkin(playerid,strval(inputtext));
    	PlayerInfo[playerid][Skin] = strval(inputtext);
    	SendClientMessage(playerid,CLIGHTGREEN,"Ты сменил скин");
    	mysql_player_update_int(playerid, "Skin", PlayerInfo[playerid][Skin]);
    	SetObjectToPlayer(playerid);
    	ShowMenu_input(playerid, "mn_changeSkin_input");
	}
	else
	{
		ShowMenu_input(playerid, "mn_changeSkin_input");
		return SendClientMessage(playerid,CGRAY,"Не правильный номер скина!");
	}
	return 1;
}

DIALOG:mn_emailChange_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Email);
    if(PlayerInfo[playerid][CheckEmail] == 1) return ShowMenu(playerid, d_Email);
    if(!strlen(inputtext) || emptyMessage(inputtext))
 	{
     	ShowMenu_input(playerid, "mn_emailChange_input");
     	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
 	}
 	if(strlen(inputtext) >= MAX_PLAYER_EMAIL)
 	{
	 	ShowMenu_input(playerid, "mn_emailChange_input");
	 	return SendClientMessage(playerid,CGRAY,"Слишком длинный текст");
 	}
 	new string[256];
 	strmid(PlayerInfo[playerid][Email], inputtext, 0, strlen(inputtext), MAX_PLAYER_EMAIL);
 	format(string,sizeof(string),"Введённый ящик: %s, необходимо его подтвердить введя код подтверждения в разделе Email",PlayerInfo[playerid][Email]);
    SendClientMessage(playerid,0x00FF00AA,string);
    PlayerInfo[playerid][EmailKey] = 140000+random(1543000);
    mysql_player_update_str(playerid, "Email", inputtext);
    mysql_player_update_int(playerid, "EmailKey", PlayerInfo[playerid][EmailKey]);
	SenderEmail(playerid);
	return 1;
}

DIALOG:mn_emailCheck_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Email);
 	new string[256];
    if(PlayerInfo[playerid][CheckEmail] == 0)
	{
		if(!strlen(inputtext) || emptyMessage(inputtext))
 	 	{
         	ShowMenu_input(playerid, "mn_emailCheck_input");
         	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
 	 	}
	    if(strval(inputtext) != PlayerInfo[playerid][EmailKey] && strval(inputtext) || strval(inputtext) == 0)
		{
			ShowMenu_input(playerid, "mn_emailCheck_input");
			return SendClientMessage(playerid,0xAFAFAFAA,"Пароль подтверждения неверный");
		}
		SendClientMessage(playerid,0x00FF00AA,"Ты подтвердил свой Email");
		PlayerInfo[playerid][CheckEmail] = 1;
        PlayerInfo[playerid][EmailKey] = 0;
        mysql_player_update_int(playerid, "CheckEmail", PlayerInfo[playerid][CheckEmail]);
        mysql_player_update_int(playerid, "EmailKey", PlayerInfo[playerid][EmailKey]);
	}
	else if(PlayerInfo[playerid][CheckEmail] == 1 && PlayerInfo[playerid][EmailKey] == 0)
	{
		format(string,sizeof(string),"Пароль для подтверждения открепления Email отослан на ящик %s",PlayerInfo[playerid][Email]);
	    SendClientMessage(playerid,0x00FF00AA,string);
	    PlayerInfo[playerid][EmailKey] = 140000+random(1543000);
        mysql_player_update_int(playerid, "EmailKey", PlayerInfo[playerid][EmailKey]);
        ShowMenu_input(playerid, "mn_emailCheck_input");
        SenderEmail(playerid);
	}
	else if(PlayerInfo[playerid][CheckEmail] == 1 && PlayerInfo[playerid][EmailKey])
	{
		if(!strlen(inputtext) || emptyMessage(inputtext))
 	 	{
         	ShowMenu_input(playerid, "mn_emailCheck_input");
         	return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
 	 	}
		if(strval(inputtext) != PlayerInfo[playerid][EmailKey] && strval(inputtext) || strval(inputtext) == 0)
		{
			ShowMenu_input(playerid, "mn_emailCheck_input");
			SendClientMessage(playerid,0xAFAFAFAA,"Пароль подтверждения неверный");
			return 1;
		}
		SendClientMessage(playerid,0x00FF00AA,"Ты открепил свой Email");
		PlayerInfo[playerid][EmailKey] = 140000+random(1543000);
        PlayerInfo[playerid][CheckEmail] = 0;
        mysql_player_update_int(playerid, "CheckEmail", PlayerInfo[playerid][CheckEmail]);
        mysql_player_update_int(playerid, "EmailKey", PlayerInfo[playerid][EmailKey]);
	}
	return 1;
}

DIALOG:mn_Referal_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Options);
	new account, string[128];
	sscanf(inputtext, "d", account);
	if(!strlen(inputtext) || emptyMessage(inputtext))
	{
		ShowMenu_input(playerid, "mn_Referal_input");
		return SendClientMessage(playerid,CGRAY,"Поле не может быть пустым");
	}
	if(PlayerInfo[playerid][ReferalID] == 0)
	{
		if(account == PlayerInfo[playerid][ID])
		{
			ShowMenu_input(playerid, "mn_Referal_input");
			return SendClientMessage(playerid,0xAFAFAFAA,"Это твой номер аккаунта");
		}
		if(!SQL::RowExists("accounts", "ID", account))
		{
			ShowMenu_input(playerid, "mn_Referal_input");
			return SendClientMessage(playerid,0xAFAFAFAA,"Неверный номер аккаунта");
		}
		new mysqlname[24];
		strcat(mysqlname, GetAccountName(account));
		PlayerInfo[playerid][ReferalID] = account;
		format(string,sizeof(string),"Ты записал номер аккаунта: %d",PlayerInfo[playerid][ReferalID]);
	    SendClientMessage(playerid,0x00FF00AA,string);
	    if(IsPlayerConnected(GetPlayerID_Name(mysqlname)))
		{
			format(string,sizeof(string),"Игрок %s [%d] записал тебя как пригласившего на сервер",PlayerInfo[playerid][Name], playerid);
			SendClientMessage(GetPlayerID_Name(mysqlname),0xFF0000AA,string);
			SendClientMessage(GetPlayerID_Name(mysqlname),0xFF0000AA,"Приглашай еще чтобы получить больше бонусов");
		}
		mysql_player_update_int(playerid, "ReferalID", PlayerInfo[playerid][ReferalID]);
	}
    else
    {
	    return SendClientMessage(playerid,0xAFAFAFAA,"Ты уже записал номер аккаунта");
    }
	return 1;
}

DIALOG:mn_ColorChat_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Chat);
	LowerToUpper(inputtext);
	if(!IsPlayerVip(playerid))
	{
		ShowMenu_input(playerid, "mn_ColorChat_input");
		return SendClientMessage(playerid,COLOR_GREY,"Функция доступна только Vip пользователям");
	}
	if(strlen(inputtext) != 6)
	{
		ShowMenu_input(playerid, "mn_ColorChat_input");
	    return SendClientMessage(playerid, 0xAFAFAFAA, "Необходимо ввести 6 цифр");
	}
	if(IsValidHEX(inputtext))
	{
		format(PlayerInfo[playerid][ColorChat], 16, "%s", inputtext);
		mysql_player_update_str(playerid, "ColorChat", PlayerInfo[playerid][ColorChat]);
		ShowMenu_input(playerid, "mn_ColorChat_input");
    }
	else
	{
        ShowMenu_input(playerid, "mn_ColorChat_input");
		SendClientMessage(playerid, 0xAFAFAFAA, "Неверные символы");
	}
	return 1;
}

cmd:kill(playerid, params[])
{
	if(PlayerInfo[playerid][JailTime]) return SendClientMessage(playerid,CGRAY,"Ты в тюрьме!");
	if(!IsPlayerSpawned(playerid)) return SendClientMessage(playerid,CGRAY,"Сейчас ты не можешь использовать эту команду!");
	SetPlayerHealth(playerid,0);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
    return 1;
}
alias:kill("умереть");

DIALOG:mn_Kill_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Other);
    callcmd::kill(playerid, "");
	return 1;
}

DIALOG:mn_pointerHouse_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	new hid;
 	sscanf(inputtext, "d", hid);
	if(!response) return ShowMenu(playerid, d_Info);
	if(!strlen(inputtext) || emptyMessage(inputtext))
	{
		ShowMenu_input(playerid, "mn_pointerHouse_input");
		return SendClientMessage(playerid,CGRAY,"Введи номер дома");
	}
	if(hid < 0 || hid > houseid-1)
	{
		ShowMenu_input(playerid, "mn_pointerHouse_input");
		return SendClientMessage(playerid, CGRAY, "Неверный номер дома");
	}
	return 1;
}

DIALOG:mn_searchNick_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowMenu(playerid, d_Info);
 	if(!strlen(inputtext) || emptyMessage(inputtext))
    {
	    ShowMenu_input(playerid, "mn_searchNick_input");
	    return SendClientMessage(playerid,0xAFAFAFAA,"Ты хочешь искать по пустой строке?");
    }
	new Search, str[528];
	f(str,"Номер аккаунта\t\t\t\tНик\n%s", str);
	for(new i;i<=GetPlayerPoolSize();i++)
    {
        if(!IsPlayerConnected(i)) continue;
        if(!PlayerInfo[i][Logged]) continue;
        if(strfind(PlayerInfo[i][Name],inputtext,true) != -1)
        {
	        format(str, sizeof(str), "%s%d\t\t\t\t%s\t\t%s\n", str, PlayerInfo[i][ID], PlayerInfo[i][Name]);
	        PlayerInfo[playerid][ListItem][Search] = i;
		    Search++;
	    }
    }
    if(!Search) strcat(str, "Что случилось? Ничего не найдено!");
    SetPVarInt(playerid, "ItemAmount", Search);
	ShowPlayerDialogEx(playerid, "mn_searchNick2_input", DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Поиск игроков по никам",str, "Выбор", "Назад");
	return 1;
}

DIALOG:mn_searchNick2_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu_input(playerid, "mn_searchNick_input");
    if(GetPVarInt(playerid, "ItemAmount") == 0)
    {
 	    ShowMenu(playerid, d_Info);
    }else{
	    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
    }
	return 1;
}

DIALOG:mn_searchAccount_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
    if(!response) return ShowMenu(playerid, d_Info);
 	if(!strlen(inputtext) || emptyMessage(inputtext))
    {
	    ShowMenu_input(playerid, "mn_searchAccount_input");
	    return SendClientMessage(playerid,0xAFAFAFAA,"Ты хочешь искать по пустой строке?");
    }
	new Search, str[528];
	for(new i;i<=GetPlayerPoolSize();i++)
    {
        if(!IsPlayerConnected(i)) continue;
        if(!PlayerInfo[i][Logged]) continue;
		if(PlayerInfo[i][ID] == strlen(inputtext) && PlayerInfo[playerid][ID] != strlen(inputtext))
        {
	        format(str, sizeof(str), "%s%d. %s Номер аккаунта %d", str, i, PlayerInfo[i][Name], PlayerInfo[i][ID]);
	        PlayerInfo[playerid][ListItem][Search] = i;
		    Search++;
	    }
    }
    if(!Search) strcat(str, "Что случилось? Ничего не найдено!");
    SetPVarInt(playerid, "ItemAmount", Search);
	ShowPlayerDialogEx(playerid, "mn_searchAccount2_input", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Поиск игроков по номеру аккаунта",str, "Выбор", "Назад");
	return 1;
}

DIALOG:mn_searchAccount2_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu_input(playerid, "mn_searchAccount_input");
    if(GetPVarInt(playerid, "ItemAmount") == 0)
    {
 	    ShowMenu(playerid, d_Info);
    }else{
	    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
    }
	return 1;
}

DIALOG:mn_admList_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Info);
    if(GetPVarInt(playerid, "ItemAmount") == 0)
    {
 	    ShowMenu(playerid, d_Info);
    }else{
	    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
    }
	return 1;
}

DIALOG:mn_Command_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Info);
	return 1;
}

DIALOG:mn_Control_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Info);
	return 1;
}

stock ShowPlayerMenu(targetid, playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
	if(PlayerInfo[targetid][Logged] != 1)
	{
		return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	switch(menuid)
	{
		case d_pMenu:
		{
        	new strtab[128];
			if(IsAdminAccess(playerid,100,1))
			{
				AddDListItem(playerid, "Админка", pmn_Admin);
			}
			AddDListItem(playerid, "Наблюдать", pmn_Spec);
			AddDListItem(playerid, "{00FF00}Статистика", pmn_Stats);
			AddDListItem(playerid, "{ffffff}Послать личное сообщение", pmn_SendPM);
			AddDListItem(playerid, "{FFFF00}Пожаловаться на игрока", pmn_Report);
			AddDListItem(playerid, "Игнорировать ЛС и сообщение от этого игрока", pmn_ignoredPM);
			AddDListItem(playerid, "Дать денег", pmn_gMoney);
			AddDListItem(playerid, "Перевести деньги со своего счёта на счёт игрока", pmn_gBank);
			if(PlayerInfo[playerid][Clan] != 0)
	        {
				AddDListItem(playerid, "Клановые действия", pmn_pClan);
			}
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
			{
                AddDListItem(playerid, "Выкинуть из машины", pmn_Eject);
			}
			if(IsAdminAccess(playerid,100,1))
			{
				AddDListItem(playerid, "Дополнительная информация", pmn_AddStat);
			}
			AddDListItem(playerid, "История ников", pmn_historySetName);
			if(IsPlayerPaused(targetid))
            {
                format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}%s [%d] {00FF00}Отошёл %s", PlayerInfo[targetid][Name],targetid, MTF(GetPlayerPausedTime(targetid)/1000));
            }else{
			    format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}%s [%d]", PlayerInfo[targetid][Name],targetid);
			}
 			ShowPlayerDList(playerid, d_pMenu, strtab, "Выбрать", "Выход");
		}
		case d_Report:
		{
            new strtab[128], string[sizeof(ComplaintReason)*20];
		    format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Жалоба на игрока %s [%d]", PlayerInfo[targetid][Name],targetid);
			for (new i = 0; i < sizeof(ComplaintReason); i++)
			{
				format(string, sizeof(string),
					"%s%s\n",
					string,
					ComplaintReason[i]
				);
			}
			strcat(string, "Другое");
		    ShowPlayerDialog(playerid,d_Report,2,strtab,string,"Выбрать","Назад");
		}
		case d_pClan:
		{
			new clan = PlayerInfo[playerid][Clan];
		    if(!PlayerInfo[targetid][Clan] && PlayerInfo[playerid][Clan] && PlayerInfo[playerid][ClanRank] >= 3
			&& ClanInfo[clan][cPlayers] != MaxPlayerClan(clan))
		    {
				AddDListItem(playerid, "Пригласить в клан", pmn_inviteClan);
			}
			else if(PlayerInfo[targetid][Clan] == PlayerInfo[playerid][Clan] && PlayerInfo[playerid][ClanRank] >= 3
			&& PlayerInfo[targetid][ClanRank] <= PlayerInfo[playerid][ClanRank])
		    {
		        AddDListItem(playerid, "Установить ранг в клане", pmn_grankClan);
				AddDListItem(playerid, "Выганть из клана", pmn_uninviteClan);
			}
			else
			{
				AddDListItem(playerid, "Действие невозможно", pmn_errorClan);
			}
			ShowPlayerDList(playerid, d_pClan, "{"#COLOR_DIALOG_MENU"}Клановые действия", "Выбрать", "Назад");
		}
		case d_gRankClan:
		{
		    if(PlayerInfo[playerid][ClanRank] >= 3)
		    {
				AddDListItem(playerid, "Новичёк", pmn_clanRank1);
				AddDListItem(playerid, "Воин", pmn_clanRank2);
			}
			if(PlayerInfo[playerid][ClanRank] >= 4)
		    {
		    	AddDListItem(playerid, "Заместитель вожака", pmn_clanRank3);
			}
			if(PlayerInfo[playerid][ClanRank] >= 5)
		    {
		    	AddDListItem(playerid, "Главный заместитель", pmn_clanRank4);
		    	AddDListItem(playerid, "Передать лидерство", pmn_clanRank5);
			}
			ShowPlayerDList(playerid, d_gRankClan, "{"#COLOR_DIALOG_MENU"}Клановые действия", "Выбрать", "Назад");
		}
    }
	return true;
}

stock ShowPlayerMenu_input(targetid, playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
	if(PlayerInfo[targetid][Logged] != 1)
	{
		return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	new str[256];
	new strtab[128];
	switch(menuid)
	{
		case pmn_SendPM_input:
		{
		    format(str,sizeof(str),"Отправить личное сообщение игроку %s",PlayerInfo[targetid][Name]);
		    format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Личное сообщение для %s",PlayerInfo[targetid][Name]);
		    ShowPlayerDialog(playerid,pmn_SendPM_input,DIALOG_STYLE_INPUT,strtab,str,"Отправить","Назад");
		}
		case pmn_Report_input:
		{
            format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Жалоба на игрока %s [%d]",PlayerInfo[targetid][Name], targetid);
			ShowPlayerDialog(playerid,pmn_Report_input,1, strtab, "Ты уверен что хочешь пожаловаться на игрока?\nЕсли он читер, опиши его действия\nМаксимальная длина сообщения 20 символов", "Жалоба", "Назад");
		}
		case pmn_ignoredPM_input:
		{
			format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Игнорирование %s [%d]",PlayerInfo[targetid][Name], targetid);
			if(!PlayerInfo[playerid][IgnoredPM][targetid])
			{
				ShowPlayerDialog(playerid,pmn_ignoredPM_input,DIALOG_STYLE_MSGBOX, strtab, "****************Игрок не заигнорен****************", "Игнорить", "Назад");
			}
			else
			{
				ShowPlayerDialog(playerid,pmn_ignoredPM_input,DIALOG_STYLE_MSGBOX, strtab, "****************Игрок заигнорен****************", "Разигнорить", "Назад");
			}
		}
		case pmn_gMoney_input:
		{
			format(str,sizeof(str),"{"#cWHITE"}Введи сумму денег которую ты хочешь накинуть со своих рук на руки игрока\n{ffff00}Сумма на руках: {00ff00}${ffffff}%i", PlayerInfo[playerid][Money]);
			format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Дать денег %s [%d]", PlayerInfo[targetid][Name], targetid);
			ShowPlayerDialog(playerid,pmn_gMoney_input,1, strtab, str, "Дать", "Назад");
		}
		case pmn_gBank_input:
		{
			format(str,sizeof(str),"{"#cWHITE"}Введи сумму денег которую ты хочешь накинуть со своего счета на счет игрока\n{ffff00}Сумма в банке: {00ff00}${ffffff}%i", PlayerInfo[playerid][Bank]);
			format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Перевод денег %s [%d]", PlayerInfo[targetid][Name], targetid);
			ShowPlayerDialog(playerid,pmn_gBank_input,1, strtab, str, "Перевести", "Назад");
		}
		case pmn_Eject_input:
		{
			format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Выкидывание игрока %s [%d] из машина", PlayerInfo[targetid][Name], targetid);
			ShowPlayerDialog(playerid,pmn_Eject_input,DIALOG_STYLE_MSGBOX, strtab, "****************Выкинуть?****************", "Выкинуть", "Назад");
		}
		case pmn_inviteClan_input:
		{
            format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Пригласить игрока %s [%d] в клана", PlayerInfo[targetid][Name], targetid);
			ShowPlayerDialog(playerid,pmn_inviteClan_input,DIALOG_STYLE_MSGBOX,strtab,"*************Отправить приглашение*************","Пригласить","Назад");
		}
		case pmn_uninviteClan_input:
		{
			format(strtab,sizeof(strtab),"{"#COLOR_DIALOG_MENU"}Выгнать игрока %s [%d] из клана", PlayerInfo[playerid][Name], targetid);
			ShowPlayerDialog(playerid,pmn_uninviteClan_input,DIALOG_STYLE_MSGBOX,strtab,"Ты уверен что хочешь выгнать игрока из клана?","Да","Назад");
		}
    }
	return true;
}

stock ShowClanMenu(playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	switch(menuid)
	{
		case d_ClanMenu:
		{
			if(PlayerInfo[playerid][Clan])
			{
				AddDListItem(playerid, "Информация о твоём клане", cm_ClanStats);
			}
			AddDListItem(playerid, "Список кланов", cm_ClanList);
			AddDListItem(playerid, "Список кланов - по рейтингу", cm_ClanRating);
			AddDListItem(playerid, "Управления кланом", cm_Mng);
			AddDListItem(playerid, "Описание клановой системы", cm_Description);
			if(!PlayerInfo[playerid][Clan] && PlayerInfo[playerid][InvitedClan])
			{
				AddDListItem(playerid, "Принять приглашение", cm_inviteClan);
			}
			if(PlayerInfo[playerid][Clan] && PlayerInfo[playerid][ClanRank] != 1)
			{
				AddDListItem(playerid, "Положить деньги в казну клана", cm_MoneyPut);
				AddDListItem(playerid, "Снять деньги из казны клана", cm_MoneyTake);
			}
	     	ShowPlayerDList(playerid, d_ClanMenu, "{"#COLOR_DIALOG_MENU"}Кланы", "Выбрать", "Назад");
		}
		case d_ClanMng:
		{
            AddDListItem(playerid, "Создать", cm_createClan);
			if(PlayerInfo[playerid][Clan])
			{
				AddDListItem(playerid, "Удалить", cm_deleteClan);
				AddDListItem(playerid, "Переименовать", cm_renameClan);
				AddDListItem(playerid, "Выйти из клана", cm_exitClan);
				AddDListItem(playerid, "Повысить уровень клана", cm_LevelUP);
				AddDListItem(playerid, "Список игроков в клане", cm_MemberList);
			}
	     	ShowPlayerDList(playerid, d_ClanMng, "{"#COLOR_DIALOG_MENU"}Управление кланом", "Выбрать", "Назад");
		}
		case d_renameClan:
		{
		    AddDListItem(playerid, "Переименовать название", cm_reName);
		    AddDListItem(playerid, "Переименовать тег", cm_reTag);
	     	ShowPlayerDList(playerid, d_renameClan, "{"#COLOR_DIALOG_MENU"}Переименование", "Выбрать", "Назад");
		}
		case d_ClanMemberList2:
		{
			new contents[50];
			new clan = PlayerInfo[playerid][Clan];
			new number = GetPVarInt(playerid, "ClanNumberToManage");
			new place = PlayerInfo[playerid][ClanPlaceList][number];
		    //AddDListItem(playerid, "Установить ранг в клане", cm_grankClan);
		    AddDListItem(playerid, "Выганть из клана", cm_uninviteClan);
		    format(contents,sizeof(contents),"{"#COLOR_DIALOG_MENU"}Соклан %s",ClanMember[clan][place][cmName]);
	     	ShowPlayerDList(playerid, d_ClanMemberList2, contents, "Выбрать", "Назад");
		}
	}
	return true;
}

stock ShowClanMenu_input(playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	new str[256];
	switch(menuid)
	{
	    case cm_inviteClan_input:
		{
			ShowPlayerDialog(playerid,cm_inviteClan_input,DIALOG_STYLE_MSGBOX,"{FFFFFF}Принять приглашение","*************Принять приглашение*************","Пригласить","Отказ");
		}
		case cm_createClan_input:
		{
			ShowPlayerDialog(playerid,cm_createClan_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Создания клана", "Введи названия клана", "Выбрать", "Отмена");
		}
		case cm_createClan2_input:
		{
			ShowPlayerDialog(playerid,cm_createClan2_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Создания клана", "Введи тег клана", "Выбрать", "Отмена");
		}
		case cm_deleteClan_input:
		{
			ShowPlayerDialog(playerid,cm_deleteClan_input,DIALOG_STYLE_MSGBOX,"{"#COLOR_DIALOG_MENU"}Удаления клана","Ты уверен что хочешь расформировать клан?","Да","Отмена");
		}
		case cm_exitClan_input:
		{
			ShowPlayerDialog(playerid,cm_exitClan_input,DIALOG_STYLE_MSGBOX,"{"#COLOR_DIALOG_MENU"}Выход из клана","Ты уверен что хочешь уйти из клана?","Да","Отмена");
		}
		case cm_MoneyPut_input:
		{
		    new clan = PlayerInfo[playerid][Clan];
			format(str, sizeof(str),"{"#cYELLOW"}В казне клана: {"#cLIGHTGREEN"}$%i / $%i\n\
			{"#cWHITE"}На руках: {"#cLIGHTGREEN"}$%i\n\
			{"#cWHITE"}В банке: {"#cLIGHTGREEN"}$%i", ClanInfo[clan][cBank], ClanInfo[clan][cLevel]*1000000, PlayerInfo[playerid][Money],PlayerInfo[playerid][Bank]);
			ShowPlayerDialog(playerid,cm_MoneyPut_input,DIALOG_STYLE_INPUT,"{FFFFFF}Положить деньги в казну клана",str,"Положить","Назад");
		}
		case cm_MoneyTake_input:
		{
		    new clan = PlayerInfo[playerid][Clan];
			format(str, sizeof(str),"{"#cYELLOW"}В казне клана: {"#cLIGHTGREEN"}$%i / $%i\n\
			{"#cWHITE"}На руках: {"#cLIGHTGREEN"}$%i\n\
			{"#cWHITE"}В банке: {"#cLIGHTGREEN"}$%i", ClanInfo[clan][cBank], ClanInfo[clan][cLevel]*1000000, PlayerInfo[playerid][Money],PlayerInfo[playerid][Bank]);
			ShowPlayerDialog(playerid,cm_MoneyTake_input,DIALOG_STYLE_INPUT,"{FFFFFF}Снять деньги из казны клана",str,"Снять","Назад");
		}
		case cm_reName_input:
		{
			ShowPlayerDialog(playerid,cm_reName_input,1, "{"#COLOR_DIALOG_MENU"}Переименовка названия клана", "Выбери новое название клана" , "Выбрать", "Назад");
		}
		case cm_reTag_input:
		{
			ShowPlayerDialog(playerid,cm_reTag_input,1, "{"#COLOR_DIALOG_MENU"}Переименовка тега", "Выбери новый тег клана" , "Выбрать", "Назад");
		}
		case cm_uninviteClan_input:
		{
			new clan = PlayerInfo[playerid][Clan];
			new number = GetPVarInt(playerid, "ClanNumberToManage");
			new place = PlayerInfo[playerid][ClanPlaceList][number];
			format(str,sizeof(str),"{"#COLOR_DIALOG_MENU"}Выгнать игрока %s из клана", ClanMember[clan][place][cmName]);
			ShowPlayerDialog(playerid,cm_uninviteClan_input,DIALOG_STYLE_MSGBOX,str,"Ты уверен что хочешь выгнать игрока из клана?","Да","Назад");
		}
	}
	return true;
}

stock ShowHouse(playerid,menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	new hid = OnHouseEnter(playerid);
	switch(menuid)
	{
		case d_HouseMenu:
		{
			if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID && HouseInfo[hid][hOwnedID] == 0)
			{
				AddDListItem(playerid, "Купить дом", hm_BuyHouse);
			}
			else if(PlayerInfo[playerid][House] == hid)
			{
				AddDListItem(playerid, "Транспорт", hm_Transport);
				AddDListItem(playerid, "Продать дом", hm_SellHouse);
				AddDListItem(playerid, "Открыть/закрыть дом", hm_LockHouse);
				AddDListItem(playerid, "Аренда", hm_RentHouse);
				AddDListItem(playerid, "Имя дома", hm_HouseName);
			}
			else if(PlayerInfo[playerid][Renter] == INVALID_HOUSE_ID && PlayerInfo[playerid][House] == INVALID_HOUSE_ID && HouseInfo[hid][hCostRent] != 0)
			{
				AddDListItem(playerid, "Аренда комнаты", hm_Rent);
			}
			else if(PlayerInfo[playerid][Renter] == hid && PlayerInfo[playerid][House] == INVALID_HOUSE_ID)
			{
				AddDListItem(playerid, "Выселиться из арендного дома", hm_unRent);
			}
			else if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID && HouseInfo[hid][hOwnedID])
			{
				ShowPlayerDialog(playerid, d_HouseNull, DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Дом", "Действия не возможны\nДом куплен", "Выход", "");
			}
			else if(PlayerInfo[playerid][House] != hid && PlayerInfo[playerid][House] != INVALID_HOUSE_ID)
			{
				ShowPlayerDialog(playerid, d_HouseNull, DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Дом", "Действия не возможны\nУ тебя уже куплен дом", "Выход", "");
			}
	     	ShowPlayerDList(playerid, d_HouseMenu, "{"#COLOR_DIALOG_MENU"}Дом", "Выбрать", "Выход");
		}
		case d_RentHouse:
		{
			AddDListItem(playerid, "Разрешить/Запретить аренду", hm_homeRent);
			AddDListItem(playerid, "Установить стоимость аренды", hm_RentCost);
			ShowPlayerDList(playerid, d_RentHouse, "{"#COLOR_DIALOG_MENU"}Дом", "Выбрать", "Назад");
		}
		case d_hmTransport:
		{
			AddDListItem(playerid, "Перенести авто к дому + починка($1000)", hm_RepairCar);
			AddDListItem(playerid, "Номер на домашнюю машину (на заказную)", hm_CarPlate);
			AddDListItem(playerid, "Объекты на домашнюю машину", hm_CarObject);
			ShowPlayerDList(playerid, d_hmTransport, "{"#COLOR_DIALOG_MENU"}Дом", "Выбрать", "Назад");
		}
	}
	return 1;
}

stock ShowHouse_input(playerid,menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
    new str[256];
    new hid = OnHouseEnter(playerid);
	switch(menuid)
	{
		case hm_BuyHouse_input:
		{
			format(str,sizeof(str),"Купить дом?\nУровень дома: %d",HouseInfo[hid][hLevel]);
			ShowPlayerDialog(playerid, hm_BuyHouse_input, DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Покупка дома", str, "Купить", "Назад");
		}
		case hm_SellHouse_input:
		{
			format(str,sizeof(str),"Продать дом?\nДом будет продан по его цене в $%d",GetHouseCost(HouseInfo[hid][hLevel]));
			ShowPlayerDialog(playerid, hm_SellHouse_input, DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Продажа дома", str, "Продать", "Назад");
		}
		case hm_homeRent_input:
		{
			if(HouseInfo[hid][hCostRent] == 0)
			{
				ShowPlayerDialog(playerid, hm_homeRent_input, DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Разрешить/Запретить аренду", "***************Разрешить аренду?***************", "Разрешить", "Назад");
			}
			else
			{
				ShowPlayerDialog(playerid, hm_homeRent_input, DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Разрешить/Запретить аренду", "***************Запретить аренду??***************", "Запретить", "Назад");
			}
		}
		case hm_RentCost_input:
		{
			ShowPlayerDialog(playerid, hm_RentCost_input, DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Установка стоимости аренды", "***************Введи стоимость аренды***************", "Установить", "Назад");
		}
		case hm_HouseName_input:
		{
			ShowPlayerDialog(playerid, hm_HouseName_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Имя дома $1000",str_HouseName,"Выбрать","Назад");
		}
		case hm_CarPlate_input:
		{
			ShowPlayerDialog(playerid, hm_CarPlate_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Номер на домашнюю машину (на заказную) $5000",str_CarPlate,"Выбрать","Назад");
		}
	}
	return 1;
}

stock ShowHouse_CarObject(playerid)
{
	new string[(sizeof(CarObjectInfo)*60)], msg[sizeof(CarObjectInfo)*10];
	strcat(string, "Убрать объект\n");
	for (new i = 0; i < sizeof(CarObjectInfo); i++)
	{
		format(msg, sizeof(msg), "%s\n", CarObjectInfo[i][carobName]);
		if(PlayerInfo[playerid][carObject][0] == CarObjectInfo[i][carobID])
		{
			format(msg, sizeof(msg), "%s - установлен\n", CarObjectInfo[i][carobName]);
		}
		if(PlayerInfo[playerid][carObject][1] == CarObjectInfo[i][carobID])
		{
			format(msg, sizeof(msg), "%s - установлен\n", CarObjectInfo[i][carobName]);
		}
		strcat(string, msg);
	}
	ShowPlayerDialogEx(playerid, "CarObject", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Объекты на домашнюю машину ($20000)", string, "Выбрать", "Назад");
	return 1;
}

DIALOG:CarObject(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowHouse(playerid,d_hmTransport);
	if(listitem == 0)
	{
		PlayerInfo[playerid][carObject][0] = 0;
		PlayerInfo[playerid][carObject][1] = 0;
		DestroyObject(PlayerInfo[playerid][carObjID][0]);
		DestroyObject(PlayerInfo[playerid][carObjID][1]);
		DestroyObject(PlayerInfo[playerid][carObjID][2]);
		DestroyObject(PlayerInfo[playerid][carObjID][3]);
		PlayerInfo[playerid][carObjID][0] = -1;
		PlayerInfo[playerid][carObjID][1] = -1;
		PlayerInfo[playerid][carObjID][2] = -1;
		PlayerInfo[playerid][carObjID][3] = -1;
		SaveCarObject(playerid);
		ShowHouse_CarObject(playerid);
		SendClientMessage(playerid,CGRAY,"Ты удалил объекты с домашней машины");
	}
	else
	{
		new number = listitem-1;
		if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID) return 1;
		if(GetCarObjectCount(playerid) == 1)
		{
			ShowHouse_CarObject(playerid);
			return SendClientMessage(playerid, COLOR_GREY, "У тебя уже установлено 2 объекта");
		}
        if(20000 > PlayerInfo[playerid][Money])
		{
			ShowHouse_CarObject(playerid);
			return SendClientMessage(playerid, COLOR_GREY, "У тебя нет столько денег");
		}
		SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-20000);
		SendClientMessagef(playerid,CLIGHTGREEN,"Ты успешно поставил объект %s {00FF00}к домашней машине", CarObjectInfo[number][carobName]);
		SetPlayerCarObject(playerid, GetCarObjectCount(playerid)+1, CarObjectInfo[number][carobID]);
		ShowHouse_CarObject(playerid);
	}
	return 1;
}

stock SetPlayerCarObject(playerid, slot, objectid)
{
	if(PlayerInfo[playerid][carObject][slot])
	{
		if(slot == 0)
		{
			DestroyObject(PlayerInfo[playerid][carObjID][0]);
			DestroyObject(PlayerInfo[playerid][carObjID][1]);
		}
		if(slot == 1)
		{
			DestroyObject(PlayerInfo[playerid][carObjID][2]);
			DestroyObject(PlayerInfo[playerid][carObjID][3]);
		}
		PlayerInfo[playerid][carObject][slot] = -1;
	}
	PlayerInfo[playerid][carObject][slot] = objectid;
	LoadCarObject(playerid);
	SaveCarObject(playerid);
	return 1;
}

stock LoadCarObject(playerid)
{
	if(PlayerInfo[playerid][carGUID] != INVALID_VEHICLE_ID)
	{
		DestroyObject(PlayerInfo[playerid][carObjID][0]);
		DestroyObject(PlayerInfo[playerid][carObjID][1]);
		DestroyObject(PlayerInfo[playerid][carObjID][2]);
		DestroyObject(PlayerInfo[playerid][carObjID][3]);
		PlayerInfo[playerid][carObjID][0] = -1;
		PlayerInfo[playerid][carObjID][1] = -1;
		PlayerInfo[playerid][carObjID][2] = -1;
		PlayerInfo[playerid][carObjID][3] = -1;
		if(PlayerInfo[playerid][carObject][0] != 0)
		{
			PlayerInfo[playerid][carObjID][0] = CreateObject(PlayerInfo[playerid][carObject][0],0,0,0,0,0,0);
			PlayerInfo[playerid][carObjID][1] = CreateObject(PlayerInfo[playerid][carObject][0],0,0,0,0,0,0);
			AttachObjectToVehicle(PlayerInfo[playerid][carObjID][0], PlayerInfo[playerid][carGUID], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		    AttachObjectToVehicle(PlayerInfo[playerid][carObjID][1], PlayerInfo[playerid][carGUID], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	    }
	    if(PlayerInfo[playerid][carObject][1] != 0)
		{
			PlayerInfo[playerid][carObjID][2] = CreateObject(PlayerInfo[playerid][carObject][1],0,0,0,0,0,0);
			PlayerInfo[playerid][carObjID][3] = CreateObject(PlayerInfo[playerid][carObject][1],0,0,0,0,0,0);
			AttachObjectToVehicle(PlayerInfo[playerid][carObjID][2], PlayerInfo[playerid][carGUID], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		    AttachObjectToVehicle(PlayerInfo[playerid][carObjID][3], PlayerInfo[playerid][carGUID], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
    }
    return 1;
}

stock GetCarObjectCount(playerid)
{
	new count = -1;
	for (new i = 0; i < 2; i++)
	{
		if(PlayerInfo[playerid][carObject][i])
		{
			count = i;
		}
	}
	return count;
}

stock ShowZoneMenu(playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	switch(menuid)
	{
		case d_GangZones:
		{
			AddDListItem(playerid, "Зона", gz_Info);
			AddDListItem(playerid, "Состояние войны", gz_StatusWar);
			AddDListItem(playerid, "Статистика зон твоего клана", gz_ClansZone);
			AddDListItem(playerid, "Захватить зону", gz_Capture);
			AddDListItem(playerid, "Освободить зону / Остановить захват", gz_Exempt);
	     	ShowPlayerDList(playerid, d_GangZones, "{"#COLOR_DIALOG_MENU"}Территории", "Выбрать", "Назад");
		}
	}
	return true;
}

stock ShowZoneMenu_input(playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	switch(menuid)
	{
		case gz_Info_input:
		{
			new Float:x,Float:y,Float:z,gz = 0;
			GetPlayerPos(playerid,x,y,z);
			for(new zone; zone < sizeof(ZoneInfo); zone++)
		    {
				if(x >= ZoneInfo[zone][zMinX] && x <= ZoneInfo[zone][zMaxX] && y >= ZoneInfo[zone][zMinY] && y <= ZoneInfo[zone][zMaxY])
				{
					new sctring[512], str[128];
					new ownerz = ZoneInfo[zone][zOwner];
					new sx = ZoneInfo[zone][zMaxX]-ZoneInfo[zone][zMinX];
					new sy = ZoneInfo[zone][zMaxY]-ZoneInfo[zone][zMinY];
					new s = sx*sy/100;
				    f(str,"{00FF00}Зона {FF0000}%d\n", zone);
				    strcat(sctring,str);
					if(ZoneInfo[zone][zOwner] == 0)
					{
					    f(str,"{00FF00}У зоны{FF0000} нет {00FF00}владельца\n\n");
					    strcat(sctring,str);
				    }else{
					    f(str,"{00FF00}Владелец зоной клан{FF0000} %s %s [%d]\n\n", ClanInfo[ownerz][cName], ClanInfo[ownerz][cTag], ownerz);
					    strcat(sctring,str);
				    }
				    f(str,"{00FF00}Приносила бы тебе Денег: {FF0000}${00FF00}%d, {00FF00}ОА:{FF0000} 0, {00FF00}Опыта:{FF0000} 0", s);
				    strcat(sctring,str);
					ShowPlayerDialog(playerid,gz_Info_input,0,"{"#COLOR_DIALOG_MENU"}Зона",sctring,"Выход","Назад");
					gz = 1;
				}
			}
			if(GetPlayerVirtualWorld(playerid) != 0)
			{
				ShowPlayerDialog(playerid,gz_Info_input,0,"{"#COLOR_DIALOG_MENU"}Зона","Сейчас ты не можешь воспользоваться этим окном","Выход","Назад");
			}
			if(!gz)
			{
				ShowPlayerDialog(playerid,gz_Info_input,0,"{"#COLOR_DIALOG_MENU"}Зона","Ты не в зоне","Выход","Назад");
			}
		}
		case gz_StatusWar_input:
		{
			new sctring[256], str[128];
			new clan = PlayerInfo[playerid][Clan];
			if(!PlayerInfo[playerid][Clan])
	     	{
		     	return ShowPlayerDialog(playerid,gz_StatusWar_input,0,"{"#COLOR_DIALOG_MENU"}Состояние войны","Ты не состоишь в клане","Выход","Назад");
	     	}
			if(ClanInfo[clan][cCaptureZone] == -1)
			{
				return ShowPlayerDialog(playerid,gz_StatusWar_input,0,"{"#COLOR_DIALOG_MENU"}Состояние войны","Клан не захватывает зоны и войн нет","Выход","Назад");
			}
			if(ClanInfo[clan][cCaptureZone] != -1)
			{
				f(str,"{00FF00}Твой клан захватывает зону № %d", ClanInfo[clan][cCaptureZone]);
			    strcat(sctring,str);
		    }
		    ShowPlayerDialog(playerid, gz_StatusWar_input, DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Состояние войны", sctring, "Выбрать", "Назад");
		}
		case gz_StatusWar2_input:
		{
			new sctring[512], str[128];
			new clan = PlayerInfo[playerid][Clan];
			new zone = ClanInfo[clan][cCaptureZone];
			new zowned = ZoneInfo[zone][zOwner];
			if(ClanInfo[clan][cCaptureZone] != -1)
			{
				f(str,"{00FF00}Захват зоны № {FF0000}%d\n", ClanInfo[clan][cCaptureZone]);
			    strcat(sctring,str);
			    f(str,"{00FF00}До окончание войны осталось{FF0000} %s\n\n", JTF(ZoneInfo[zone][zCaptureTime]));
			    strcat(sctring,str);
			    f(str,"{00FF00}Очки {FFFF00}твоего{00FF00} клана {FF0000}%d", ZoneKills[zone][clan]);
			    strcat(sctring,str);
			    if(ZoneInfo[zone][zOwner] != 0)
			    {
				    f(str,"{00FF00}Очки {FFFF00}максимального вражеского {00FF00}клана {FF0000}%d", ZoneKills[zone][clan]);
				    strcat(sctring,str);
				    f(str,"{00FF00}Название клана {FF0000}%s %s [%d]", ClanInfo[zowned][cName],ClanInfo[zowned][cTag],zowned);
				    strcat(sctring,str);
			    }
				ShowPlayerDialog(playerid,gz_StatusWar2_input,0,"{"#COLOR_DIALOG_MENU"}Описание войны на зоне",sctring,"Выход","Назад");
			}
			
		}
		case gz_ClansZone_input:
		{
			new sctring[1024], str[512], count;
			new clan = PlayerInfo[playerid][Clan];
			if(!PlayerInfo[playerid][Clan])
	     	{
		     	return ShowPlayerDialog(playerid,gz_ClansZone_input,0,"{"#COLOR_DIALOG_MENU"}Статистика зон твоего клана","Ты не состоишь в клане","Выход","Назад");
	     	}
	     	/*if(PlayerInfo[playerid][ClanRank] < 5)
			{
				return ShowPlayerDialog(playerid,gz_ClansZone_input,0,"{"#COLOR_DIALOG_MENU"}Статистика зон твоего клана","Ты должен быть лидером клана","Выход","Назад");
			}*/
            strcat(sctring,"{00FF00}Вы сейчас {FF0000}не завоёвываете {00FF00}никакую зону\n\n");
            strcat(sctring,"{00FF00}Основной зоны клана {FF0000}НЕТ\n\n");
	     	for(new i = 0; i < zonesid; i++)
		    {
			    if(ZoneInfo[i][zOwner] == PlayerInfo[playerid][Clan])
			    {
					count ++;
					if(GetClanZone(clan) == 1 || count >= GetClanZone(clan))
					{
					    f(str,"{00FF00}%d", i);
				    }else{
					    f(str,"{00FF00}%d,", i);
				    }
				    strcat(sctring,str);
			    }
		    }
		    if(GetClanZone(clan) == 0)
		    {
			    strcat(sctring,"{00FF00}У твоего клана нет захваченных зон\n");
		    }
		    f(str,"\n{00FF00}Кол-во зон: {FF0000}%d/%d{00FF00}, приносят доход раз в {FF0000}%s\n\n", GetClanZone(clan), MaxZonesClan(clan), JTF(GetClanZone(clan)*120+600));
            strcat(sctring,str);
            strcat(sctring,"{00FF00}Выберите цвет зон твоего клана, может делать только лидер\n\n");
			f(str,"{00FF00}Цвет зон твоего клана - %s\n", ClanInfo[clan][cColorZone]);
            strcat(sctring,str);
            ShowPlayerDialog(playerid,gz_ClansZone_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Статистика зон твоего клана",sctring,"Выбрать","Назад");
		}
		case gz_Capture_input:
		{
			new Float:x,Float:y,Float:z, gz;
			GetPlayerPos(playerid,x,y,z);
			new clan = PlayerInfo[playerid][Clan];
			if(PlayerInfo[playerid][GodMode])
			{
				return ShowPlayerDialog(playerid,gz_Capture_input,0,"{"#COLOR_DIALOG_MENU"}Захватить зону","Ты бессмертен и не можешь захватывать зоны","Выход","Назад");
			}
			if(!PlayerInfo[playerid][Clan])
	     	{
		     	return ShowPlayerDialog(playerid,gz_Capture_input,0,"{"#COLOR_DIALOG_MENU"}Захватить зону","Ты не состоишь в клане","Выход","Назад");
	     	}
			for(new zone; zone < sizeof(ZoneInfo); zone++)
		    {
				if(x >= ZoneInfo[zone][zMinX] && x <= ZoneInfo[zone][zMaxX] && y >= ZoneInfo[zone][zMinY] && y <= ZoneInfo[zone][zMaxY])
				{
					if(ZoneInfo[zone][zOwner] == PlayerInfo[playerid][Clan])
					{
						return ShowPlayerDialog(playerid,gz_Capture_input,0,"{"#COLOR_DIALOG_MENU"}Захватить зону","Ты не можешь захватывать зоны своего клана","Выход","Назад");
					}
					if(ClanInfo[clan][cCaptureZone] != -1)
					{
						return ShowPlayerDialog(playerid,gz_Capture_input,0,"{EFFFFF}Захватить зону","Твой клан уже захватывает зону","Выход","Назад");
					}
					if(GetPlayerVirtualWorld(playerid) != 0)
					{
						return ShowPlayerDialog(playerid,gz_Capture_input,0,"{EFFFFF}Захватить зону","Сейчас ты не можешь воспользоваться этим окном","Выход","Назад");
					}
					if(GetClanZone(clan) >= MaxZonesClan(clan))
					{
						return ShowPlayerDialog(playerid,gz_Capture_input,0,"{EFFFFF}Захватить зону","Максимальное количество зон","Выход","Назад");
					}
					ShowPlayerDialog(playerid,gz_Capture_input,0,"{"#COLOR_DIALOG_MENU"}Захватить зону","Захватить зону?","Захватить","Назад");
					gz = 1;
                }
			}
			if(!gz)
			{
				ShowPlayerDialog(playerid,gz_Capture_input,0,"{"#COLOR_DIALOG_MENU"}Зона","Ты не в зоне","Выход","Назад");
			}
		}
		case gz_Exempt_input:
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			if(!PlayerInfo[playerid][Clan])
	     	{
		     	return ShowPlayerDialog(playerid,gz_Exempt_input,0,"{"#COLOR_DIALOG_MENU"}Освободить зону / Остановить захват","Ты не состоишь в клане","Выход","Назад");
	     	}
	     	for(new zone; zone < sizeof(ZoneInfo); zone++)
		    {
				if(x >= ZoneInfo[zone][zMinX] && x <= ZoneInfo[zone][zMaxX] && y >= ZoneInfo[zone][zMinY] && y <= ZoneInfo[zone][zMaxY])
				{
					if(ZoneInfo[zone][zOwner] != PlayerInfo[playerid][Clan])
					{
						return ShowPlayerDialog(playerid,gz_Exempt_input,0,"{"#COLOR_DIALOG_MENU"}Освободить зону / Остановить захват","Это зона не вашего клана","Выход","Назад");
					}
					ShowPlayerDialog(playerid,gz_Exempt_input,0,"{"#COLOR_DIALOG_MENU"}Захватить зону","Остановить захват?","Выбрать","Назад");
                }
			}
		}
	}
	return true;
}

stock ShowDonate(playerid, menuid)
{
	if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	switch(menuid)
	{
		case d_DonateMenu:
		{
			AddDListItem(playerid, "Описание", mn_infoDonate);
			AddDListItem(playerid, "Получить деньги / проверить баланс", mn_checkDonate);
			AddDListItem(playerid, "Промокод", mn_Promocode);
 			ShowPlayerDList(playerid, d_DonateMenu, "{"#COLOR_DIALOG_MENU"}Донат", "Выбрать", "Назад");
		}
		case d_DonateInfo:
		{
			AddDListItem(playerid, "Система", info_DonateSystem);
			AddDListItem(playerid, "Промокоды", info_Promocode);
 			ShowPlayerDList(playerid, d_DonateInfo, "{"#COLOR_DIALOG_MENU"}Описание", "Выбрать", "Назад");
		}
	}
	return true;
}

stock ShowDonate_input(playerid, menuid[])
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
    if(PlayerInfo[playerid][MuteCMD] && IsAdminAccess(playerid,2000))
	{
       new mes[90];
       format(mes,sizeof(mes),"Вам нельзя пользаваться меню и командами еще %s",MTF(PlayerInfo[playerid][MuteCMD]));
	   return SendClientMessage(playerid,CRED,mes);
	}
	new str[256];
	if(strcmp(menuid, "mn_checkDonate_input") == 0)
	{
		format(str,sizeof(str),"{00FF00}Баланс: %.2f р\n\n{FFFFFF}Пополнить донат можно на сайте %s\nУказав свой аккаунт и нажать оплатить",PlayerInfo[playerid][DonateCount], mode_site);
		ShowPlayerDialogEx(playerid,menuid,0,"{"#COLOR_DIALOG_MENU"}Баланс",str,"Выход","Назад");
	}
	if(strcmp(menuid, "mn_promocode_input") == 0)
	{
		ShowPlayerDialogEx(playerid,"mn_promocode_input",1, "{"#COLOR_DIALOG_MENU"}Активация промокода", "Введи промокод", "Применить", "Назад");
	}
	if(strcmp(menuid, "info_DonateSystem_input") == 0)
	{
		new strdonsys[sizeof(str_DonateSystem)];
		format(strdonsys,sizeof(strdonsys),str_DonateSystem,mode_site);
		ShowPlayerDialogEx(playerid,menuid,0,"{"#COLOR_DIALOG_MENU"}Система",strdonsys,"Выход","Назад");
	}
	if(strcmp(menuid, "info_Promocode_input") == 0)
	{
		ShowPlayerDialogEx(playerid,menuid,0,"{"#COLOR_DIALOG_MENU"}Промокоды",str_PromocodInfo,"Выход","Назад");
	}
	return true;
}

DIALOG:mn_checkDonate_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowDonate(playerid, d_DonateMenu);
	return 1;
}

DIALOG:info_DonateSystem_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowDonate(playerid, d_DonateInfo);
	return 1;
}

DIALOG:info_Promocode_input(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowDonate(playerid, d_DonateInfo);
	return 1;
}

stock ShowConnect(playerid, menuid)
{
	new str[256];
	switch(menuid)
	{
		case d_connectMenu:
		{
			AddDListItem(playerid, "Сменить ник", connect_changeName);
			AddDListItem(playerid, "Отправить новый пароль на Email", connect_Recovery);
 			ShowPlayerDList(playerid, d_connectMenu, "{"#COLOR_DIALOG_MENU"}Опции", "Выбрать", "Назад");
		}
		case d_connectChangeName:
		{
		    format(str,sizeof(str),"%s\n\n%s",PlayerInfo[playerid][Name],str_ChangeName);
			ShowPlayerDialog(playerid,d_connectChangeName,1, "{"#COLOR_DIALOG_MENU"}Смена ника", str, "Выбрать", "Назад");
		}
		case d_connectRecovery:
		{
		    ShowPlayerDialog(playerid,d_connectRecovery,0,"{"#COLOR_DIALOG_MENU"}Выслать новый пароль на Email?","{EFFFFF}Выслать новый пароль на Email?","Выбрать","Назад");
		}
    }
	return true;
}

cmd:pm(playerid, params[])
{
	new id, msg[128];
    sscanf(params, "ds[128]", id, msg);
    if(emptyMessage(params)) return SendClientMessage(playerid,CGRAY,"Введи /лс [Номер игрока] [Текст]");
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
    if(!PlayerInfo[id][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
    if(id == playerid) return SendClientMessage(playerid,CGRAY,"Ты не можешь оправить ЛС себе");
    if(emptyMessage(msg)) return SendClientMessage(playerid,CGRAY,"Введи текст сообщения");
    if(PlayerInfo[id][IgnoredPM][playerid] == 1) return SendClientMessage(playerid,CGRAY,"У игрока отключен приём ЛС");
    if(PlayerInfo[playerid][MuteTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас заглушка");
    if(CheckAdv(msg))
	{
		new string[128];
		format(string, sizeof(string), "Админам(в чат не вывелось): %s:[%d]: %s",PlayerInfo[playerid][Name], playerid, msg);
	    SendClientMessage(playerid,0x00FF7FAA,string);
		SendClientMessage(playerid,CRED,"Подозрение на рекламу");
		return false;
	}
   	new mes[128];
	format(mes,sizeof(mes),"ЛС {FF4500}от %s[%i]: %s",PlayerInfo[playerid][Name],playerid,msg);
	SendClientMessage(id,CLIGHTGREEN,mes);
	format(mes,sizeof(mes),"ЛС {F08080}для %s[%i]: %s",PlayerInfo[id][Name],id,msg);
	SendClientMessage(playerid,CLIGHTGREEN,mes);
	format(mes, sizeof(mes), "{6699CC}%s [%d] Приватно %s [%d]: %s",PlayerInfo[playerid][Name], playerid, PlayerInfo[id][Name],id, msg);
	for(new i = GetPlayerPoolSize(); i >= 0; i--)
	{
		if(!IsPlayerConnected(i) || PlayerInfo[i][AdminLevel] >= 100 && i == playerid || i == id) continue;
		if(!PlayerInfo[i][EarsPM]) continue;
		SendClientMessage(i,COLOR_RED,mes);
	}
	format(mes, sizeof(mes), "ЛС игроку %s [%d]: %s", PlayerInfo[id][Name], id, msg);
    AddPlayerEvent(playerid, mes);
    return 1;
}
alias:pm("лс");

cmd:p(playerid, params[])
{
	new id, source;
    sscanf(params, "d", id);
    if(emptyMessage(params)) return SendClientMessage(playerid,CGRAY,"Введи /и [Номер игрока]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
    OnPlayerClickPlayer(playerid, id, source);
    return 1;
}
alias:p("и");

cmd:rob(playerid, params[])
{
	if(GetPVarInt(playerid, "FloodRob") > gettime())
	{
		return SendClientMessagef(playerid, CGRAY, "Тебе необходимо подождать %s, чтобы воспользаваться командой вновь", MTF(GetPVarInt(playerid, "FloodRob")-gettime()));
	}
	new suspect = GetClosestPlayer(playerid);
	if(!ProxDetectorS(5.0, playerid, suspect)
	|| IsPlayerPaused(suspect)) return SendClientMessage(playerid,0xFF0000AA,"Нет игроков вблизи, у которых можно своровать");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0xFF0000AA, "Ты не можешь воровать деньги в здании");
	new chance = random(100), chancemoney;
	if(chance < 70)
	{
		SetPVarInt(playerid, "FloodRob", gettime()+360);
		SendClientMessagef(playerid,0x9292FFAA,"Твоя попытка украсть у %s (%d) провалилась", PlayerInfo[suspect][Name], suspect);
		SendClientMessagef(suspect,0x9292FFAA,"%s (%d) пытался украсть у тебя деньги, но не смог", PlayerInfo[playerid][Name], playerid);
		return 1;
	} else if(chance >= 30) {
		chancemoney = 2500+random(5000);
	} else if(chance >= 20) {
		chancemoney = 5000+random(10000);
	} else if(chance >= 10) {
		chancemoney = 10000+random(20000);
	}
	new robmoney = (PlayerInfo[suspect][Money] / 5000)+chancemoney;
	SendClientMessagef(playerid,0x00B9F6AA,"Ты украл $%d у %s (%d)",robmoney, PlayerInfo[suspect][Name], suspect);
	SendClientMessagef(suspect,0x00B9F6AA,"%s (%d) украл у тебя $%d", PlayerInfo[playerid][Name], playerid, robmoney);
	SetPlayerMoney(suspect, PlayerInfo[suspect][Money]-robmoney);
	SetPlayerMoney(playerid, PlayerInfo[playerid][Money]+robmoney);
	SetPVarInt(playerid, "FloodRob", gettime()+360);
    return 1;
}
alias:rob("ограбить");

cmd:repair(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Ты должен быть в  машине!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY,"Ты должен быть в транспорте на месте водителя");
	new Float:health, veh = GetPlayerVehicleID(playerid);
    GetVehicleHealth(veh, health);
    if(health < 1000)
    {
	    RepairVehicle(veh);
    } else {
	    SendClientMessage(playerid,-1,"Машину не нужно ремонтировать, если есть поломанные части, они восстановлены");
	    RepairVehicle(veh);
    }
    return 1;
}
alias:repair("чинить");

cmd:exit(playerid, params[])
{
	ExitPlayerFromDM(playerid);
    return 1;
}
alias:exit("выход");

cmd:car2(playerid, params[])
{
	new vehid;
    sscanf(params, "d", vehid);
    if(emptyMessage(params))
	{
		ShowVehicleOrder(playerid, d_CarOrder);
	}
	else
	{
		CreateOrderVehicle(playerid, vehid);
	}
    return 1;
}
alias:car2("машину2");

stock ShowVehicleOrder(playerid, menuid)//Доделать
{
	new msg[512];
	switch(menuid)
	{
		case d_CarOrder:
		{
			AddDListItem(playerid, "Мотоциклы", order_Bike);
			AddDListItem(playerid, "Кабриолеты", order_Cabriolets);
			AddDListItem(playerid, "Промышленные", order_Industry);
			AddDListItem(playerid, "Лоурайдеры", order_Lowriders);
			AddDListItem(playerid, "Внедорожники", order_SUVs);
			AddDListItem(playerid, "Салоны", order_Salon);
			AddDListItem(playerid, "Спортивные", order_Sport);
 			ShowPlayerDList(playerid, d_CarOrder, "{"#COLOR_DIALOG_MENU"}Заказ транспорта", "Выбрать", "Назад");
		}
		case order_Bike:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 1)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_Bike, DIALOG_STYLE_LIST, "{FFFFFF}Байки", msg, "Выбрать", "Назад");
		}
		case order_Cabriolets:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 2)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_Cabriolets, DIALOG_STYLE_LIST, "{FFFFFF}Кабриолеты", msg, "Выбрать", "Назад");
		}
		case order_Industry:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 3)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_Industry, DIALOG_STYLE_LIST, "{FFFFFF}Промышленные", msg, "Выбрать", "Назад");
		}
		case order_Lowriders:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 4)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_Lowriders, DIALOG_STYLE_LIST, "{FFFFFF}Лоурайдеры", msg, "Выбрать", "Назад");
		}
		case order_SUVs:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 5)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_SUVs, DIALOG_STYLE_LIST, "{FFFFFF}Внедорожники", msg, "Выбрать", "Назад");
		}
		case order_Salon:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 6)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_Salon, DIALOG_STYLE_LIST, "{FFFFFF}Салоны", msg, "Выбрать", "Назад");
		}
		case order_Sport:
		{
			new count;
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
		        if(CarInfo[i][carType] == 7)
		        {
		            format(msg, sizeof(msg), "%s%s\n", msg,VehicleNames[CarInfo[i][carID]-400]);
		            PlayerInfo[playerid][ListItem][count] = CarInfo[i][carID];
		            count ++;
		        }
			}
			ShowPlayerDialog(playerid, order_Sport, DIALOG_STYLE_LIST, "{FFFFFF}Спортивные", msg, "Выбрать", "Назад");
		}
    }
    return true;
}

stock ShowAdmin(playerid, menuid, type = 0)
{
	new targetid = GetPVarInt(playerid, "ClickPlayer");
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
	if(type == 0)
	{
		SetPVarInt(playerid, "ClickPlayer", playerid);
	}
    switch(menuid)
	{
		case d_AdminMenu:
		{
		    AddDListItem(playerid, "Наказания", adm_Pen);
		    if((IsAdminAccess(playerid,500,1) && playerid != targetid) || IsAdminAccess(playerid,1000,1))
		    {
			    AddDListItem(playerid, "Действия над игроком", adm_Player);
		    }
		    if((IsAdminAccess(playerid,700,1) && playerid != targetid) || IsAdminAccess(playerid,1000,1))
			{
			    AddDListItem(playerid, "Действия над аккаунтом", adm_PlayerAcc);
			}
			if(IsAdminAccess(playerid,500,1) && playerid == targetid)
			{
				AddDListItem(playerid, "Действия над аккаунтом не в сети", adm_PlayerAcc_offline);
			}
			if(IsAdminAccess(playerid,1000,1) && playerid == targetid)
			{
				AddDListItem(playerid, "Телепортация", adm_Teleport);
			}
			if(IsAdminAccess(playerid,500,1) && playerid == targetid)
			{
				AddDListItem(playerid, "Транспорт", adm_Veh);
			}
			if(IsAdminAccess(playerid,100,1) && playerid == targetid)
			{
			    AddDListItem(playerid, "Чат", adm_Chat);
			    AddDListItem(playerid, "Другие действия", adm_Other);
			    AddDListItem(playerid, "Полёт в наблюдении", adm_Fly);
			}
			/*if(playerid == targetid)
			{
			    AddDListItem(playerid, "Помощь", adm_Help);
			}*/
	     	ShowPlayerDList(playerid, d_AdminMenu, "{"#COLOR_DIALOG_MENU"}Админка", "Выбрать", "Назад");
		}
		case d_Penalty:
		{
		    AddDListItem(playerid, "Заглушка", adm_Mute);
		    if(IsAdminAccess(playerid,500,1))
		    {
			    AddDListItem(playerid, "Заглушка по IP", adm_MuteIP);
		    }
		    AddDListItem(playerid, "Тюряга", adm_Jail);
		    AddDListItem(playerid, "Использавания меню и команд", adm_MuteCMD);
		    if(IsAdminAccess(playerid,1000,1))
		    {
			    if(playerid != targetid)
				{
					AddDListItem(playerid, "Сказать от его лица", adm_FakeChat);
				}
				//AddDListItem(playerid, "Забанить подсеть", adm_FakeChat);
				//AddDListItem(playerid, "Забанить", adm_FakeChat);
		    }
	     	ShowPlayerDList(playerid, d_Penalty, "{"#COLOR_DIALOG_MENU"}Наказания", "Выбрать", "Назад");
		}
		case d_admPlayer:
		{
			if(IsAdminAccess(playerid,500,1) && playerid != targetid)
			{
		    	AddDListItem(playerid, "Просмотр других аккаунтов с IP игрока", adm_searchIPPL);
		    }
			if(IsAdminAccess(playerid,700,1) && playerid != targetid)
			{
		    	AddDListItem(playerid, "ТП к игроку", adm_TPTO);
		    	AddDListItem(playerid, "ТП игрока к себе", adm_TP);
		    }
		    if(IsAdminAccess(playerid,1000,1))
			{
			    AddDListItem(playerid, "Изменить здоровье", adm_PL_HP);
			    AddDListItem(playerid, "Изменить броню", adm_PL_AR);
			    if(GetPVarInt(targetid, "aGodMode") == 1)
				{
                 	AddDListItem(playerid, "Сделать смертным", adm_PL_godmode);
                } else {
                 	AddDListItem(playerid, "Сделать бессмертным", adm_PL_godmode);
                }
			    AddDListItem(playerid, "Дать оружие", adm_giveGun);
			    AddDListItem(playerid, "Удалить оружие", adm_resetGun);
			    AddDListItem(playerid, "Выставить виртуальный мир", adm_PL_VW);
			    //AddDListItem(playerid, "Выставить интерьер", adm_PL_INT);
				if(GetPVarInt(targetid, "OffKeys") == 0)
				{
                 	AddDListItem(playerid, "Выключить управление", adm_PL_Offkeys);
                } else {
                 	AddDListItem(playerid, "Включить игроку управление", adm_PL_Offkeys);
                }
                AddDListItem(playerid, "Выдать джекпак", adm_PL_JETPACK);
		    }
	     	ShowPlayerDList(playerid, d_admPlayer, "{"#COLOR_DIALOG_MENU"}Действия над игроком", "Выбрать", "Назад");
		}
		case d_admPlayerAcc:
		{
			if(IsAdminAccess(playerid,2000,1))
			{
				AddDListItem(playerid, "{FFFF00}Добавить реальных денег", adm_addDonate);
				//AddDListItem(playerid, "Vip", adm_addDonate);
				//AddDListItem(playerid, "Vip админка", adm_addDonate);
				//AddDListItem(playerid, "Удалить Vip", adm_addDonate);
				//AddDListItem(playerid, "Удалить Vip админку", adm_addDonate);
				AddDListItem(playerid, "Обнулить статистику киллов", adm_resetStatKill);
			}
		    if(IsAdminAccess(playerid,1000,1))
			{
				AddDListItem(playerid, "Добавить очки апгрейда", adm_addOA);
			    AddDListItem(playerid, "Добавить уровень", adm_addLevel);
			    AddDListItem(playerid, "Добавить наличку", adm_addMoney);
			    AddDListItem(playerid, "Добавить денег в банке", adm_addBank);
			    AddDListItem(playerid, "Выставить очки апгрейда", adm_setOA);
			    AddDListItem(playerid, "Выставить уровень", adm_setLevel);
			    AddDListItem(playerid, "Выставить наличку", adm_setMoney);
			    AddDListItem(playerid, "Выставить денег в банке", adm_setBank);
			    AddDListItem(playerid, "Добавить опыт", adm_addExp);
			    //AddDListItem(playerid, "Добавить базуку", adm_addExp);
			    //AddDListItem(playerid, "Уровень бронерегена", adm_addExp);//Засчитать бронереген + миссию"
			    //AddDListItem(playerid, "Засчитать миссию", adm_addExp);
			    //AddDListItem(playerid, "Занулить миссию", adm_addExp);
		    }
		    if(IsAdminAccess(playerid,700,1) && playerid != targetid)
			{
			    AddDListItem(playerid, "Сменить ник", adm_changeName);
		    }
		    if(IsAdminAccess(playerid,2000,1))
			{
			    if(playerid != targetid)
				{
				 	AddDListItem(playerid, "{FF0000}Дать админку", adm_giveAdmin);
				}
			    //AddDListItem(playerid, "Обнулить количество заглушек", adm_muteCount);
		    }
		    if(IsAdminAccess(playerid,1000,1))
			{
			    //AddDListItem(playerid, "{FF0000}Повысить/понизить админку", );
		    }
	     	ShowPlayerDList(playerid, d_admPlayerAcc, "{"#COLOR_DIALOG_MENU"}Действия над аккаунтом", "Выбрать", "Назад");
		}
		case d_admPlayerAcc_offline:
		{
			if(IsAdminAccess(playerid,500,1))
			{
				AddDListItem(playerid, "Заглушка игрока не в сети", adm_MuteAcc);
				AddDListItem(playerid, "Посадить игрока не в сети", adm_JailAcc);
				AddDListItem(playerid, "Использование меню и команд игрока не в сети", adm_MuteCMDAcc);
			}
			if(IsAdminAccess(playerid,1000,1))
			{
				AddDListItem(playerid, "Добавить очки апгрейда не в сети", adm_addOA_offline);
			    AddDListItem(playerid, "Добавить наличку не в сети", adm_addMoney_offline);
			    AddDListItem(playerid, "Добавить наличку в банке не в сети", adm_addBank_offline);
			}
			if(IsAdminAccess(playerid,2000,1))
			{
				AddDListItem(playerid, "Удалить Email не в сети", adm_deleteEmail);
			    AddDListItem(playerid, "Удалить аккаунт", adm_deleteAcc);
			    //AddDListItem(playerid, "{FF0000}Дать админку не в сети", );
		    }
		    if(IsAdminAccess(playerid,1000,1))
			{
			    //AddDListItem(playerid, "{FF0000}Повысить/понизить админку не в сети", );
		    }
	     	ShowPlayerDList(playerid, d_admPlayerAcc_offline, "{"#COLOR_DIALOG_MENU"}Действия над аккаунтом не в сети", "Выбрать", "Назад");
		}
		case d_admTeleport:
		{
			AddDListItem(playerid, "Установить точку телепорта", adm_SavePos);
			AddDListItem(playerid, "ТП в точку", adm_TP_SavePos);
			AddDListItem(playerid, "ТП к дому", adm_TP_House);
			ShowPlayerDList(playerid, d_admTeleport, "{"#COLOR_DIALOG_MENU"}Телепортация", "Выбрать", "Назад");
		}
		case d_admVeh:
		{
		    if(IsAdminAccess(playerid,500,1))
			{
			    AddDListItem(playerid, "Отправить транспорт на место появления в радиусе 50м", adm_vehResp);
			    AddDListItem(playerid, "Отправить не используемый транспорт на место появления (300м)", adm_vehUnuseresp);
		    }
		    if(IsAdminAccess(playerid,1000,1))
		    {
			   // AddDListItem(playerid, "Создать транспорт", adm_addVeh);
			    AddDListItem(playerid, "Уничтожить созданный транспорт", adm_DestroyAVeh);
			    AddDListItem(playerid, "Уничтожить весь созданный транспорт", adm_DestroyAllAVeh);
		    }
	     	ShowPlayerDList(playerid, d_admVeh, "{"#COLOR_DIALOG_MENU"}Транспорт", "Выбрать", "Назад");
		}
		case d_admChat:
		{
			AddDListItem(playerid, "Очистка чата", adm_clearChat);
			//AddDListItem(playerid, "Админский чат", adm_vehResp);
			if(!PlayerInfo[playerid][EarsPM])
			{
				AddDListItem(playerid, "Включить чтение ЛС игроков", adm_EarsPM);
			} else {
				AddDListItem(playerid, "Выключить чтение ЛС игроков", adm_EarsPM);
			}
			if(!PlayerInfo[playerid][EarsRCHAT])
			{
				AddDListItem(playerid, "Включить чтение чата рядом игроков", adm_EarsRCHAT);
			} else {
				AddDListItem(playerid, "Выключить чтение чата рядом игроков", adm_EarsRCHAT);
			}
			if(IsAdminAccess(playerid,500,1))
			{
				if(!PlayerInfo[playerid][EarsCMD])
				{
					AddDListItem(playerid, "Включить просмотр команд вводимых игроками", adm_EarsCMD);
				} else {
					AddDListItem(playerid, "Выключить просмотр команд вводимых игроками", adm_EarsCMD);
				}
			}
			ShowPlayerDList(playerid, d_admChat, "{"#COLOR_DIALOG_MENU"}Чат", "Выбрать", "Назад");
		}
		case d_admOther:
		{
			if(IsAdminAccess(playerid,100,1))
			{
	            AddDListItem(playerid, "Список команд", adm_cmdList);
	            AddDListItem(playerid, "Список администрации", adm_admList);
	            AddDListItem(playerid, "Узнать информацию об аккаунте", adm_infoAcc);
	            //AddDListItem(playerid, "Очистка килл-чата", adm_clearKillChat);
	            AddDListItem(playerid, "Поиск игроков по IP", adm_searchIP);
	            AddDListItem(playerid, "Поиск игроков по стране", adm_searchCountry);
	            AddDListItem(playerid, "Поиск игроков по региону", adm_searchRegion);
	            AddDListItem(playerid, "Поиск игроков по городу", adm_searchCity);
            }
            if(IsAdminAccess(playerid,500,1))
			{
				AddDListItem(playerid, "Сменить название клана", adm_clanRename);
				AddDListItem(playerid, "Сменить тег клана", adm_clanRetag);
			}
            if(IsAdminAccess(playerid,1000,1))
			{
			    AddDListItem(playerid, "Продать дом", adm_sellHouse);
			    AddDListItem(playerid, "Разбанить IP", adm_unBanIP);
		    }
		    if(IsAdminAccess(playerid,2000,1))
			{
			    AddDListItem(playerid, "Вайп", adm_Wipe);
			    //AddDListItem(playerid, "Сменить клан зоны", adm_Wipe);
			    //AddDListItem(playerid, "Сменить уровень клана", adm_Wipe);
			    AddDListItem(playerid, "Освободить зоны", adm_WipeGZ);
			    AddDListItem(playerid, "Перезагрузить мод", adm_Restart);
			    AddDListItem(playerid, "Удалить клан", adm_DeleteClan);
		    }
	     	ShowPlayerDList(playerid, d_admOther, "{"#COLOR_DIALOG_MENU"}Другие действия", "Выбрать", "Назад");
		}
	}
	return true;
}

stock ShowAdmin_input(playerid, menuid)
{
    if(PlayerInfo[playerid][Logged] != 1)
	{
	    return SendClientMessage(playerid,COLOR_GREY,"Сначала залогинься");
	}
	new str[256];
    new targetid = GetPVarInt(playerid, "ClickPlayer");
    switch(menuid)
	{
		case adm_Mute_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Заглушка %s", PlayerInfo[targetid][Name]);
            if(IsAdminAccess(playerid,500))
			{
				ShowPlayerDialog(playerid,adm_Mute_input,DIALOG_STYLE_INPUT, str, "Введи кол-во секунд на которое нужно заглушить игрока\nРекоммендуемое кол-во секунд 300, максимальное 3600\n0 сек разглушит игрока", "Выбрать", "Назад");
			}
			else
			{
				ShowPlayerDialog(playerid,adm_Mute_input,DIALOG_STYLE_MSGBOX, str, "Заглушить игрока?\nСервер сам выберет время наказания\nВ течение 3-х минут 0 сек разглушит игрока", "Да", "Назад");
			}
		}
		case adm_MuteIP_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Заглушка по IP %s", PlayerInfo[targetid][Name]);
            if(IsAdminAccess(playerid,500))
			{
				ShowPlayerDialog(playerid,adm_MuteIP_input,DIALOG_STYLE_INPUT, str, "Введи кол-во секунд на которое нужно заглушить игрока\nРекоммендуемое кол-во секунд 300, максимальное 3600\n0 сек разглушит игрока", "Выбрать", "Назад");
			}
			else
			{
				ShowPlayerDialog(playerid,adm_MuteIP_input,DIALOG_STYLE_MSGBOX, str, "Заглушить игрока?\nСервер сам выберет время наказания", "Да", "Назад");
			}
		}
		case adm_MuteAcc_input:
		{
            ShowPlayerDialog(playerid,adm_MuteAcc_input,1, "{FFFFFF}Заглушка по аккаунту", "Заглушить игрока?\nВведи ник и кол-во секунд через пробел на которое нужно заглушить игрока\nЕсли игрок в игре, его не заглушит" , "Выбрать", "Назад");
		}
        case adm_Jail_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Посадить в тюрьму %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_Jail_input,DIALOG_STYLE_INPUT, str, "Введи кол-во секунд на которое нужно посадить игрока\nРекоммендуемое кол-во секунд 300, максимальное 600\nВ течение 3-х минут 0 сек выпустит игрока", "Выбрать", "Назад");
		}
		case adm_JailAcc_input:
		{
            ShowPlayerDialog(playerid,adm_JailAcc_input,1, "{FFFFFF}Тюряга по аккаунту", "Посадить игрока?\nВведи ник и кол-во секунд через пробел на которое нужно посадить игрока\nЕсли игрок в игре, его не посадит" , "Выбрать", "Назад");
		}
		case adm_MuteCMD_input:
		{
		    f(str,"{"#COLOR_DIALOG_MENU"}Использование меню и команд %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_MuteCMD_input,DIALOG_STYLE_INPUT, str, "Введи кол-во секунд на которое нужно закрыт команды и меню игрока\nРекоммендуемое кол-во секунд 300,600,1000,3600\nВ течение 3-х минут 0 сек разрешит использавать команды и меню игроку", "Выбрать", "Назад");
		}
		case adm_MuteCMDAcc_input:
		{
            ShowPlayerDialog(playerid,adm_MuteCMDAcc_input,1, "{FFFFFF}Закрытие команд и меню по аккаунту", "Посадить игрока?\nВведи ник и кол-во секунд через пробел на которое нужно закрыть команды и меню игроку\nЕсли игрок в игре, ему закроются команды и меню" , "Выбрать", "Назад");
		}
		case adm_PL_HP_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Изменить здоровье %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_PL_HP_input,DIALOG_STYLE_INPUT, str, "Введи кол-во здоровья", "Выбрать", "Назад");
		}
		case adm_PL_AR_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Изменить броню %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_PL_AR_input,DIALOG_STYLE_INPUT, str, "Введи кол-во брони", "Выбрать", "Назад");
		}
		case adm_PL_VW_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Выставить виртуальный мир %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_PL_VW_input,DIALOG_STYLE_INPUT, str, "Введи номер виртуального мира", "Выбрать", "Назад");
		}
		/*case adm_PL_INT_input:
		{
			f(str,"{"#COLOR_DIALOG_MENU"}Выставить интерьер %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_PL_VW_input,DIALOG_STYLE_INPUT, str, "Введи номер интерьера", "Выбрать", "Назад");
		}*/
		case adm_FakeChat_input:
		{
		    f(str,"{"#COLOR_DIALOG_MENU"}Сказать от лица %s [%d]", PlayerInfo[targetid][Name], targetid);
			ShowPlayerDialog(playerid,adm_FakeChat_input,DIALOG_STYLE_INPUT, str, "************************************Введи текст в чат напишется от лица игрока************************************", "Выбрать", "Назад");
		}
		case adm_giveGun_input:
		{
            f(str,"{"#COLOR_DIALOG_MENU"}Дать оружия %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_giveGun_input,DIALOG_STYLE_INPUT, str, "Введи номер оружия и через пробел введи кол-во потронов\nПример: 24 1000 - 24 ид оружия 1000 - потроны", "Выбрать", "Назад");
		}
		case adm_addDonate_input:
		{
			ShowPlayerDialog(playerid,adm_addDonate_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить реальных денег", "Введите кол-во рублей которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_resetStatKill_input:
		{
			f(str,"{"#COLOR_DIALOG_MENU"}Обнулить статистику киллов игроку %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_resetStatKill_input,DIALOG_STYLE_MSGBOX, str, "Обнулить статистику киллов?\n\nОбнулится статистика киллов(очки, убийства, смерти)", "Выбрать", "Назад");
		}
		case adm_addOA_input:
		{
			ShowPlayerDialog(playerid,adm_addOA_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить очки апгрейда", "Введите кол-во очков апгрейда которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_addLevel_input:
		{
			ShowPlayerDialog(playerid,adm_addLevel_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить уровень", "Введите кол-во уровней которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_addMoney_input:
		{
			ShowPlayerDialog(playerid,adm_addMoney_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить наличку", "Введите кол-во денег которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_addBank_input:
		{
			ShowPlayerDialog(playerid,adm_addBank_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить деньги в банке", "Введите кол-во денег в банке которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_setOA_input:
		{
			ShowPlayerDialog(playerid,adm_setOA_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Выставить очки апгрейда", "Введите кол-во очков апгрейда которое ты хочешь выставить", "Выбрать", "Назад");
		}
		case adm_setLevel_input:
		{
			ShowPlayerDialog(playerid,adm_setLevel_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Выставить уровень", "Введите кол-во уровней которое ты хочешь выставить", "Выбрать", "Назад");
		}
		case adm_setMoney_input:
		{
			ShowPlayerDialog(playerid,adm_setMoney_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Выставить наличку", "Введите кол-во денег которое ты хочешь выставить", "Выбрать", "Назад");
		}
		case adm_setBank_input:
		{
			ShowPlayerDialog(playerid,adm_setBank_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Выставить деньги в банке", "Введите кол-во денег в банке которое ты хочешь выставить", "Выбрать", "Назад");
		}
		case adm_addExp_input:
		{
			ShowPlayerDialog(playerid,adm_addExp_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить опыт", "Введите кол-во опыта которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_addOA_offline_input:
		{
			ShowPlayerDialog(playerid,adm_addOA_offline_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить очки апгрейда", "Введите ник аккаунта и кол-во очков апгрейда через пробел которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_addMoney_offline_input:
		{
			ShowPlayerDialog(playerid,adm_addMoney_offline_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить наличку", "Введите ник аккаунта и кол-во денег через пробел которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_addBank_offline_input:
		{
			ShowPlayerDialog(playerid,adm_addBank_offline_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Добавить деньги в банке", "Введите ник аккаунта и кол-во денег в банке через пробел которое ты хочешь добавить", "Выбрать", "Назад");
		}
		case adm_deleteAcc_input:
		{
			ShowPlayerDialog(playerid,adm_deleteAcc_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Удаление аккаунта","Введи ник аккаунта который нужно удалить","Выбрать","Назад");
		}
		case adm_deleteEmail_input:
		{
			ShowPlayerDialog(playerid,adm_deleteEmail_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Открепить Email в аккаунте","Введи ник аккаунта которому нужно Открепить Email","Выбрать","Назад");
		}
		case adm_changeName_input:
		{
			f(str,"{"#COLOR_DIALOG_MENU"}Сменить ник %s", PlayerInfo[targetid][Name]);
			ShowPlayerDialog(playerid,adm_changeName_input,DIALOG_STYLE_INPUT,str,"Введи ник на который нужно сменить игроку","Выбрать","Назад");
		}
		case adm_giveAdmin_input:
		{
			ShowPlayerDialog(playerid,adm_giveAdmin_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Дать админку", "Введи уровень админки игрока\nРекоммендуемые уровни админки 100,500,700,1000,2000\n0 уровень админка снимиться", "Выбрать", "Назад");
		}
		case adm_cmdList_input:
		{
			new stradmcmd[1536];
	        if(IsAdminAccess(playerid,100,1))
	        {
				strcat(stradmcmd, "{FF0000}/з {FFFFFF}- заглушка\n");
				strcat(stradmcmd, "{FF0000}/т {FFFFFF}- тюряга\n");
				strcat(stradmcmd, "{FF0000}/зк {FFFFFF}- закрытие комnанд\n");
				strcat(stradmcmd, "{FF0000}/оч {FFFFFF}- очистка чата\n");
				strcat(stradmcmd, "{FF0000}/а {FFFFFF}- админ-чат\n");
				strcat(stradmcmd, "{FF0000}/полёт {FFFFFF}- полёт в наблюдении\n");
				strcat(stradmcmd, "{FF0000}/доп - {FFFFFF}открыть дополнительную информацию игрока\n");
			}
			if(IsAdminAccess(playerid,500,1))
	        {
		        strcat(stradmcmd, "{FF0000}/зип - {FFFFFF}заглушка по IP\n");
	        }
			if(IsAdminAccess(playerid,700,1))
	        {
		        strcat(stradmcmd, "{FF0000}/сменитьник {FFFFFF}- сменить ник игроку\n");
        	    strcat(stradmcmd, "{FF0000}/тп {FFFFFF}- телепортироваться к игроку\n");
				strcat(stradmcmd, "{FF0000}/тпи {FFFFFF}- телепортировать к себе игрока\n");
	        }
	        if(IsAdminAccess(playerid,1000,1))
	        {
		        strcat(stradmcmd, "{FF0000}/авсем {FFFFFF}- написать в общий чат от имени админа\n");
		        strcat(stradmcmd, "{FF0000}/с {FFFFFF}- сказать от лица игрока\n");
		        strcat(stradmcmd, "{FF0000}/тпд {FFFFFF}- телепортация к дому\n");
		        strcat(stradmcmd, "{FF0000}/тпк {FFFFFF}- телепорт по координатам\n");
		        strcat(stradmcmd, "{FF0000}/тпт {FFFFFF}- телепортация к установленной точке\n");
		        strcat(stradmcmd, "{FF0000}/машину3 {FFFFFF}- создать транспорт\n");
	        }
	        if(IsAdminAccess(playerid,2000,1))
	        {
		        strcat(stradmcmd, "{FF0000}/сменитьмод {FFFFFF}- смена игрового режима\n");
		        strcat(stradmcmd, "{FF0000}/имясервера {FFFFFF}- смена название сервера\n");
		        strcat(stradmcmd, "{FF0000}/вклфс {FFFFFF}- загрузить фильтрскрипт\n");
		        strcat(stradmcmd, "{FF0000}/выклфс {FFFFFF}- выключить фильтрскрипт\n");
		        strcat(stradmcmd, "{FF0000}/фс {FFFFFF}- перезагрузить фильтрскрипт\n");
	        }
			ShowPlayerDialog(playerid,adm_cmdList_input,0,"{"#COLOR_DIALOG_MENU"}Команды",stradmcmd,"Выход","Назад");
		}
		case adm_infoAcc_input:
		{
			ShowPlayerDialog(playerid,adm_infoAcc_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Информация об аккаунте","Введи название аккаунта","Выбрать","Назад");
		}
		case adm_searchIP_input:
		{
			ShowPlayerDialog(playerid,adm_searchIP_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Поиск игроков по IP","Введи IP для поиска по игрокам","Поиск","Назад");
		}
		case adm_searchCountry_input:
		{
			ShowPlayerDialog(playerid,adm_searchCountry_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Поиск игроков по стране","Введи страну для поиска по игрокам\nПримечание: поиск чуствителен к регистру","Поиск","Назад");
		}
		case adm_searchRegion_input:
		{
			ShowPlayerDialog(playerid,adm_searchRegion_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Поиск игроков по региону","Введи регион для поиска по игрокам\nПримечание: поиск чуствителен к региструм","Поиск","Назад");
		}
		case adm_searchCity_input:
		{
			ShowPlayerDialog(playerid,adm_searchCity_input,DIALOG_STYLE_INPUT,"{"#COLOR_DIALOG_MENU"}Поиск игроков по городу","Введи город для поиска по игрокам\nПримечание: поиск чуствителен к регистру","Поиск","Назад");
		}
		case adm_clanRename_input:
		{
			ShowPlayerDialog(playerid,adm_clanRename_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Смена имени клану", "Введи номер клана и имя", "Выбрать", "Назад");
		}
		case adm_clanRetag_input:
		{
			ShowPlayerDialog(playerid,adm_clanRetag_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Смена тега клану", "Введи номер клана и тег", "Выбрать", "Назад");
		}
		case adm_sellHouse_input:
		{
			ShowPlayerDialog(playerid,adm_sellHouse_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Продать дом", "Введи номер дома\nКоторый хочешь продать", "Выбрать", "Назад");
		}
		case adm_unBanIP_input:
		{
			ShowPlayerDialog(playerid,adm_unBanIP_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Разбанить IP", "Введи IP который нужно разбанить\nЕсли нужно разбанить подсеть введи IP в формате 127.0.*.*", "Выбрать", "Назад");
		}
		case adm_DeleteClan_input:
		{
			ShowPlayerDialog(playerid,adm_DeleteClan_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}Удалить клан", "Введи номер клана который нужно удалить", "Выбрать", "Назад");
		}
		case adm_TP_House_input:
		{
			ShowPlayerDialog(playerid,adm_TP_House_input,DIALOG_STYLE_INPUT, "{"#COLOR_DIALOG_MENU"}ТП к дому", "Введи номер дома к которому нужно ТП", "Выбрать", "Назад");
		}
	}
	return true;
}

// ----------------------Админ команды------------------------------------------

cmd:a(playerid, params[])
{
	if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
	else if(emptyMessage(params)) return SendClientMessage(playerid, COLOR_GREY, "Введи /а [текст]");
	if(strlen(params) > 95) return SendClientMessage(playerid, COLOR_GREY, "Укороти сообщение");
	new msg[95], glstr[128];
	sscanf(params, "s[95]", msg);
	if(emptyMessage(msg)) return SendClientMessage(playerid, COLOR_SYSTEM, "Ты ничего не ввёл");
	format(glstr,sizeof(glstr),"{FFFF00}[А] %s [%d]: %s",PlayerInfo[playerid][Name],playerid,msg);
	SendAdminMessage(100,CYELLOW, glstr);
    return 1;
}
alias:a("а");

cmd:alladmchat(playerid, params[])
{
	if(IsAdminAccess(playerid,1000)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
	new tmp[128], glstr[128];
	sscanf(params, "s[128]", tmp);
    if(emptyMessage(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Введи /авсем [текст]");
	format(glstr, sizeof(glstr), "Администратор %s [%d]: %s", PlayerInfo[playerid][Name], playerid, tmp);
	SendClientMessageWithoutPlayer(0xFFCD00ff, glstr);
    return 1;
}
alias:alladmchat("авсем");

cmd:cc(playerid, params[])
{
	if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
	for(new i=0;i<100;i++)SendClientMessageToAll(-1,"");
	new mes[150];
	format(mes,sizeof(mes),"Чат был очищен администратором: %s [%d]",PlayerInfo[playerid][Name], playerid);
	SendClientMessageWithoutPlayer(CWHITE,mes);

	format(mes,sizeof(mes),"Админ %s [%d] очистил чат", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID]);
    Logs_Admins(gettime(), mes);
    return 1;
}
alias:cc("оч");

cmd:mute(playerid, params[])
{
	if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
    new plid, mtimestr[64], reason[64], glstr[128], mtime;
    sscanf(params, "ds[64]s[64]", plid, mtimestr, reason);
    if(emptyMessage(params)) return SendClientMessage(playerid, COLOR_GREY, "Введи /з [Номер игрока] [время сек] [причина]");
    if(!IsPlayerConnected(plid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
    if(!PlayerInfo[plid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
    if(PlayerInfo[playerid][AdminLevel] <= PlayerInfo[plid][AdminLevel] && plid != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок администратор");
    if(!IsNumeric(mtimestr) || emptyMessage(mtimestr))
    {
	    reason = mtimestr;
		if(PlayerInfo[plid][MuteTime] > 0)
	    {
	    	format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendClientMessageToAll(0x00FF00FF, glstr);
		    format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID]);
		    Logs_Admins(gettime(), glstr);
		    MuteIP(plid, PlayerInfo[plid][GetIP], strval(mtimestr));
		    if(PlayerInfo[plid][MuteCount] > 0) PlayerInfo[plid][MuteCount]--;
		}
	    else if(PlayerInfo[plid][MuteCount] == 0)
		{
		    if(emptyMessage(reason))
		    {
		   		format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d], причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    if(emptyMessage(reason))
		    {
		   		format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID]);
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d], причина: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], reason);
			}
		    Logs_Admins(gettime(), glstr);
		    SendClientMessage(plid, 0x006400FF, "При следующем нарушении автоматическая заглушка составит 5м:0с");
		    PlayerInfo[plid][MuteCount]++;
		} else {
			mtime = GetNextMuteTime(PlayerInfo[plid][MuteCount]);
           	if(emptyMessage(reason))
           	{
		    	format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime));
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s, причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime), reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    if(emptyMessage(reason))
           	{
		    	format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime));
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s, причина: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime), reason);
			}
		    Logs_Admins(gettime(), glstr);
		    SendClientMessage(plid, CRED, "УВАЖАЙ игроков, не оскорбляй их и не флуди в чат!!!");
		    format(glstr, sizeof(glstr), "При следующем нарушении автоматическая заглушка составит %s", MTF(GetNextMuteTime(PlayerInfo[plid][MuteCount]+1)));
		    SendClientMessage(plid, CRED, glstr);
		    SendClientMessage(plid, CRED, ":'-(");
		    PlayerInfo[plid][MuteTime] = mtime;
		    PlayerInfo[plid][MuteCount]++;
		}
    }
    else
    {
        mtime = strval(mtimestr);
	    if(mtime < 0 || mtime > 2000000000) mtime = 2000000000;
		if(PlayerInfo[playerid][AdminLevel] <= 500 && mtime > 3600) mtime = 3600;
	    if(mtime == 0)
	    {
            if(PlayerInfo[plid][MuteTime] == 0) return SendClientMessage(playerid,CGRAY,"Игрок не заглушен");
	    	format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendClientMessageToAll(0x00FF00FF, glstr);
		    format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID]);
		    Logs_Admins(gettime(), glstr);
		    MuteIP(plid, PlayerInfo[plid][GetIP], strval(mtimestr));
		    if(PlayerInfo[plid][MuteCount] > 0) PlayerInfo[plid][MuteCount]--;
		} else {
			if(PlayerInfo[plid][MuteTime] > mtime) return SendClientMessage(playerid,CGRAY,"Игрок уже заглушен на это время");
			if(emptyMessage(reason))
           	{
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime));
			} else {
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s, причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime), reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    if(emptyMessage(reason))
           	{
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime));
			} else {
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] на %s, причина: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime), reason);
			}
		    Logs_Admins(gettime(), glstr);
		    SendClientMessage(plid, CRED, "УВАЖАЙ игроков, не оскорбляй их и не флуди в чат!!!");
		    format(glstr, sizeof(glstr), "При следующем нарушении автоматическая заглушка составит %s", MTF(GetNextMuteTime(PlayerInfo[plid][MuteCount]+1)));
		    SendClientMessage(plid, CRED, glstr);
		    SendClientMessage(plid, CRED, ":'-(");
		    PlayerInfo[plid][MuteTime] = mtime;
		    PlayerInfo[plid][MuteCount]++;
		}
    }
    return 1;
}
alias:mute("з");

cmd:muteip(playerid, params[])
{
	if(IsAdminAccess(playerid,500)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
    new plid, mtimestr[64], reason[64], glstr[128], mtime;
    sscanf(params, "ds[64]s[64]", plid, mtimestr, reason);
    if(emptyMessage(params)) return SendClientMessage(playerid, COLOR_GREY, "Введи /зип [Номер игрока] [время сек] [причина]");
    if(!IsPlayerConnected(plid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
    if(!PlayerInfo[plid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
    if(PlayerInfo[playerid][AdminLevel] <= PlayerInfo[plid][AdminLevel] && plid != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок администратор");
    if(!IsNumeric(mtimestr) || emptyMessage(mtimestr))
    {
	    reason = mtimestr;
		if(PlayerInfo[plid][MuteTime] > 0)
	    {
	    	format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendClientMessageToAll(0x00FF00FF, glstr);
		    format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID]);
		    Logs_Admins(gettime(), glstr);
		    MuteIP(plid, PlayerInfo[plid][GetIP], strval(mtimestr));
		    if(PlayerInfo[plid][MuteCount] > 0) PlayerInfo[plid][MuteCount]--;
		}
	    else if(PlayerInfo[plid][MuteCount] == 0)
		{
		    if(emptyMessage(reason))
		    {
		   		format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d], причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    if(emptyMessage(reason))
		    {
		   		format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID]);
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] выдал предупреждение в чате %s [%d], причина: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], reason);
			}
		    Logs_Admins(gettime(), glstr);
		    SendClientMessage(plid, 0x006400FF, "При следующем нарушении автоматическая заглушка составит 5м:0с");
		    PlayerInfo[plid][MuteCount]++;
		} else {
			mtime = GetNextMuteTime(PlayerInfo[plid][MuteCount]);
           	if(emptyMessage(reason))
           	{
		    	format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime));
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s, причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime), reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    if(emptyMessage(reason))
           	{
		    	format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime));
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s, причина: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime), reason);
			}
		    Logs_Admins(gettime(), glstr);
		    SendClientMessage(plid, CRED, "УВАЖАЙ игроков, не оскорбляй их и не флуди в чат!!!");
		    format(glstr, sizeof(glstr), "При следующем нарушении автоматическая заглушка составит %s", MTF(GetNextMuteTime(PlayerInfo[plid][MuteCount]+1)));
		    SendClientMessage(plid, CRED, glstr);
		    SendClientMessage(plid, CRED, ":'-(");
		    MuteIP(plid, PlayerInfo[plid][GetIP], mtime);
		    PlayerInfo[plid][MuteCount]++;
		}
    }
    else
    {
        mtime = strval(mtimestr);
	    if(mtime < 0 || mtime > 2000000000) mtime = 2000000000;
		if(PlayerInfo[playerid][AdminLevel] <= 500 && mtime > 3600) mtime = 3600;
	    if(mtime == 0)
	    {
            if(PlayerInfo[plid][MuteTime] == 0) return SendClientMessage(playerid,CGRAY,"Игрок не заглушен");
	    	format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendClientMessageToAll(0x00FF00FF, glstr);
		    format(glstr, sizeof(glstr), "Админ %s [%d] разглушил %s [%d]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID]);
		    Logs_Admins(gettime(), glstr);
		    MuteIP(plid, PlayerInfo[plid][GetIP], mtime);
		    if(PlayerInfo[plid][MuteCount] > 0) PlayerInfo[plid][MuteCount]--;
		} else {
			if(PlayerInfo[plid][MuteTime] > mtime) return SendClientMessage(playerid,CGRAY,"Игрок уже заглушен на это время");
			if(emptyMessage(reason))
           	{
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime));
			} else {
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s, причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mtime), reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    if(emptyMessage(reason))
           	{
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime));
			} else {
				format(glstr, sizeof(glstr), "Админ %s [%d] заглушил %s [%d] по IP на %s, причина: %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], PlayerInfo[plid][Name], PlayerInfo[plid][ID], MTF(mtime), reason);
			}
		    Logs_Admins(gettime(), glstr);
		    SendClientMessage(plid, CRED, "УВАЖАЙ игроков, не оскорбляй их и не флуди в чат!!!");
		    format(glstr, sizeof(glstr), "При следующем нарушении автоматическая заглушка составит %s", MTF(GetNextMuteTime(PlayerInfo[plid][MuteCount]+1)));
		    SendClientMessage(plid, CRED, glstr);
		    SendClientMessage(plid, CRED, ":'-(");
		    MuteIP(plid, PlayerInfo[plid][GetIP], mtime);
		    PlayerInfo[plid][MuteCount]++;
		}
    }
    return 1;
}
alias:muteip("зип");

cmd:mutecmd(playerid, params[])
{
	new plid, mctime, reason[64], glstr[128];
    sscanf(params, "dds[64]", plid, mctime, reason);
	if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
	else if(emptyMessage(params)) return SendClientMessage(playerid, COLOR_GREY, "Введи /зк [Номер игрока] [время сек] [причина]");
	else if(!IsPlayerConnected(plid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
	else if(!PlayerInfo[plid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	else if(PlayerInfo[playerid][AdminLevel] <= PlayerInfo[plid][AdminLevel] && plid != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок администратор");
	else
	{
		if(mctime < 0 || mctime > 2000000000) mctime = 2000000000;
	    if(mctime == 0)
	    {
			if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, COLOR_GREY, "Тебе нельзя снимать запрет на использвание команд и меню");
            if(PlayerInfo[plid][MuteCMD] == 0) return SendClientMessage(playerid,CGRAY,"У игрока не закрыты команды");
	    	format(glstr, sizeof(glstr), "Админ %s [%d] снял запрет на использование команд и меню с %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendClientMessageToAll(0x00FF00FF, glstr);
		    PlayerInfo[plid][MuteCMD] = mctime;
	    } else {
	        if(PlayerInfo[plid][MuteCMD] > mctime) return SendClientMessage(playerid,CGRAY,"Игрок уже закрыт на это время");
	    	if(emptyMessage(reason))
	    	{
		    	format(glstr, sizeof(glstr), "Админ %s [%d] запретил использовать команды и меню %s [%d] на %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mctime));
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] запретил использовать команды и меню %s [%d] на %s, причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(mctime), reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    PlayerInfo[plid][MuteCMD] = mctime;
	    }
	}
    return 1;
}
alias:mutecmd("зк");

cmd:jail(playerid, params[])
{
	new plid, ttime, reason[64], glstr[128];
    sscanf(params, "dds[64]", plid, ttime, reason);
	if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY , "У тебя нет прав использовать эту команду!");
	else if(emptyMessage(params)) return SendClientMessage(playerid, COLOR_GREY, "Введи /т [Номер игрока] [время сек] [причина]");
	else if(!IsPlayerConnected(plid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
	else if(!PlayerInfo[plid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
    else if(PlayerInfo[playerid][AdminLevel] <= PlayerInfo[plid][AdminLevel] && plid != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок администратор");
	else
	{
		if(ttime < 0 || ttime > 2000000000) ttime = 2000000000;
		if(IsAdminAccess(playerid,500) && ttime > 300) ttime = 300;
		else if(IsAdminAccess(playerid,700) && ttime > 36000) ttime = 36000;
	    if(ttime == 0)
	    {
			if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, COLOR_GREY, "Тебе нельзя выпускать игроков из тюрьмы");
            if(PlayerInfo[plid][JailTime] == 0) return SendClientMessage(playerid,CGRAY,"Игрок не посажен в тюрьму");
			format(glstr, sizeof(glstr), "Админ %s [%d] выпустил %s [%d] из тюрьмы", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid);
		    SendClientMessageToAll(0x00FF00FF, glstr);
		    OnPlayerJail(plid, 1);
	    } else {
	    	if(PlayerInfo[plid][JailTime] > ttime) return SendClientMessage(playerid,CGRAY,"Игрок уже посажен на это время");
			if(emptyMessage(reason))
			{
		    	format(glstr, sizeof(glstr), "Админ %s [%d] посадил %s [%d] в тюрьму на %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(ttime));
			} else {
			    format(glstr, sizeof(glstr), "Админ %s [%d] посадил %s [%d] в тюрьму на %s, причина: %s", PlayerInfo[playerid][Name], playerid, PlayerInfo[plid][Name], plid, MTF(ttime), reason);
			}
		    SendClientMessageToAll(0x006400FF, glstr);
		    OnPlayerJail(plid, ttime);
	    }
	}
    return 1;
}
alias:jail("т");

cmd:tpto(playerid, params[])
{
	if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, CGRAY, "У тебя нет прав использовать эту команду!");
	else if(emptyMessage(params)) return SendClientMessage(playerid, CGRAY, "Введи /тп [Номер игрока]");
	sscanf(params, "d", params[0]);
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, CGRAY, "Такого игрока нет");
	if(!PlayerInfo[params[0]][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, CGRAY, "Такого игрока нет");
	if(!PlayerInfo[params[0]][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	if(playerid == params[0]) return SendClientMessage(playerid, CGRAY, "Ты ввёл свой ID");
	new Float:plocx,Float:plocy,Float:plocz, Float:ploca;
	GetPlayerPos(params[0], plocx, plocy, plocz);
	GetPlayerFacingAngle(params[0], ploca);
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(params[0]));
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(params[0]));
		SetVehiclePos(GetPlayerVehicleID(playerid), plocx, plocy+2, plocz+0.8);
	} else {
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerPos(playerid, plocx, plocy+2, plocz+0.8);
		SetPlayerFacingAngle(playerid, ploca-180.0);
	}
	PlayerInfo[playerid][HouseEnter] = PlayerInfo[params[0]][HouseEnter];
	static const fmt_msg[] = "Админ %s [%d] телепортировался к %s [%d]";
	new glstr[sizeof(fmt_msg)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+10];
	format(glstr, sizeof(glstr), fmt_msg,  PlayerInfo[playerid][Name], playerid,  PlayerInfo[params[0]][Name], params[0]);
	SendAdminMessage(1000,CWHITE, glstr, playerid, params[0]);
	SendClientMessagef(playerid, COLOR_WHITE, "Ты телепортировался к игроку %s [%d]", PlayerInfo[params[0]][Name], params[0]);
	/*} else {
		static const fmt_msg[] = "Админ %s [%d] телепортировал игрока %s [%d] к игроку %s [%d]";
		new glstr[sizeof(fmt_msg)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME+15];
		format(glstr, sizeof(glstr), fmt_msg,  PlayerInfo[playerid][Name], playerid, PlayerInfo[playerid][Name], playerid, PlayerInfo[params[0]][Name], params[0]);
		SendAdminMessage(1000,CWHITE, glstr, playerid);
		SendClientMessagef(playerid, COLOR_WHITE, "Ты телепортировал игрока %s [%d] к игроку %s [%d]",PlayerInfo[playerid][Name], playerid, PlayerInfo[params[0]][Name], params[0]);
	}*/
    return 1;
}
alias:tpto("тп");

cmd:gethere(playerid, params[])
{
	if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
	else if(emptyMessage(params)) return SendClientMessage(playerid, CGRAY, "Введи /тпи [Номер игрока]");
	sscanf(params, "d", params[0]);
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
	if(!PlayerInfo[params[0]][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты ввёл свой ID");
	new Float:plocx,Float:plocy,Float:plocz, Float:ploca;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	GetPlayerFacingAngle(playerid, ploca);
	if(IsPlayerInAnyVehicle(params[0]))
	{
		SetVehicleVirtualWorld(GetPlayerVehicleID(params[0]), GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(GetPlayerVehicleID(params[0]), GetPlayerInterior(playerid));
		SetVehiclePos(GetPlayerVehicleID(params[0]), plocx, plocy+2, plocz+0.8);
	} else {
		SetPlayerInterior(params[0], GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
		SetPlayerPos(params[0], plocx, plocy+2, plocz+0.8);
		SetPlayerFacingAngle(params[0], ploca-180.0);
	}
	new glstr[50+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	PlayerInfo[params[0]][HouseEnter] = PlayerInfo[playerid][HouseEnter];
	SendClientMessagef(params[0], COLOR_WHITE, "Админ %s [%d] портанул вас к себе", PlayerInfo[playerid][Name], playerid);
	format(glstr, sizeof(glstr), "Админ %s [%d] телепортировал к себе игрока %s [%d]", PlayerInfo[playerid][Name], playerid, PlayerInfo[params[0]][Name], params[0]);
	SendAdminMessage(1000,CWHITE, glstr, playerid, params[0]);
	SendClientMessagef(playerid, COLOR_WHITE, "Ты телепортировал к себе игрока %s [%d]", PlayerInfo[params[0]][Name], params[0]);
    return 1;
}
alias:gethere("тпи");

cmd:tpk(playerid, params[])
{
	if(IsAdminAccess(playerid,1000)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
	if(emptyMessage(params)) return SendClientMessage(playerid, COLOR_GREY, "Введи /тпк X,Y,Z");
	new Float:x, Float:y, Float:z;
    sscanf(params, "p<,>fff", x, y, z);
    SetPlayerPos(playerid, x, y, z);
    return 1;
}
alias:tpk("тпк");

cmd:dop(playerid, params[])
{
    if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
    new id = strval(params);
    if(emptyMessage(params)) return SendClientMessage(playerid,CGRAY,"Введи /доп [Номер игрока]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
	if(!PlayerInfo[id][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	if(id == playerid) return SendClientMessage(playerid,CGRAY,"Ты ввёл свой номер");
	SetPVarInt(playerid, "ClickPlayer", id);
	ShowAddStats(playerid, GetPVarInt(playerid, "ClickPlayer"));
    return 1;
}
alias:dop("доп");

cmd:veh(playerid, params[])
{
    if(IsAdminAccess(playerid,1000)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0xFFFF00AA, "Ты должен быть не в здании!");
    if(sscanf(params,"iii",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_GREY, "Введи /машину3 [Номер модели] [номер цвета 1] [номер цвета 2]");
    if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, 0xAFAFAFAA, "Эта модель не существует");
    if((params[1] < 0 || params[1] > 255)||(params[2] < 0 || params[2] > 255)) return SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 255");
    if(GetPVarInt(playerid, "AdminCarCount") >= 25) return SendClientMessage(playerid, COLOR_GREY, "Ты создал слишком много машин, удали некоторые");
    new Float:pos[4];
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	
	new carid = CreateVehicle(params[0],  pos[0]+2, pos[1], pos[2]+0.2, pos[3], params[1], params[2], 1200);
	
	SetVehicleToRespawn(carid);
	LinkVehicleToInterior(carid,GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(carid,GetPlayerVirtualWorld(playerid));
	VehicleInfo[carid][vID] = carid;
	VehicleInfo[carid][vHealth] = 1000;
	VehicleInfo[carid][vAdmin] = 1;
	VehicleInfo[carid][vOwner] = playerid;
	UpdateVehicle(carid);
	SetPVarInt(playerid, "AdminCarCount", GetPVarInt(playerid, "AdminCarCount")+1);
    return 1;
}
alias:veh("машину3");

cmd:tph(playerid, params[])
{
    if(IsAdminAccess(playerid,1000)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CGRAY,"Введи /тпд [Номер дома]");
	if(params[0] < 0 || params[0] > houseid-1) return SendClientMessage(playerid, CGRAY, "Неверный номер дома");
	new hid = params[0];
	SetPlayerPos(playerid,HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
    return 1;
}
alias:tph("тпд");

cmd:tpp(playerid, params[])
{
    if(IsAdminAccess(playerid,1000)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
    if(!GetPVarInt(playerid, "admtp")) return SendClientMessage(playerid, COLOR_GREY, "Точка телепорта не установлена!");
    if(PlayerInfo[playerid][JailTime]) return SendClientMessage(playerid,CGRAY,"Ты в тюрьме!");
    if(!IsPlayerSpawned(playerid)) return SendClientMessage(playerid,CGRAY,"Сейчас ты не можешь использовать эту команду!");
    SetPlayerInterior(playerid, GetPVarInt(playerid, "admtpint"));
	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "admtpvw"));
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetVehiclePos(GetPlayerVehicleID(playerid),GetPVarFloat(playerid,"admtpx"),GetPVarFloat(playerid,"admtpy"),GetPVarFloat(playerid,"admtpz"));
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPVarInt(playerid, "admtpint"));
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPVarInt(playerid, "admtpvw"));
	} else {
		SetPlayerPos(playerid,GetPVarFloat(playerid,"admtpx"),GetPVarFloat(playerid,"admtpy"),GetPVarFloat(playerid,"admtpz"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"admtpa"));
	}
	PlayerInfo[playerid][HouseEnter] = GetPVarInt(playerid, "admtphouse");
	SendClientMessage(playerid, CLIGHTGREEN, "Ты телепортировался к установленной точке");
    return 1;
}
alias:tpp("тпт");

cmd:changename(playerid, params[])
{
	new targetid, newname[MAX_PLAYER_NAME], oldname[MAX_PLAYER_NAME];
    if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
	if(sscanf(params,"ds[24]",targetid,newname)) return SendClientMessage(playerid,CGRAY,"Введи /сменитьник [Номер игрока] [новый ник]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
	if(!PlayerInfo[targetid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	if(emptyMessage(newname)) return SendClientMessage(playerid,CGRAY,"Введи новый ник");
	if(CheckAdv(newname)) return SendClientMessage(playerid,COLOR_GREY,"Подозрение на рекламу");
	switch(SetPlayerNickName(targetid, newname, oldname))
    {
        case -2: return SendClientMessage(playerid, COLOR_GREY, "Ник слишком длинный");
        case -1: return SendClientMessage(playerid, COLOR_GREY, "Ты использовал запрещенные символы в нике");
        case 0:  return SendClientMessage(playerid, COLOR_GREY, "Этот ник уже занят");
		case 1:
		{
			new fstr[144];
			if(playerid != targetid)
			{
				format(fstr, sizeof(fstr), "Админ %s [%d] сменил игроку %s [%d] ник на %s", PlayerInfo[playerid][Name], playerid, oldname, targetid , newname);
			    SendClientMessageWithoutPlayer(COLOR_GREY,fstr);
			    format(fstr, sizeof(fstr), "Админ %s [%d] сменил игроку %s [%d] ник на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], oldname, PlayerInfo[targetid][ID], newname);
			    Logs_Admins(gettime(), fstr);
		    } else {
			    format(fstr, sizeof(fstr), "Игрок %s [%d] сменил ник на %s", oldname, playerid , newname);
			    SendClientMessageWithoutPlayer(COLOR_GREY,fstr);
		    }
			SendClientMessage(targetid, CRED, "ВНИМАНИЕ: не забудь поменять на новый ник в клиенте");
			SendClientMessage(targetid, CRED, "ВНИМАНИЕ: Если ты забудешь сменить имя в клиенте, свой новый ник можно посмотреть на сайте");
			SendClientMessage(targetid, CRED, "В разделе Разное - история аккаунтов");
		}
    }
    return 1;
}
alias:changename("сменитьник");

cmd:c(playerid, params[])
{
	new targetid,text[88];
    if(IsAdminAccess(playerid,1000)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
    if(sscanf(params,"ds[24]",targetid,text)) return SendClientMessage(playerid,CGRAY,"Введи /с [Номер игрока] [текст]");
    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет");
	if(!PlayerInfo[targetid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
	if(PlayerInfo[targetid][MuteTime]) return SendClientMessage(playerid,CGRAY,"У игрока заглушка");
	if(PlayerInfo[playerid][AdminLevel] <= PlayerInfo[targetid][AdminLevel] && targetid != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок администратор");
	if(targetid == playerid) return SendClientMessage(playerid,CGRAY,"Ты не можешь сказать от себя");
	if(text[0] == '.') text[0] = '/';
	OnPlayerText(targetid,text);
    return 1;
}
alias:c("с");

cmd:fly(playerid, params[])
{
	if(IsAdminAccess(playerid,100)) return SendClientMessage(playerid, COLOR_GREY, "У тебя нет прав использовать эту команду!");
	if(IsPlayerFlyMode(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ты находишься в режиме полёта наблюдения!");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, CGRAY, "Ты должен быть не в здании!");
	SaveData(playerid);
	FlyMode(playerid);
    return 1;
}
alias:fly("полёт", "полет");

/*cmd:1(playerid, params[])
{
    return 1;
}
alias:1("1");*/

// ------------------Админ команды КОНЕЦ ---------------------------------------

DIALOG:mn_promocode_input(playerid, response, listitem, inputtext[])
{
	ReplaceDialog(inputtext);
	if(!response) return ShowDonate(playerid, d_DonateMenu);
	if(emptyMessage(inputtext))
	{
		ShowDonate_input(playerid, "mn_promocode_input");
		return SendClientMessage(playerid,CGRAY,"Введи промокод");
	}
	if(SQL::RowExistsEx("logs_promocods", "Promocode", inputtext) && SQL::RowExists("logs_promocods", "Account", PlayerInfo[playerid][ID]))
	{
		return SendClientMessage(playerid,CGRAY,"Ты уже активировал этот промокод");
	}
	new query[128];
	format(query,sizeof(query),"SELECT * FROM `promocods` WHERE `Code`='%s' LIMIT 1",inputtext);
	mysql_function_query(mysqlConnection, query, true, "GetPromoCode", "d", playerid);
	return 1;
}

forward GetPromoCode(playerid);
public GetPromoCode(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new msg[128];
		new id = cache_get_field_content_int(0, "ID");
		new code[64];
		cache_get_field_content(0, "Code", code);
		new bonusname[24];
		cache_get_field_content(0, "Bonus", bonusname);
		new bonuscount = cache_get_field_content_int(0, "BonusCount");
		new validity = cache_get_field_content_int(0, "Validity");
		new usercount = cache_get_field_content_int(0, "User_Count");
		new usermax = cache_get_field_content_int(0, "User_Max");
		new activated = cache_get_field_content_int(0, "Activated");
		if(!activated)
		{
			if(gettime() <= validity)
			{
				format(msg,sizeof(msg),"Ты успешно активировал промокод №%d", id);
				SendClientMessage(playerid, COLOR_YELLOW,msg);

				if(strcmp(bonusname, "VIP") == 0)
				{
					GivePlayerVip(playerid, bonuscount);
				}
				if(strcmp(bonusname, "Уровень") == 0)
				{
					PlayerInfo[playerid][Level] += bonuscount;
				}
				if(strcmp(bonusname, "Деньги") == 0)
				{
					SetPlayerMoney(playerid, PlayerInfo[playerid][Money]+bonuscount);
				}
				else
				{
					printf("Аккаунт %d активировал промокод, но не получил бонусы с него", PlayerInfo[playerid][ID]);
				}
				if(usermax != usercount)
				{
					mysql_format(mysqlConnection,msg,sizeof(msg),"UPDATE `promocods` SET `User_Count` = `User_Count` + '1' WHERE `ID` = '%d'",id);
					mysql_tquery(mysqlConnection,msg, "", "");
				}
				usercount = cache_get_field_content_int(0, "User_Count");
				if(usermax == usercount)
				{
					mysql_format(mysqlConnection,msg,sizeof(msg),"UPDATE `promocods` SET `Activated` = '1' WHERE `ID` = '%d'",id);
					mysql_tquery(mysqlConnection,msg, "", "");
				}

				Logs_Promocods(PlayerInfo[playerid][ID], id, code, gettime());
			}
			else
			{
				SendClientMessage(playerid, CGRAY, "Срок действия этого промокода истёк");
				ShowDonate_input(playerid, "mn_promocode_input");
			}
		}
		else
		{
			SendClientMessage(playerid, CGRAY, "Этот промокод уже активирован");
			ShowDonate_input(playerid, "mn_promocode_input");
		}
	}
	else
	{
		SendClientMessage(playerid, CGRAY, "Такого промокода не существует");
		ShowDonate_input(playerid, "mn_promocode_input");
	}
	return true;
}

stock ShowHistoryName(playerid, targetid, fromslot)
{
	new query[128];
	format(query,sizeof(query),"SELECT * FROM `logs_setname` WHERE `Account`='%d' ORDER BY `Time` DESC",PlayerInfo[targetid][ID]);
	mysql_function_query(mysqlConnection, query, true, "historySetName", "ddd", playerid, targetid, fromslot);
	return 1;
}

forward historySetName(playerid, targetid, fromslot);
public historySetName(playerid, targetid, fromslot)
{
	new rows, fields;
	cache_get_data(rows, fields);
	new string[(61*20)], contents[32+MAX_PLAYER_NAME], coren[32], count, name_mysql[24];
	if(rows)
	{
		for(new i = fromslot; i < fromslot + 20; i++)
		{
			if( i < rows)
			{
	            new date[3], time[3];
				gmtime(cache_get_field_content_int(i, "Time"), date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
				cache_get_field_content(i, "NewName", name_mysql);
			    format(string,sizeof(string),"%s[%d/%d/%d %02d:%02d:%02d] %s\n", string, date[0], date[1], date[2], time[0], time[1], time[2], name_mysql);
			}
			/*else if(i == rows)
			{
				new date[3], time[3];
				gmtime(cache_get_field_content_int(i-1, "Time"), date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
				cache_get_field_content(i-1, "NewName", name_mysql);
				format(string,sizeof(string),"%s[%d/%d/%d %02d:%02d:%02d] 1-й ник %s\n", string, date[0], date[1], date[2], time[0], time[1], time[2], name_mysql);
			}*/
			if( i == ( fromslot + 20 ) - 1 && i < rows) format(coren, sizeof(coren), "Далее");
			else format(coren, sizeof(coren), "Выход");
			count = i;
		}
	}
	if(!rows)
	{
		strcat(string, "История изменения ников этого аккаунта пуста");
		strcat(coren, "Выход");
	}
	f(contents,"{"#COLOR_DIALOG_MENU"}История ников игрока %s [%d]",PlayerInfo[targetid][Name],targetid);
	ShowPlayerDialogEx(playerid,"historySetName",DIALOG_STYLE_MSGBOX,contents,string,coren,"Назад");
	SetPVarInt(playerid, "historyNameList", fromslot);
	SetPVarInt(playerid, "historyNameListID", count);
	SetPVarInt(playerid, "historyNameRows", rows);
	return true;
}

DIALOG:historySetName(playerid, response, listitem, inputtext[])
{
	if(!IsPlayerConnected(GetPVarInt(playerid, "ClickPlayer"))) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
	if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
	if( GetPVarInt(playerid, "historyNameListID") == ( GetPVarInt(playerid, "historyNameList") + 20 ) - 1 && GetPVarInt(playerid, "historyNameListID") < GetPVarInt(playerid, "historyNameRows"))
	{
		ShowHistoryName(playerid, GetPVarInt(playerid, "ClickPlayer"), GetPVarInt(playerid, "historyNameList") + 20);
    }
	return 1;
}

stock CheckReferalBonus(playerid)
{
	if(PlayerInfo[playerid][ReferalID] != 0)
	{
		new str[128];
		new referplid = GetPlayerID_Account(PlayerInfo[playerid][ReferalID]);
		new level = REFERAL_BONUS_LEVEL, money = REFERAL_BONUS_MONEY, points = REFERAL_BONUS_POINTS;
		if(PlayerInfo[playerid][ReferalBonus])
		{
			if(IsPlayerConnected(referplid))
			{
				new bonus = PlayerInfo[playerid][ReferalBonus];
				level = level*bonus;
				money = money*bonus;
				points = points*bonus;
				format(str,sizeof(str),"За прокачку приглашённого тобой игрока %s [%d] ты получил %d уровень, %d ОА и $%d",PlayerInfo[playerid][Name], playerid, level, points, money);
				SendClientMessage(referplid,0xFF0000AA,str);
				format(str,sizeof(str),"Ты прокачал 10 уровней, %s получил %d уровень, %d ОА и $%d",GetAccountName(PlayerInfo[playerid][ReferalID]), level, points, money);
				SendClientMessage(playerid,0xFF0000AA,str);
				SetPlayerLevel(referplid, PlayerInfo[referplid][Level]+level);
				SetPlayerMoney(referplid, PlayerInfo[referplid][Money]+money);
				SetPlayerPoints(referplid, PlayerInfo[referplid][Points]+points);
				PlayerInfo[playerid][ReferalBonus] = 0;
				mysql_player_update_int(playerid, "ReferalBonus", PlayerInfo[playerid][ReferalBonus]);
				SendClientMessage(referplid,0xFF0000AA,"Чем больше игроков ты пригласишь, тем больше бонусов получишь");
			}
		}
	}
	return 1;
}

stock ShowStats(playerid,targetid,dialogname[])
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
	    new str[256],sctring[1512];
	    new contents[50];
	   	new nxtlevel = PlayerInfo[targetid][Level];
		new expamount = nxtlevel*110;
		new clan = PlayerInfo[targetid][Clan];
		new hid = PlayerInfo[targetid][House];
		if(PlayerInfo[targetid][Vip] == VIP_FOREVER)
		{
			f(str,"{"#cRED"}Vip куплен НАВСЕГДА\n\n");
		}
		if(PlayerInfo[targetid][Vip] == VIP_NOT_FOREVER)
		{
			new date[3], time[3];
			gmtime(PlayerInfo[targetid][VipTime], date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
			f(str,"{"#cRED"}Время окончания Vip %02d.%02d.%02d в %02d:%02d:%02d\n\n",date[0], date[1], date[2], time[0], time[1], time[2]);
		}
		strcat(sctring,str);
		f(str,"{"#cYELLOW"}Обо аккаунте:\n");
		strcat(sctring,str);
		f(str,"{"#cWHITE"}Уровень: {"#cRED"}%i {"#cLIGHTGREEN"}( %i/%i )\n", PlayerInfo[targetid][Level],PlayerInfo[targetid][Exp],expamount);
		strcat(sctring,str);
		f(str,"{"#cWHITE"}Очков апгрейда:{"#cYELLOW"} %i\n", PlayerInfo[targetid][Points]);
	    strcat(sctring,str);
	    f(str,"{"#cWHITE"}Время зарплаты:{"#cLIGHTGREEN"} через %s\n", MTF(PlayerInfo[targetid][TimeWage]-gettime()));
	    strcat(sctring,str);
		f(str,"{"#cWHITE"}Номер аккаунта:{00FFFF} %i\n", PlayerInfo[targetid][ID]);
		strcat(sctring,str);
		if(PlayerInfo[targetid][Clan])
		{
			f(str,"{"#cWHITE"}Клан №:{"#cYELLOW"} %i, {"#cWHITE"}Названия:{"#cLIGHTGREEN"} %s, {"#cWHITE"}Тег: {"#cLIGHTGREEN"}%s\n", clan, ClanInfo[clan][cName],ClanInfo[clan][cTag]);
			strcat(sctring,str);
	    } else {
			strcat(sctring,"{"#cWHITE"}Клана {"#cYELLOW"}нет\n");
	    }
		f(str,"{"#cWHITE"}Номер скина: {"#cYELLOW"}%i\n", PlayerInfo[targetid][Skin]);
		strcat(sctring,str);
		f(str,"{"#cWHITE"}Статистика убийств:{"#cWHITE"} очков:{"#cYELLOW"} %i {"#cWHITE"}убийств:{"#cYELLOW"} %i {"#cWHITE"}смертей:{"#cYELLOW"} %i\n",PlayerInfo[targetid][Kills]-PlayerInfo[targetid][Death], PlayerInfo[targetid][Kills],PlayerInfo[targetid][Death]);
	    strcat(sctring,str);
	    f(str,"{"#cWHITE"}Следующая процентная ставка:{"#cRED"} %.2f\n", PlayerInfo[targetid][BankComission]);
		strcat(sctring,str);
		if(PlayerInfo[targetid][ReferalID] == 0)
		{
			strcat(sctring,"\n");
		} else {
			f(str,"{"#cWHITE"}Номер аккаунта пригласившего игрока: {"#cYELLOW"}%d\n\n", PlayerInfo[targetid][ReferalID]);
			strcat(sctring,str);
		}
		if(!PlayerInfo[targetid][GodMode])
		{
			strcat(sctring,"{"#cLIGHTGREEN"}Игрок смертный\n\n");
		} else {
			strcat(sctring,"{"#cRED"}Игрок бессмертный\n\n");
		}
	    f(str,"{"#cYELLOW"}Имущество:\n");
		strcat(sctring,str);
		if(PlayerInfo[targetid][House] != INVALID_HOUSE_ID)
		{
			f(str,"{"#cWHITE"}Дом №: {"#cYELLOW"}%i\n\n", PlayerInfo[targetid][House]);
			strcat(sctring,str);
		}
		else if(PlayerInfo[targetid][Renter] != INVALID_HOUSE_ID)
		{
			f(str,"{"#cWHITE"}Дом №: {"#cYELLOW"}%i\n\n", PlayerInfo[targetid][Renter]);
			strcat(sctring,str);
		}
		else
		{
			strcat(sctring,"{"#cWHITE"}Дома нет\n\n");
		}
		f(str,"{"#cYELLOW"}Сбережения:\n");
		strcat(sctring,str);
		f(str,"{"#cWHITE"}На руках:{00FF00} $%i / $%i\n", PlayerInfo[targetid][Money], GetLimitMoney(targetid));
		strcat(sctring,str);
		f(str,"{"#cWHITE"}В банке:{00FF00}  $%i / $%i\n", PlayerInfo[targetid][Bank], GetLimitBank(targetid));
		strcat(sctring,str);
		if(PlayerInfo[targetid][House] != INVALID_HOUSE_ID)
		{
			f(str,"{"#cWHITE"}В сейфе дома:{00FF00}  $%i / $5000000\n", HouseInfo[hid][hBank]);
		}
		else
		{
			f(str,"{"#cWHITE"}В сейфе дома:{00FF00}  дома нет\n");
		}
		strcat(sctring,str);
		if(PlayerInfo[targetid][Clan])
		{
			f(str,"{"#cWHITE"}В клане:{00FF00}  $%i / $%i\n\n", ClanInfo[clan][cBank], ClanInfo[clan][cLevel]*1000000);
			strcat(sctring,str);
		}
		else
		{
			strcat(sctring,"\n");
		}
		f(str,"{"#cYELLOW"}Наказания:\n");
	    strcat(sctring,str);
		f(str,"{"#cWHITE"}Сидеть в тюрьме: {"#cRED"}%s\n", MTF(PlayerInfo[targetid][JailTime]));
		strcat(sctring,str);
		f(str,"{"#cWHITE"}Заглушен на: {"#cRED"}%s\n", MTF(PlayerInfo[targetid][MuteTime]));
		strcat(sctring,str);
		f(str,"{"#cWHITE"}Меню и команды закрыты на: {"#cRED"}%s\n", MTF(PlayerInfo[targetid][MuteCMD]));
		strcat(sctring,str);
		if(playerid == targetid)
		{
			strcat(sctring, "{"#cWHITE"}Время при автоматической заглушке: ");
			if(PlayerInfo[targetid][MuteCount] == 0)
			{
				strcat(sctring, "{"#cRED"}выдаст предупреждение");
				} else {
				format(str,sizeof(str),"{"#cRED"}%s", MTF(GetNextMuteTime(PlayerInfo[targetid][MuteCount])));
				strcat(sctring, str);
			}
		}
		f(contents,"{"#COLOR_DIALOG_MENU"}Статистика %s [%d]",PlayerInfo[targetid][Name],targetid);
	    ShowPlayerDialogEx(playerid,dialogname,DIALOG_STYLE_MSGBOX,contents,sctring,"Выход","Назад");
	}
}

DIALOG:Stats(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Info);
	return 1;
}

DIALOG:pStats(playerid, response, listitem, inputtext[])
{
	if(!IsPlayerConnected(GetPVarInt(playerid, "ClickPlayer"))) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
	if(!response) return ShowPlayerMenu(GetPVarInt(playerid, "ClickPlayer"), playerid, d_pMenu);
	return 1;
}

stock ShowAddStats(playerid, targetid)
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
	    new str[256],sctring[1512];
	    new contents[50];
		new Float:px, Float:py ,Float:pz;
		GetPlayerPos(targetid,px,py,pz);
		new date[3], time[3], regdate[3], regtime[3];
		gmtime(PlayerInfo[targetid][LoginDate], date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
		gmtime(PlayerInfo[targetid][RegDate], regdate[2], regdate[1], regdate[0], regtime[0], regtime[1], regtime[2], SERVER_GMT);
	    if(PlayerInfo[playerid][AdminLevel] > PlayerInfo[targetid][AdminLevel])
	    {
	        f(str,"{FFFFFF}IP сейчас: {FFFF00}%s\n", PlayerInfo[targetid][GetIP]);
	        strcat(sctring,str);
	        if(strlen(PlayerInfo[targetid][RegIP]))
			{
				f(str,"{FFFFFF}IP при регистрации: {FFFF00}%s\n", PlayerInfo[targetid][RegIP]);
			} else {
				f(str,"{FFFFFF}IP при регистрации: {FFFF00}Неизвестно\n");
			}
	        strcat(sctring,str);
	        f(str,"{FFFFFF}IP при последнем посещении: {FFFF00}%s\n", PlayerInfo[targetid][LastIP]);
	        strcat(sctring,str);
	        if(strlen(PlayerInfo[targetid][GetCountry]))
	        {
		        f(str,"{FFFFFF}Страна: {FFFF00}%s\n", PlayerInfo[targetid][GetCountry]);
		        strcat(sctring,str);
	        }
	        if(strlen(PlayerInfo[targetid][GetRegion]))
	        {
		        f(str,"{FFFFFF}Регион: {FFFF00}%s\n",PlayerInfo[targetid][GetRegion]);
		        strcat(sctring,str);
	        }
	        if(strlen(PlayerInfo[targetid][GetCity]))
	        {
		        f(str,"{FFFFFF}Город: {FFFF00}%s\n", PlayerInfo[targetid][GetCity]);
		        strcat(sctring,str);
	        }
		}
		if(PlayerInfo[targetid][TotalDate] > 3600)
		{
			f(str,"{FFFFFF}Время в игре: {FFFF00}%d ч\n", PlayerInfo[targetid][TotalDate]/3600);
        } else {
	        f(str,"{FFFFFF}Время в игре: {FFFF00}%d м\n", PlayerInfo[targetid][TotalDate]/60);
        }
        strcat(sctring,str);
        f(str,"{FFFFFF}Потеря данных: {FFFF00}%.1f%\n", NetStats_PacketLossPercent(targetid));
        strcat(sctring,str);
        f(str,"{FFFFFF}Дата регистрации: {FFFF00}%02d/%02d/%02d %02d:%02d:%02d\n", regdate[0], regdate[1], regdate[2], regtime[0], regtime[1], regtime[2]);
        strcat(sctring,str);
        f(str,"{FFFFFF}FPS - Кадров в секунду: {FFFF00}%d\n", PlayerInfo[targetid][FPS]);
        strcat(sctring,str);
        f(str,"{FFFFFF}Последний вход: {FFFF00}%02d/%02d/%02d %02d:%02d:%02d\n",date[0], date[1], date[2], time[0], time[1], time[2]);
        strcat(sctring,str);
        f(str,"{FFFFFF}Интерьер: {FFFF00}%d\n", GetPlayerInterior(targetid));
        strcat(sctring,str);
		f(str,"{FFFFFF}Мир: {FFFF00}%d\n", GetPlayerVirtualWorld(targetid));
        strcat(sctring,str);
        f(str,"{FFFFFF}Позиция: X:{FFFF00} %f {FFFFFF}Y:{FFFF00} %f {FFFFFF}Z:{FFFF00} %f\n\n", px, py, pz);
        strcat(sctring,str);
        strcat(sctring, "{FFFF00}Наказания:\n");
        f(str,"{FFFFFF}Кол-во заглушек: {FFFF00}%d\n", PlayerInfo[targetid][MuteCount]);
        strcat(sctring,str);
		strcat(sctring, "{FFFFFF}При автоматической заглушке заглушит на: ");
		if(PlayerInfo[targetid][MuteCount] == 0)
		{
			strcat(sctring, "{FFFF00}выдаст предупреждение\n\n");
		} else {
			format(str,sizeof(str),"{FFFF00}%s\n\n", MTF(GetNextMuteTime(PlayerInfo[targetid][MuteCount])));
			strcat(sctring, str);
		}
        strcat(sctring, "{FFFF00}Последние 10 действий игрока:\n");
        if(strcmp(PlayerInfo[targetid][Event1]," ",true))
        {
	        f(str,"{FFFFFF}1. %s\n", PlayerInfo[targetid][Event1]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event2]," ",true))
        {
	        f(str,"{FFFFFF}2. %s\n", PlayerInfo[targetid][Event2]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event3]," ",true))
        {
	        f(str,"{FFFFFF}3. %s\n", PlayerInfo[targetid][Event3]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event4]," ",true))
        {
	        f(str,"{FFFFFF}4. %s\n", PlayerInfo[targetid][Event4]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event5]," ",true))
        {
	        f(str,"{FFFFFF}5. %s\n", PlayerInfo[targetid][Event5]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event6]," ",true))
        {
	        f(str,"{FFFFFF}6. %s\n", PlayerInfo[targetid][Event6]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event7]," ",true))
        {
	        f(str,"{FFFFFF}7. %s\n", PlayerInfo[targetid][Event7]);
	        strcat(sctring,str);
		}
		else if(strcmp(PlayerInfo[targetid][Event8]," ",true))
        {
	        f(str,"{FFFFFF}8. %s\n", PlayerInfo[targetid][Event8]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event9]," ",true))
        {
	        f(str,"{FFFFFF}9. %s\n", PlayerInfo[targetid][Event9]);
	        strcat(sctring,str);
        }
        else if(strcmp(PlayerInfo[targetid][Event10]," ",true))
        {
	        f(str,"{FFFFFF}10. %s\n", PlayerInfo[targetid][Event10]);
	        strcat(sctring,str);
        }
        else
        {
	        strcat(sctring,"{FFFFFF}Отсутствуют");
        }
	    f(contents,"{"#COLOR_DIALOG_MENU"}Дополнительная информация %s [%d]",PlayerInfo[targetid][Name],targetid);
	    ShowPlayerDialogEx(playerid,"pStats",DIALOG_STYLE_MSGBOX,contents,sctring,"Выход","Назад");
	}
}

stock ShowClanStat(playerid, clan, dialogname[])
{
	new sctring[1024], str[512];
    f(str,"{"#cWHITE"}Название: {"#cYELLOW"}%s\n", ClanInfo[clan][cName]);
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Тег: {"#cYELLOW"}%s\n", ClanInfo[clan][cTag]);
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Номер клана: {"#cYELLOW"}%d\n\n", clan);
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Банк: {"#cLIGHTGREEN"}$%d/%d\n", ClanInfo[clan][cBank], ClanInfo[clan][cLevel]*1000000);
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Уровень: {"#cYELLOW"}%d\n", ClanInfo[clan][cLevel]);
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Захваченых зон: {"#cYELLOW"}%d/%d\n", GetClanZone(clan), MaxZonesClan(clan));
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Игроков в клане: {"#cYELLOW"}%d/%d\n", ClanInfo[clan][cPlayers], MaxPlayerClan(clan));
    strcat(sctring,str);
    f(str,"{"#cWHITE"}Минимальный уровень для вступление в клан: {"#cYELLOW"}%d\n\n",(ClanInfo[clan][cLevel]-1)*2+50);
    strcat(sctring,str);
    
	for (new i = 0; i < MAX_CLAN_MEMBERS; i++)
	{
		if(strcmp(ClanMember[clan][i][cmName], " ", true))
		{
			new id = GetPlayerID_Name(ClanMember[clan][i][cmName]);
		    if(!IsPlayerConnected(id))
		    {
			    format(str,sizeof(str),"{FFFFFF}%s - %s\n", ClanMember[clan][i][cmName], GetRankName(ClanMember[clan][i][cmRank]));
		    } else{
			    format(str,sizeof(str),"{00FF00}%s - %s [%d]\n", ClanMember[clan][i][cmName], GetRankName(ClanMember[clan][i][cmRank]), id);
			    if(IsPlayerPaused(id))
	            {
		            format(str,sizeof(str),"{00FFFF}%s - %s [%d]\n", ClanMember[clan][i][cmName], GetRankName(ClanMember[clan][i][cmRank]), id);
	            }
	        }
	        strcat(sctring,str);
		}
	}
    strcat(sctring,"\n{FFFFFF}Обозначение цветов: Не в сети, {00FFFF}Отошёл, {00FF00}В сети");
    ShowPlayerDialogEx(playerid,dialogname,DIALOG_STYLE_MSGBOX,"{"#COLOR_DIALOG_MENU"}Информация о клане",sctring,"Выход","Назад");
}

DIALOG:ClanStats(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowClanMenu(playerid, d_ClanMenu);
	return 1;
}

DIALOG:ClanStats2(playerid, response, listitem, inputtext[])
{
	if(!response) return ClanList(playerid, GetPVarInt(playerid, "ClansList"));
	return 1;
}

DIALOG:ClanStats3(playerid, response, listitem, inputtext[])
{
	if(!response) return ClanRating(playerid);
	return 1;
}

stock ShowNews(playerid)
{
	if(NewsInfo[nActive] == 0)
	{
		new sctring[2048], str[512], coren[128], button[50];

		if(PlayerInfo[playerid][NewsTime] > 0)
		{
			format(coren,sizeof(coren),"{"#COLOR_DIALOG_MENU"}Новости, почитай ещё {00FF00}%d {FF0000}сек",PlayerInfo[playerid][NewsTime]);
			format(button,sizeof(button),"Не вперёд");
		}
		else
		{
			format(coren,sizeof(coren),"{"#COLOR_DIALOG_MENU"}Новости");
			format(button,sizeof(button),"Выход");
		}

		format(str,sizeof(str),"{FF0000}Обновление GTA Online {FFFFFF} | {FF0000} Версия сервера: %s {FFFFFF} | {FF0000} Дата выпуска: %s\n\n",NewsInfo[nVersion],NewsInfo[nDate]);
		strcat(sctring,str);
		if(strcmp(NewsInfo[nAdded], " ", true))
		{
			format(str,sizeof(str),"{00FFFF}Добавлено:\n{FFFFFF}%s\n\n",NewsInfo[nAdded]);
			strcat(sctring,str);
		}
		if(strcmp(NewsInfo[nFixed], " ", true))
		{
			format(str,sizeof(str),"{00FFFF}Исправлено:\n{FFFFFF}%s\n\n",NewsInfo[nFixed]);
			strcat(sctring,str);
		}
		strcat(sctring,"{FFFFFF}Новости предыдущих версий сервера можно посмотреть на нашем сайте");
		ShowPlayerDialogEx(playerid,"mn_ReadNews_input",DIALOG_STYLE_MSGBOX,coren,sctring,button,"Назад");
	}
	return 1;
}

DIALOG:mn_ReadNews_input(playerid, response, listitem, inputtext[])
{
	if(PlayerInfo[playerid][NewsTime] > 0) return ShowNews(playerid);
	if(!response) return ShowMenu(playerid, d_Info);
	return 1;
}

stock ClearAccount(playerid)
{
    PlayerInfo[playerid][ID] = 0;
    PlayerInfo[playerid][AdminLevel] = 0;
    PlayerInfo[playerid][AdminDate] = 0;
    PlayerInfo[playerid][Vip] = 0;
    PlayerInfo[playerid][VipTime] = 0;
    PlayerInfo[playerid][Skin] = 0;
    PlayerInfo[playerid][Money] = 0;
    PlayerInfo[playerid][Bank] = 0;
    PlayerInfo[playerid][Level] = 0;
    PlayerInfo[playerid][Exp] = 0;
    PlayerInfo[playerid][Points] = 0;
    PlayerInfo[playerid][Kills] = 0;
    PlayerInfo[playerid][Death] = 0;
    PlayerInfo[playerid][MuteTime] = 0;
    PlayerInfo[playerid][MuteCount] = 0;
    PlayerInfo[playerid][MuteCMD] = 0;
    PlayerInfo[playerid][JailTime] = 0;
    PlayerInfo[playerid][dataPos] = 0;
    PlayerInfo[playerid][dataPosX] = 0.0;
    PlayerInfo[playerid][dataPosY] = 0.0;
    PlayerInfo[playerid][dataPosZ] = 0.0;
    PlayerInfo[playerid][dataInt] = 0;
    PlayerInfo[playerid][dataWorld] = 0;
    PlayerInfo[playerid][LoginDate] = gettime();
    PlayerInfo[playerid][TotalDate] = 0;
    PlayerInfo[playerid][SessionTime] = gettime();
    PlayerInfo[playerid][Health] = 0.0;
	PlayerInfo[playerid][Armour] = 0.0;
	for(new i = 0; i < 11; i++)
	{
		PlayerInfo[playerid][Weapon][i] = 0;
		PlayerInfo[playerid][Ammo][i] = 0;
	}
    format(PlayerInfo[playerid][LastIP],32," "," ");
    format(PlayerInfo[playerid][LastGpci],64," "," ");
    format(PlayerInfo[playerid][Code],MAX_PLAYER_PASSWORD," "," ");
    format(PlayerInfo[playerid][Email],MAX_PLAYER_EMAIL," "," ");
    PlayerInfo[playerid][CheckEmail] = 0;
    PlayerInfo[playerid][EmailKey] = 0;
    PlayerInfo[playerid][Clan] = 0;
    PlayerInfo[playerid][ClanRank] = 0;
    format(PlayerInfo[playerid][ColorNick],16,"FFFFFF","FFFFFF");
    format(PlayerInfo[playerid][ColorChat],16,"FFFFFF","FFFFFF");
    PlayerInfo[playerid][House] = INVALID_HOUSE_ID;
	PlayerInfo[playerid][Renter] = INVALID_HOUSE_ID;
	PlayerInfo[playerid][GodMode] = 0;
	PlayerInfo[playerid][Restart] = 0;
	PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
	PlayerInfo[playerid][ReferalID] = 0;
	PlayerInfo[playerid][BankComission] = 1.00;
	PlayerInfo[playerid][ReferalID] = 0;
	PlayerInfo[playerid][ReferalBonus] = 0;
	PlayerInfo[playerid][WorldTime] = 24;
	PlayerInfo[playerid][Weather] = 16;
	PlayerInfo[playerid][FightStyle] = 0;
	PlayerInfo[playerid][RegenHealth] = 0;
	PlayerInfo[playerid][RegenArmour] = 0;
	PlayerInfo[playerid][RegenOn] = 0;
	PlayerInfo[playerid][InviteClan] = 0;
	PlayerInfo[playerid][GangZoneOn] = 0;
	PlayerInfo[playerid][DonateCount] = 0.0;
	PlayerInfo[playerid][EarsPM] = 0;
	PlayerInfo[playerid][EarsRCHAT] = 0;
	PlayerInfo[playerid][EarsCMD] = 0;
	for(new i = 0; i < 6; i++) PlayerInfo[playerid][ObjectID][i] = 0;
	PlayerInfo[playerid][carGUID] = INVALID_VEHICLE_ID;
	PlayerInfo[playerid][carModel] = 0;
	PlayerInfo[playerid][carColor][0] = 0;
	PlayerInfo[playerid][carColor][1] = 0;
	PlayerInfo[playerid][carPaintjob] = 0;
	format(PlayerInfo[playerid][carPlate], 32, "Server");
	for (new i = 0; i < MAX_VEHICLE_COMPONENTS; i++)
	{
		PlayerInfo[playerid][carComponent][i] = 0;
	}
	PlayerInfo[playerid][carObjID][0] = -1;
	PlayerInfo[playerid][carObjID][1] = -1;
	PlayerInfo[playerid][carObjID][2] = -1;
	PlayerInfo[playerid][carObjID][3] = -1;
	PlayerInfo[playerid][carObject][0] = 0;
	PlayerInfo[playerid][carObject][1] = 0;
	format(PlayerInfo[playerid][carObjects], 20, "");
	//
	PlayerInfo[playerid][Logged] = 0;
	format(PlayerInfo[playerid][Event1], 64, "");
	format(PlayerInfo[playerid][Event2], 64, "");
	format(PlayerInfo[playerid][Event3], 64, "");
	format(PlayerInfo[playerid][Event4], 64, "");
	format(PlayerInfo[playerid][Event5], 64, "");
	format(PlayerInfo[playerid][Event6], 64, "");
	format(PlayerInfo[playerid][Event7], 64, "");
	format(PlayerInfo[playerid][Event8], 64, "");
	format(PlayerInfo[playerid][Event9], 64, "");
	format(PlayerInfo[playerid][Event10], 64, "");
	PlayerInfo[playerid][SpecOn] = 0;
	PlayerInfo[playerid][SpecUP] = 0;
	PlayerInfo[playerid][InvitedClan] = 0;
	PlayerInfo[playerid][OrderVeh] = INVALID_VEHICLE_ID;
	PlayerInfo[playerid][CarLock] = INVALID_VEHICLE_ID;
	PlayerInfo[playerid][FloodPickup] = 0;
	for(new i;i<=GetPlayerPoolSize();i++)
	{
		PlayerInfo[playerid][IgnoredPM][i] = 0;
	}
	PlayerInfo[playerid][NewsTime] = 0;
	PlayerInfo[playerid][RegenHPTime] = 0;
	PlayerInfo[playerid][RegenARTime] = 0;
	PlayerInfo[playerid][GangZone] = -1;
	PlayerInfo[playerid][KillSeries] = 0;
	PlayerInfo[playerid][Dialog] = 0;
	PlayerInfo[playerid][DialogTime] = 0;
	PlayerInfo[playerid][TimeWage] = gettime()+3600;
	PlayerInfo[playerid][AntiSK] = 0;
	PlayerInfo[playerid][LastFight] = gettime();
	PlayerInfo[playerid][GodModeTime] = 0;
	PlayerInfo[playerid][MapTP] = 0;
    PlayerInfo[playerid][MapTPTry] = 0;
	PlayerInfo[playerid][MapTPx] = 0.0;
	PlayerInfo[playerid][MapTPy] = 0.0;
	PlayerInfo[playerid][InDM] = INVALID_DEATHMATCH_ID;
	PlayerInfo[playerid][FragsDM] = 0;
	PlayerInfo[playerid][TimerDM] = -1;
	
	noclipdata[playerid][cameramode] 	= CAMERA_MODE_NONE;
	noclipdata[playerid][lrold]	   	 	= 0;
	noclipdata[playerid][udold]   		= 0;
	noclipdata[playerid][mode]   		= 0;
	noclipdata[playerid][lastmove]   	= 0;
	noclipdata[playerid][accelmul]   	= 0.0;
	return 1;
}

stock SavePlayerTimeData(playerid)
{
	//Сохранение позиции, здоровья и брони, последний вход на сервер
	if(PlayerInfo[playerid][Logged] && IsPlayerConnected(playerid))
	{
		new Float:xre, Float:yre, Float:zre;
		new Float:health, Float: armour;
		GetPlayerPos(playerid,xre,yre,zre);
		GetPlayerHealth(playerid, health);
		GetPlayerArmour(playerid, armour);
		if(!IsPlayerGodMode(playerid))
		{
			mysql_player_update_float(playerid, "Health", health);
		}
		mysql_player_update_float(playerid, "Armour", armour);
		mysql_player_update_float(playerid, "dataPosX", xre);
		mysql_player_update_float(playerid, "dataPosY", yre);
		mysql_player_update_float(playerid, "dataPosZ", zre);
		mysql_player_update_int(playerid, "dataInt", GetPlayerInterior(playerid));
		mysql_player_update_int(playerid, "dataWorld", GetPlayerVirtualWorld(playerid));
		mysql_player_update_int(playerid, "HouseEnter", PlayerInfo[playerid][HouseEnter]);
		mysql_player_update_int(playerid, "LoginDate", gettime());
		mysql_player_update_int(playerid, "TotalDate", PlayerInfo[playerid][TotalDate]+(gettime()-PlayerInfo[playerid][SessionTime]));
		if(PlayerInfo[playerid][Clan])
		{
		    Clan_UpdateStamp(PlayerInfo[playerid][ID], PlayerInfo[playerid][Clan]);
	    }
	    mysql_player_update_int(playerid, "MuteTime", PlayerInfo[playerid][MuteTime]);
	    mysql_player_update_int(playerid, "MuteCount", PlayerInfo[playerid][MuteCount]);
	    mysql_player_update_int(playerid, "MuteCMD", PlayerInfo[playerid][MuteCMD]);
	    mysql_player_update_int(playerid, "JailTime", PlayerInfo[playerid][JailTime]);
	    mysql_player_update_str(playerid, "LastIP", PlayerInfo[playerid][GetIP]);
	    mysql_player_update_str(playerid, "LastGpci", PlayerInfo[playerid][GetGpci]);
	}
    return 1;
}

stock SavePlayerWeapon(playerid)
{
	if(PlayerInfo[playerid][Logged] && IsPlayerConnected(playerid))
	{
		new saveweapons[128];
	    new saveammos[128];
	    for(new i = 0; i < 11; i++)
	    {
		    format(saveweapons, sizeof(saveweapons), "%s%d ", saveweapons, PlayerInfo[playerid][Weapon][i]);
		    format(saveammos, sizeof(saveammos), "%s%d ", saveammos, PlayerInfo[playerid][Ammo][i]);
		}
		mysql_player_update_str(playerid, "Weapons", saveweapons);
		mysql_player_update_str(playerid, "Ammos", saveammos);
	}
	return 1;
}

stock SavePlayerObject(playerid)
{
	if(PlayerInfo[playerid][Logged] && IsPlayerConnected(playerid))
	{
		new saveplobject[64];
		for (new i = 0; i < 6; i++)
		{
			format(saveplobject, sizeof(saveplobject), "%s%d ", saveplobject, PlayerInfo[playerid][ObjectID][i]);
		}
		mysql_player_update_str(playerid, "Objects", saveplobject);
	}
	return 1;
}

stock SaveCarObject(playerid)
{
	if(PlayerInfo[playerid][Logged] && IsPlayerConnected(playerid))
	{
		new savecarobject[64];
		for (new i = 0; i < 2; i++)
		{
			format(savecarobject, sizeof(savecarobject), "%s%d ", savecarobject, PlayerInfo[playerid][carObject][i]);
		}
		mysql_player_update_str(playerid, "carObjects", savecarobject);
	}
	return 1;
}

stock GetNextMuteTime(mc)
{
	new mtime;
	if(mc < 5) {mtime = mc*300;}
	else if(mc < 6) {mtime = mc*900;}
	else if(mc < 10) {mtime = mc*1200;}
	else if(mc < 24) {mtime = mc*3600;}
	else if(mc == 24) {mtime = 1*86400;}
	else if(mc == 25) {mtime = 2*86400;}
	else if(mc == 26) {mtime = 3*86400;}
	else if(mc == 27) {mtime = 4*86400;}
	else if(mc == 28) {mtime = 5*86400;}
	else if(mc == 29) {mtime = 6*86400;}
	else {mtime = 7*86400;}
	return mtime;
}

forward Timer_Server(playerid);
public Timer_Server(playerid)
{
	new hour, minute, second;
	gettime(hour, minute, second);
    if(hour == 06 && minute == 00 && second == 00)
    {
		new query[128];
		new tablename[32];
		new year, month,day;
		getdate(year, month, day);
		format(tablename, sizeof(tablename),"accounts_backup_%02d%02d%02d", year, month, day);
	    format(query,sizeof(query),"CREATE TABLE `%s` LIKE `accounts`", tablename);
		mysql_tquery(mysqlConnection, query, "", "");
		format(query,sizeof(query),"INSERT `%s` SELECT * FROM `accounts`", tablename);
		mysql_tquery(mysqlConnection, query, "", "");
		StartVayp();
    }
    if(GetTickCount() - weathertime > 60*60000)
    {
	    weatherid = weatherarray[random(sizeof(weatherarray))];
	    weathertime = GetTickCount();
    }
	return 1;
}

forward Timer_Player(playerid);
public Timer_Player(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][Logged] == 1)
    {
		new Float:health, Float:armour;
		GetPlayerHealth(playerid, health);
	    GetPlayerArmour(playerid, armour);
	    new hour,minute,second;
	    gettime(hour,minute,second);
	    if(PlayerInfo[playerid][Weather] == 16)
	    {
		    SetPlayerWeather(playerid, weatherarray[weatherid]);
	    } else {
		    SetPlayerWeather(playerid, weatherarray[PlayerInfo[playerid][Weather]]);
	    }
	    if(PlayerInfo[playerid][WorldTime] == 24)
	    {
		    SetPlayerTime(playerid, hour, minute);
	    } else {
		    SetPlayerTime(playerid, PlayerInfo[playerid][WorldTime], 0);
	    }
	    
        if(PlayerInfo[playerid][MuteTime])
	    {
	        PlayerInfo[playerid][MuteTime]--;
	        if(!PlayerInfo[playerid][MuteTime])
			{
				MuteIP(playerid, PlayerInfo[playerid][GetIP], 0);
				SendClientMessage(playerid,CLIGHTGREEN,"Вы больше не заглушены");
			}
	    }
	    if(PlayerInfo[playerid][MuteCMD])
	    {
	        PlayerInfo[playerid][MuteCMD]--;
	        if(!PlayerInfo[playerid][MuteCMD]) SendClientMessage(playerid,CLIGHTGREEN,"Ты можешь использовать меню и команды");
	    }
	    if(PlayerInfo[playerid][JailTime])
	    {
			new jailstr[128];
	        format(jailstr, sizeof(jailstr), "Осталось сидеть: %s", JTF(PlayerInfo[playerid][JailTime]));
	        PlayerInfo[playerid][JailTime]--;
		    GameTextForPlayer(playerid, jailstr, 1100, 5);
	        if(!PlayerInfo[playerid][JailTime])
	        {
		        PlayerInfo[playerid][JailTime] = 0;
	        	SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2334.5940,2453.5303,14.9688);
				SetPlayerFacingAngle(playerid,87.7940);
	        }
	    }
	    if(PlayerInfo[playerid][GodModeTime])
	    {
		    PlayerInfo[playerid][GodModeTime] --;
		    if(!PlayerInfo[playerid][GodModeTime])
		    {
			    if(!PlayerInfo[playerid][GodMode])
				{
					PlayerInfo[playerid][GodMode] = 1;
					SendClientMessage(playerid,CRED,"Ты стал бессмертным, оружия изъято, наслаждайся игрой :)");
					ResetPlayerWeapons(playerid);
				}else{
					PlayerInfo[playerid][GodMode] = 0;
					SetPlayerHealth(playerid, 100);
					SendClientMessage(playerid,CRED,"Ты стал смертным, оружие возвращено");
					GiveSpawnWeapons(playerid);
				}
				mysql_player_update_int(playerid, "GodMode", PlayerInfo[playerid][GodMode]);
			    PlayerInfo[playerid][GodModeTime] = 0;
		    }
	    }
	    if(PlayerInfo[playerid][NewsTime] > 0)
	    {
		    PlayerInfo[playerid][NewsTime] --;
		    ShowNews(playerid);
	    }
	    if(!IsPlayerInRangeOfPoint(playerid, 1.5, PlayerInfo[playerid][PickupPos][0],PlayerInfo[playerid][PickupPos][1],PlayerInfo[playerid][PickupPos][2]))
		{
			PlayerInfo[playerid][FloodPickup] --;
		}
    	new nxtlevel = PlayerInfo[playerid][Level];
		new expamount = nxtlevel*110;
		new expresid = PlayerInfo[playerid][Exp]-expamount;
		if(PlayerInfo[playerid][Exp] >= expamount)
		{
			SetPlayerLevel(playerid, PlayerInfo[playerid][Level]+1);
			PlayerInfo[playerid][Exp] = expresid;
			SendClientMessage(playerid,CRED,"Твой уровень повысился");
			mysql_player_update_int(playerid, "Exp", PlayerInfo[playerid][Exp]);
		}
	    new money = GetPlayerMoney(playerid);
	    if(PlayerInfo[playerid][Money] > money)
	    {
	        ResetPlayerMoney(playerid);
	        GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
	    }
	    else if(PlayerInfo[playerid][Money] < money)
	    {
	        ResetPlayerMoney(playerid);
	        GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
	    }
	   	if(IsPlayerPaused(playerid))
	   	{
		   	new afkmsg[128];
		   	format(afkmsg,sizeof(afkmsg),"{%s}Пауза %s",PlayerInfo[playerid][ColorNick],JTF(GetPlayerPausedTime(playerid)/1000));
	      	SetPlayerChatBubble(playerid,afkmsg,GetPlayerColor(playerid),10.0,1600);
	   	}
	   	if(PlayerInfo[playerid][Dialog] == 1)
	   	{
		   	PlayerInfo[playerid][DialogTime] += 1;
	   	}
	   	else if(PlayerInfo[playerid][Dialog] == 0 && PlayerInfo[playerid][DialogTime])
	   	{
		   	PlayerInfo[playerid][DialogTime] = 0;
	   	}
	   	if(PlayerInfo[playerid][AntiSK])
	    {
	        PlayerInfo[playerid][AntiSK]--;
	        if(!PlayerInfo[playerid][AntiSK]) OffAntiSpawnKill(playerid);
	    }
	   	if(gettime() >= PlayerInfo[playerid][TimeWage])
		{
			new salarystr[128];
			if(PlayerInfo[playerid][BankComission] < 3.00)
			{
				PlayerInfo[playerid][BankComission] += 0.25;
				if(PlayerInfo[playerid][Vip])
				{
					PlayerInfo[playerid][BankComission] += 0.25;
				}
			}
			new comission = floatround(floatmul(PlayerInfo[playerid][Bank], PlayerInfo[playerid][BankComission]), floatround_floor);
			new salary = (PlayerInfo[playerid][Bank] - comission)/-100;
			if(salary >= (GetLimitBank(playerid) - comission)/-100)
			{
				SetPlayerMoneyBank(playerid,PlayerInfo[playerid][Bank]+salary);
				SetPlayerPoints(playerid,PlayerInfo[playerid][Points]+1);
			}
			
			format(salarystr,sizeof(salarystr),"Процентная ставка: %.2f",PlayerInfo[playerid][BankComission]);
			SendClientMessage(playerid,0x00FF00AA,salarystr);
			format(salarystr,sizeof(salarystr),"С ЗП всего накручено $%d, 1 очко апгрейда и 5 опыта", salary, 1);
			SendClientMessage(playerid,0x00FF00AA,salarystr);
			SendClientMessage(playerid,0x00FF00AA,"ВНИМАНИЕ!!! Чем больше ты тусишь на сервере {FF0000}(даже AFK){00FF00}, тем больше процетная ставка(опыта, денег на руках и в банке)");
			PlayerInfo[playerid][TimeWage] = gettime()+3600;
			
			if(PlayerInfo[playerid][Money] >= GetLimitMoney(playerid))
		   	{
			   	new limitmoney = PlayerInfo[playerid][Money] - GetLimitMoney(playerid);
			   	SetPlayerMoney(playerid, PlayerInfo[playerid][Money]-limitmoney);
			   	SetPlayerMoneyBank(playerid, PlayerInfo[playerid][Bank]+limitmoney);
			}
			if(PlayerInfo[playerid][Bank] >= GetLimitBank(playerid))
		   	{
			   	new limitbank = PlayerInfo[playerid][Bank] - GetLimitBank(playerid);
			   	if(PlayerInfo[playerid][Clan])
	            {
	               new clanmoney = PlayerInfo[playerid][Clan];
                   new expclan = ClanInfo[clanmoney][cLevel]*1000000;
				   if(ClanInfo[clanmoney][cBank]+limitbank >= expclan)
				   {
					   SetPlayerMoneyBank(playerid, PlayerInfo[playerid][Bank]-limitbank);
					   ClanInfo[clanmoney][cBank] += limitbank;
					   mysql_clan_update_int(clanmoney, "cBank",ClanInfo[clanmoney][cBank]);
				   }
	            }
		   	}
		}
		if(PlayerInfo[playerid][Vip] == VIP_NOT_FOREVER && gettime() >= PlayerInfo[playerid][VipTime])
		{
			PlayerInfo[playerid][Vip] = 0;
			PlayerInfo[playerid][VipTime] = 0;
			SendClientMessage(playerid,0xFF0000AA,"Срок действия VIP истечен");
			mysql_player_update_int(playerid, "Vip", PlayerInfo[playerid][Vip]);
			mysql_player_update_int(playerid, "VipTime", PlayerInfo[playerid][VipTime]);
		}
        if(PlayerInfo[playerid][SpecOn] == 1)
        {
	        new specid = GetPVarInt(playerid, "SpecID");
	        new vehicleid = GetPlayerVehicleID(specid);
	        new recon;
			if(GetPlayerInterior(playerid) != GetPlayerInterior(specid))
			{
				SetPlayerInterior(playerid,GetPlayerInterior(specid));
				recon = 1;
			}
			if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(specid))
			{
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specid));
				recon = 1;
			}
	        if(IsPlayerInAnyVehicle(specid) && PlayerInfo[playerid][SpecUP] == 1 || recon)
			{
				PlayerSpectateVehicle(playerid,vehicleid);
				PlayerInfo[playerid][SpecUP] = 0;
			}
			if(!IsPlayerInAnyVehicle(specid) && PlayerInfo[playerid][SpecUP] == 0 || recon)
			{
				PlayerSpectatePlayer(playerid,specid);
				PlayerInfo[playerid][SpecUP] = 1;
			}
	        if(!IsPlayerConnected(specid))
			{
				SpecPlayerOff(playerid);
			}
        }
		if(IsPlayerGodMode(playerid))
		{
			if(health < 10000)
			{
		        SetPlayerHealth(playerid,100000);
	        }
	        if(IsPlayerInAnyVehicle(playerid) && PlayerInfo[playerid][GodMode] == 1)
			{
			    new Float:VehHP;
			    GetVehicleHealth(GetPlayerVehicleID(playerid), VehHP);
                if(VehHP < 10000) SetVehicleHealth(GetPlayerVehicleID(playerid), 100000.0);
			}
        }
        if (!IsPlayerGodMode(playerid) &&
		GetPlayerState(playerid) != PLAYER_STATE_NONE &&
	    GetPlayerState(playerid) != PLAYER_STATE_WASTED &&
	    GetPlayerState(playerid) != PLAYER_STATE_SPAWNED &&
	    GetPlayerState(playerid) != PLAYER_STATE_SPECTATING &&
		!IsPlayerPaused(playerid) && !PlayerInfo[playerid][RegenOn])
		{
	        if(PlayerInfo[playerid][RegenHealth] && GetTickCount() >= PlayerInfo[playerid][RegenHPTime])
	        {
		        if(PlayerInfo[playerid][RegenHealth] >= 1 && PlayerInfo[playerid][RegenHealth] <= 5)
				{
					PlayerInfo[playerid][RegenHPTime] = GetTickCount()+5000;
				}
				if(PlayerInfo[playerid][RegenHealth] > 6)
				{
					PlayerInfo[playerid][RegenHPTime] = GetTickCount()+2000;
				}
		        if (health < 100.0)
				{
					if(PlayerInfo[playerid][RegenHealth] >= 1 && PlayerInfo[playerid][RegenHealth] <= 5)
					{
						SetPlayerHealth(playerid, health + PlayerInfo[playerid][RegenHealth]);
					}
					if(PlayerInfo[playerid][RegenHealth] == 6)
					{
						SetPlayerHealth(playerid, health + 1);
					}
					if(PlayerInfo[playerid][RegenHealth] == 7)
					{
						SetPlayerHealth(playerid, health + 2);
					}
					if(PlayerInfo[playerid][RegenHealth] == 8)
					{
						SetPlayerHealth(playerid, health + 3);
					}
				}
	        }
	        if(PlayerInfo[playerid][RegenArmour] && PlayerInfo[playerid][RegenARTime] < GetTickCount())
	        {
		        if(PlayerInfo[playerid][RegenArmour] >= 1 && PlayerInfo[playerid][RegenArmour] <= 5)
		        {
			        PlayerInfo[playerid][RegenARTime] = GetTickCount()+5000;
		        }
		        if(PlayerInfo[playerid][RegenArmour] > 6)
		        {
			        PlayerInfo[playerid][RegenARTime] = GetTickCount()+2000;
		        }
		        if (armour < 100.0)
				{
					if(PlayerInfo[playerid][RegenArmour] >= 1 && PlayerInfo[playerid][RegenArmour] <= 5)
			        {
						SetPlayerArmour(playerid, armour + PlayerInfo[playerid][RegenArmour]);
					}
					if(PlayerInfo[playerid][RegenArmour] == 6)
			        {
			        	SetPlayerArmour(playerid, armour + 1);
			        }
			        if(PlayerInfo[playerid][RegenArmour] == 7)
			        {
			        	SetPlayerArmour(playerid, armour + 2);
			        }
			        if(PlayerInfo[playerid][RegenArmour] == 8)
			        {
			        	SetPlayerArmour(playerid, armour + 3);
			        }
				}
	        }
        }
        if(health <= 100)
        {
			new str[64];
	        format(str, sizeof(str), "%.0f", health);
	  	    PlayerTextDrawSetString(playerid, PlayerInfo[playerid][HPinfo], str);
	  	    PlayerTextDrawShow(playerid, PlayerInfo[playerid][HPinfo]);
  	    } else {
	  	    if(health >= 100)
	  	    {
		  	    new str[64];
		        format(str, sizeof(str), "%.0f", health);
		  	    PlayerTextDrawSetString(playerid, PlayerInfo[playerid][HPinfo], str);
		  	    PlayerTextDrawShow(playerid, PlayerInfo[playerid][HPinfo]);
			}else{
	  	        PlayerTextDrawHide(playerid, PlayerInfo[playerid][HPinfo]);
  	        }
  	    }
  	    if(armour != 0)
	    {
		    new str[64];
	        format(str, sizeof(str), "%.0f", armour);
		    PlayerTextDrawSetString(playerid, PlayerInfo[playerid][ARinfo], str);
		    PlayerTextDrawShow(playerid, PlayerInfo[playerid][ARinfo]);
	    } else {
		    if(armour >= 100)
		    {
			    new str[64];
		        format(str, sizeof(str), "%.0f", armour);
			    PlayerTextDrawSetString(playerid, PlayerInfo[playerid][ARinfo], str);
			    PlayerTextDrawShow(playerid, PlayerInfo[playerid][ARinfo]);
		    } else {
		        PlayerTextDrawHide(playerid, PlayerInfo[playerid][ARinfo]);
	        }
	    }
	    if(GetPVarInt(playerid, "GetExpTime") < gettime())
	    {
		    new mistr[128];
			format(mistr, sizeof(mistr), "УРОВЕНЬ:%d ~n~ ОПЫТ:%d/%d ~n~ ОА:%d", PlayerInfo[playerid][Level], PlayerInfo[playerid][Exp], expamount, PlayerInfo[playerid][Points]);
	        TextDrawSetString(PlayerInfo[playerid][MainInfo],mistr);
	        TextDrawBackgroundColor(PlayerInfo[playerid][MainInfo],0x00358721);
	        TextDrawShowForPlayer(playerid, PlayerInfo[playerid][MainInfo]);
        }
		/*new listr[512];
		new null[5] = "____";
		format(listr, sizeof(listr), "~w~ONLINE:1 ~w~%s___ ~w~%s___ ~w~%s___ ~w~%s___ ~w~%s___ ~w~%s___  ~n~ ~w~%s___ ~w~%s___ ~w~%s___ ~w~%s___ ~w~%s___ ~w~%s___ ",
		null, null, null, null, null, null, null, null, null, null, null, null);*/
		TextDrawSetString(PlayerInfo[playerid][LifeInfo],"___  ~n~  ___");
		TextDrawShowForPlayer(playerid,Text:PlayerInfo[playerid][LifeInfo]);
	    if(PlayerInfo[playerid][Clan])
		{
			SetPlayerTeam(playerid, PlayerInfo[playerid][Clan]);
		}else{
			SetPlayerTeam(playerid, NO_TEAM);
		}
		new hex, colstr[32];
		format(colstr,sizeof(colstr),"0x%sFF",PlayerInfo[playerid][ColorNick]);
		hex = HexToInt(colstr);
		SetPlayerColor(playerid,hex);
		CheckReferalBonus(playerid);
	}
    return 1;
}

forward Timer_SaveTimeData(playerid);
public Timer_SaveTimeData(playerid)
{
	SavePlayerTimeData(playerid);
	return 1;
}

stock OffAntiSpawnKill(playerid)
{
	PlayerInfo[playerid][AntiSK] = 0;
	if (PlayerInfo[playerid][Health] != 0.0)
	{
		SetPlayerHealth(playerid, PlayerInfo[playerid][Health]);
	}else{
		PlayerInfo[playerid][Health] = 100;
        SetPlayerHealth(playerid, PlayerInfo[playerid][Health]);
	}
	return 1;
}

stock AntiSpawnKill(playerid)
{
	if(!IsPlayerGodMode(playerid))
	{
		GetPlayerHealth(playerid, PlayerInfo[playerid][Health]);
	    PlayerInfo[playerid][AntiSK] = 10;
    }
	return 1;
}

stock SendAdminMessage(alvl, color, const msg[], playerid = INVALID_PLAYER_ID, notid = INVALID_PLAYER_ID)
{
	for(new i;i<=GetPlayerPoolSize();i++)
	{
	    if(!IsPlayerConnected(i) && !PlayerInfo[i][Logged] || playerid == i || notid == i) continue;
	    if(IsAdminAccess(i,alvl,1)) SendClientMessage(i,color,msg);
	}
}

stock SendTeamMessage(team, color, const text[], playerid = INVALID_PLAYER_ID)
{
    for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(!IsPlayerConnected(i) && !PlayerInfo[i][Logged] || i == playerid) continue;
        if(PlayerInfo[i][Clan] == team)
 	    {
			SendClientMessage(i,color,text);
		}
    }
}

stock SendClientMessageWithoutPlayer(color, const message[], playerid = INVALID_PLAYER_ID)
{
    for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(!IsPlayerConnected(i) && !PlayerInfo[i][Logged] || i == playerid) continue;
		SendClientMessage(i,color,message);
    }
}

stock SendRadiusMessage(playerid, Float: range, color, text[])
{
	new Float:P[3];
	GetPlayerPos(playerid,P[0],P[1],P[2]);
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(!IsPlayerConnected(i) || !IsPlayerInRangeOfPoint(i,range,P[0],P[1],P[2]))continue;
		SendClientMessage(i, color, text);
	}
	return 1;
}

stock DropPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
        new weaponid,ammo,modelid,pickupid;
        new success = false;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    for(new i=1;i<12;i++)
	    {
	        GetPlayerWeaponData(playerid,i,weaponid,ammo);
			if(weaponid)
			{
				if(ammo > 300) ammo = 300;
				modelid = GetWeaponModel(weaponid);
				if(modelid)
				{
                    pickupid = CreatePickup(modelid,1,x+(random(10)-random(10)),y+(random(10)-random(10)),z);
				    DropType[pickupid] = 1;
					DropWeapon[pickupid] = weaponid;
					DropAmmo[pickupid] = ammo;
					DestroyDropTimer[pickupid] = SetTimerEx("DestroyDropPickup",35000+random(15000),false,"i",pickupid);
					success = true;
				}
			}
	  	}
      	ResetPlayerWeapons(playerid);
      	return success;
	}
	return 0;
}

forward DestroyDropPickup(pickupid);
public DestroyDropPickup(pickupid)
{
    if(DropType[pickupid] == 1)
	{
	    DropType[pickupid] = 0;
	    DropWeapon[pickupid] = 0;
		DropAmmo[pickupid] = 0;
		DestroyPickup(pickupid);
		return 1;
	}
    return 0;
}

stock AddPlayerEvent(playerid, event[])
{
	new hour, minute, second;
	gettime(hour, minute, second);
	format(PlayerInfo[playerid][Event10], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event9]);
	format(PlayerInfo[playerid][Event9], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event8]);
	format(PlayerInfo[playerid][Event8], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event7]);
	format(PlayerInfo[playerid][Event7], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event6]);
	format(PlayerInfo[playerid][Event6], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event5]);
	format(PlayerInfo[playerid][Event5], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event4]);
	format(PlayerInfo[playerid][Event4], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event3]);
	format(PlayerInfo[playerid][Event3], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event2]);
	format(PlayerInfo[playerid][Event2], 64, "[%02d:%02d:%02d] %s",hour, minute, second, PlayerInfo[playerid][Event1]);
	format(PlayerInfo[playerid][Event1], 64, "[%02d:%02d:%02d] %s",hour, minute, second, event);
	return 1;
}

stock GetPlayerID_Name(rName[])
{
    for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(!strcmp(rName, PlayerInfo[i][Name])) return i;
	}
    return INVALID_PLAYER_ID;
}

stock GetPlayerID_Account(account)
{
    for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(account == PlayerInfo[i][ID]) return i;
	}
    return INVALID_PLAYER_ID;
}

stock GetPlayerID_IP(rip[])
{
    for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(!strcmp(rip, PlayerInfo[i][GetIP])) return i;
	}
    return INVALID_PLAYER_ID;
}

stock GetAccountName(account)
{
    new name[MAX_PLAYER_NAME];
    if(SQL::RowExists("accounts", "ID", account))
    {
        SQL::GetStringEntry("accounts", "Name", "ID", account, name, MAX_PLAYER_NAME);
    }
    return name;
}

stock GetAccountID(name[])
{
	new account;
	if(SQL::RowExistsEx("accounts", "Name", name))
	{
		new handle = SQL::OpenEx(SQL::READ, "accounts", "Name", name);
        SQL::ReadInt(handle, "ID", account);
        SQL::Close(handle);
	}
    return account;
}

stock UpdateIndicator(playerid)
{
	new Text3D[128];
	/*if(PlayerInfo[playerid][GodMode] && PlayerInfo[playerid][Dialog] != 0)
    {
	    format(Text3D,sizeof(Text3D),"{00FF00}В МЕНЮ %s | {FF0000}Бессмертный",JTF(PlayerInfo[playerid][DialogTime]));
    }
	
	else if(PlayerInfo[playerid][Dialog] != 0)
    {
	    format(Text3D,sizeof(Text3D),"{00FF00}В МЕНЮ %s",JTF(PlayerInfo[playerid][DialogTime]));
    }
	else if(PlayerInfo[playerid][GodMode])
	{
		Text3D = "{FF0000}Бессмертный";
    }
	else if(PlayerInfo[playerid][AntiSK])
	{
		format(Text3D,sizeof(Text3D),"{FF0000}Бессмертный %s",MTF(PlayerInfo[playerid][AntiSK]));
	}
	else
	{
	    Text3D = " ";
    }
    UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Label],0xFFFFFFDD,Text3D);*/
    new count = -1, txtcount[3][32];
	if(PlayerInfo[playerid][Dialog] != 0)
    {
	    format(txtcount[count],32,"{00FF00}В МЕНЮ %s",JTF(PlayerInfo[playerid][DialogTime]));
	    count ++;
    }
	if(PlayerInfo[playerid][GodMode])
	{
		txtcount[count] = "{FF0000}Бессмертный";
		count ++;
    }
	if(PlayerInfo[playerid][AntiSK])
	{
		format(txtcount[count],32,"{FF0000}Бессмертный %s",MTF(PlayerInfo[playerid][AntiSK]));
		count ++;
	}
	if(count == -1)
	{
	    Text3D = " ";
    }
	//if(count == 1) format(Text3D,sizeof(Text3D),"%s",txtcount[count-1]);
	//if(txtDialog == " " &&) format(Text3D,sizeof(Text3D),"%s | %s | %s",txtcount[count], txtcount[count], txtcount[count]);
    for (new i = 0; i < count; i++)
	{
		if(!count) format(Text3D,sizeof(Text3D),"%s",txtcount[i]);
		else format(Text3D,sizeof(Text3D),"%s%s | ",Text3D, txtcount[i]);
	}
    UpdateDynamic3DTextLabelText(PlayerInfo[playerid][Label],0xFFFFFFDD,Text3D);
    printf("%d %s", count, txtcount[count]);
    return 1;
}

forward DeleteAccount(playerid, name[]);
public DeleteAccount(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new fstr[256];
		if(IsPlayerConnected(GetPlayerID_Name(name)))
		{
			Kick(GetPlayerID_Name(name));
		}
		format(fstr,sizeof(fstr),"INSERT INTO `d_accounts` SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
		mysql_tquery(mysqlConnection, fstr, "", "");
		format(fstr,sizeof(fstr),"DELETE FROM `accounts` WHERE `Name` = '%s'", name);
		mysql_tquery(mysqlConnection, fstr, "", "");
		format(fstr,sizeof(fstr),"Аккаунт %s [%d] был успешно удален",name, cache_get_field_content_int(0, "ID"));
		SendClientMessage(playerid,CYELLOW,fstr);
		format(fstr,sizeof(fstr),"Админ %s [%d] удалил аккаунт %s [%d]",PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], name, cache_get_field_content_int(0, "ID"));
	    Logs_Admins(gettime(), fstr);
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_deleteAcc_input);
	}
	return true;
}

forward DeleteEmail(playerid, name[]);
public DeleteEmail(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		if(!IsPlayerConnected(GetPlayerID_Name(name)))
		{
		    if(cache_get_field_content_int(0, "CheckEmail") == 1)
			{
				new query[200];
	   			format(query,sizeof(query),"UPDATE `accounts` SET `CheckEmail` = '0', `EmailKey` = '0' WHERE `Name` = '%s'", name);
	    		mysql_tquery(mysqlConnection, query, "", "");
	    		SendClientMessage(playerid,0x00FF00AA,"Email успешно откреплен");
			}
			else
			{
				SendClientMessage(playerid,0xAFAFAFAA,"Email уже откреплен");
				ShowAdmin_input(playerid, adm_deleteEmail_input);
			}
		}
		else
		{
			SendClientMessage(playerid,0xAFAFAFAA,"Аккаунт в сети");
			ShowAdmin_input(playerid, adm_deleteEmail_input);
		}
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_deleteEmail_input);
	}
	return true;
}

stock SetPlayerNickName(playerid, name[], oldname[] = "")
{
	if(SQL::RowExistsEx("accounts", "Name", name))//имя занято
	{
		return 0;
	}
	if(!IsValidNickName(name))//содержит недопустимые символы
	{
		return -1;
	}
	if(strlen(name) >= 23)//слишком длинное имя
 	{
	 	return -2;
 	}
	Logs_SetName(PlayerInfo[playerid][Name], name, PlayerInfo[playerid][ID], gettime());
	format(oldname, MAX_PLAYER_NAME, PlayerInfo[playerid][Name]);
	format(PlayerInfo[playerid][Name], MAX_PLAYER_NAME, name);
	mysql_player_update_str(playerid, "Name", PlayerInfo[playerid][Name]);
	SetPlayerName(playerid, name);
	if(PlayerInfo[playerid][Clan])
	{
	    Clan_SetName(PlayerInfo[playerid][ID], PlayerInfo[playerid][Clan], PlayerInfo[playerid][Name]);
	}
	if(PlayerInfo[playerid][House] != INVALID_HOUSE_ID)
	{
		new hid = PlayerInfo[playerid][House];
		strmid(HouseInfo[hid][hOwner], PlayerInfo[playerid][Name], 0, strlen(PlayerInfo[playerid][Name]), 255);
	    mysql_house_update_str(hid, "hOwner", HouseInfo[hid][hOwner]);
	    UpdateHouse(hid);
		if(PlayerInfo[playerid][carGUID] != INVALID_VEHICLE_ID)
		{
			UpdateVehicle(PlayerInfo[playerid][carGUID]);
		}
	}
	return 1;
}

forward AddPointOffline(playerid, mysqlname[], point);
public AddPointOffline(playerid, mysqlname[], point)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		if(!IsPlayerConnected(GetPlayerID_Name(mysqlname)))
		{
			new query[256];
		 	format(query,sizeof(query),"UPDATE `accounts` SET `Points` = `Points` + '%d' WHERE `Name` = '%s'", point, mysqlname);
		 	mysql_tquery(mysqlConnection, query, "", "");
		 	format(query,sizeof(query),"Ты добавил %d очки апгрейда игроку %s не в сети", point, mysqlname);
		 	SendClientMessage(playerid,CLIGHTGREEN,query);
		 	format(query,sizeof(query),"Админ %s [%d] добавил %d очки апгрейда игроку %s не в сети", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], point, mysqlname);
		    Logs_Admins(gettime(), query);
		    ShowAdmin_input(playerid, adm_addOA_offline_input);
	    }
	    else
		{
			SendClientMessage(playerid,0xAFAFAFAA,"Аккаунт в сети");
			ShowAdmin_input(playerid, adm_addOA_offline_input);
		}
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_addOA_offline_input);
	}
	return true;
}

forward AddMoneyOffline(playerid, mysqlname[], money);
public AddMoneyOffline(playerid, mysqlname[], money)
{
	new rows, fields;
	cache_get_data(rows, fields);
	/*if(money < 1 || money > 99999999)
	{
		ShowAdmin_input(playerid, adm_addMoney_offline_input);
		return SendClientMessage(playerid,0xAFAFAFAA,"Минимальное кол-во выдачи денег 1 Максимальное 99999999");
	}*/
	if(rows)
	{
		if(!IsPlayerConnected(GetPlayerID_Name(mysqlname)))
		{
			new query[256];
		 	format(query,sizeof(query),"UPDATE `accounts` SET `Money` = `Money` + '%d' WHERE `Name` = '%s'", money, mysqlname);
		 	mysql_tquery(mysqlConnection, query, "", "");
		 	format(query,sizeof(query),"Ты добавил %d денег игроку %s не в сети", money, mysqlname);
		 	SendClientMessage(playerid,CLIGHTGREEN,query);
		 	format(query,sizeof(query),"Админ %s [%d] добавил %d денег игроку %s не в сети", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], money, mysqlname);
		    Logs_Admins(gettime(), query);
		    ShowAdmin_input(playerid, adm_addMoney_offline_input);
	    }
	    else
		{
			SendClientMessage(playerid,0xAFAFAFAA,"Аккаунт в сети");
			ShowAdmin_input(playerid, adm_addMoney_offline_input);
		}
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_addMoney_offline_input);
	}
	return true;
}

forward AddMBankOffline(playerid, mysqlname[], mbank);
public AddMBankOffline(playerid, mysqlname[], mbank)
{
	new rows, fields;
	cache_get_data(rows, fields);
	/*if(mbank < 1 || mbank > 99999999)
	{
		ShowAdmin_input(playerid, adm_addBank_offline_input);
		return SendClientMessage(playerid,0xAFAFAFAA,"Минимальное кол-во выдачи денег 1 Максимальное 99999999");
	}*/
	if(rows)
	{
		if(!IsPlayerConnected(GetPlayerID_Name(mysqlname)))
		{
			new query[256];
		 	format(query,sizeof(query),"UPDATE `accounts` SET `Bank` = `Bank` + '%d' WHERE `Name` = '%s'", mbank, mysqlname);
		 	mysql_tquery(mysqlConnection, query, "", "");
		 	format(query,sizeof(query),"Ты добавил %d денег в банке игроку %s не в сети", mbank, mysqlname);
		 	SendClientMessage(playerid,CLIGHTGREEN,query);
		 	format(query,sizeof(query),"Админ %s [%d] добавил %d денег в банке игроку %s не в сети", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], mbank, mysqlname);
		    Logs_Admins(gettime(), query);
		    ShowAdmin_input(playerid, adm_addBank_offline_input);
	    }
	    else
		{
			SendClientMessage(playerid,0xAFAFAFAA,"Аккаунт в сети");
			ShowAdmin_input(playerid, adm_addBank_offline_input);
		}
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_addBank_offline_input);
	}
	return true;
}

stock Mute(adminid, player[], time[], reason[], mutetime = 0, mutecount = 0)
{
	new targetid = INVALID_PLAYER_ID, bool:online = false, nmsg[MAX_PLAYER_NAME+16];
	if(IsNumeric(player))
	{
		if(GetPlayerID_Name(player) == INVALID_PLAYER_ID)
		{
			targetid = strval(player);
			online =  true;
		}
	} else {
		if(IsPlayerConnected(GetPlayerID_Name(player)))
		{
			targetid = GetPlayerID_Name(player);
			online =  true;
		}
	
	}
	if(online == true && !IsPlayerConnected(targetid))
	{
		return -1;//Если игрока нет на сервере
	} else {
		new value[11];
		strcat(nmsg, PlayerInfo[targetid][Name]);
		strcat(nmsg, " ");
		strcat(nmsg, "[");
		valstr(value, PlayerInfo[targetid][ID]);
		strcat(nmsg, value);
		strcat(nmsg, "]");
	}
	if(online == false && !GetAccountID(player))
	{
		return 0;//Если игрока нет в базе данных
	} else if(online == false && GetAccountID(player)) {
		strcat(nmsg, player);
		strcat(nmsg, " не в сети");
	}
	if(!IsNumeric(time) || emptyMessage(time))
    {
		strcat(reason, time, 128);
		if(mutetime > 0)
	    {
		    SendClientMessageToAllf(0x00FF00FF, "Админ %s [%d] разглушил %s", PlayerInfo[adminid][Name], adminid, nmsg);
		    if(mutecount > 0) mutecount--;
		}
	    else if(mutecount == 0)
		{
		    if(emptyMessage(reason))
		    {
		   		SendClientMessageToAllf(0x006400FF, "Админ %s [%d] выдал предупреждение в чате %s", PlayerInfo[adminid][Name], adminid, nmsg);
			} else {
			    SendClientMessageToAllf(0x006400FF, "Админ %s [%d] выдал предупреждение в чате %s, причина: %s", PlayerInfo[adminid][Name], adminid, nmsg, reason);
			}
			if(IsPlayerConnected(targetid))
			{
			    SendClientMessage(targetid, 0x006400FF, "При следующем нарушении автоматическая заглушка составит 5м:0с");
		    }
		    mutecount++;
		} else {
			valstr(time, GetNextMuteTime(mutecount));
	       	if(emptyMessage(reason))
	       	{
		    	SendClientMessageToAllf(0x006400FF, "Админ %s [%d] заглушил %s на %s", PlayerInfo[adminid][Name], adminid, nmsg, MTF(strval(time)));
			} else {
			    SendClientMessageToAllf(0x006400FF, "Админ %s [%d] заглушил %s на %s, причина: %s", PlayerInfo[adminid][Name], adminid, nmsg, MTF(strval(time)), reason);
			}
			if(IsPlayerConnected(targetid))
			{
			    SendClientMessage(targetid, CRED, "УВАЖАЙ игроков, не оскорбляй их и не флуди в чат!!!");
			    SendClientMessagef(targetid, CRED, "При следующем нарушении автоматическая заглушка составит %s", MTF(GetNextMuteTime(PlayerInfo[targetid][MuteCount]+1)));
			    SendClientMessage(targetid, CRED, ":'-(");
		    }
		    mutetime = strval(time);
		    mutecount++;
		}
	}
	else
	{
	    if(strval(time) < 0 || strval(time) > 2000000000) format(time, 11, "2000000000");
		if(PlayerInfo[adminid][AdminLevel] <= 500 && strval(time) > 3600) format(time, 5, "3600");
	    if(strval(time) == 0)
	    {
	        if(mutetime == 0) return SendClientMessage(adminid,CGRAY,"Игрок не заглушен");
		    SendClientMessageToAllf(0x00FF00FF, "Админ %s [%d] разглушил %s", PlayerInfo[adminid][Name], adminid, nmsg);
		    mutetime = strval(time);
		    if(mutecount > 0) mutecount--;
		} else {
			if(mutetime > strval(time)) return SendClientMessage(adminid,CGRAY,"Игрок уже заглушен на это время");
			if(emptyMessage(reason))
	       	{
				SendClientMessageToAllf(0x006400FF, "Админ %s [%d] заглушил %s на %s", PlayerInfo[adminid][Name], adminid, nmsg, MTF(strval(time)));
			} else {
				SendClientMessageToAllf(0x006400FF, "Админ %s [%d] заглушил %s на %s, причина: %s", PlayerInfo[adminid][Name], adminid, nmsg, MTF(strval(time)), reason);
			}
		    if(IsPlayerConnected(targetid))
			{
			    SendClientMessage(targetid, CRED, "УВАЖАЙ игроков, не оскорбляй их и не флуди в чат!!!");
			    SendClientMessagef(targetid, CRED, "При следующем нарушении автоматическая заглушка составит %s", MTF(GetNextMuteTime(PlayerInfo[targetid][MuteCount]+1)));
			    SendClientMessage(targetid, CRED, ":'-(");
		    }
		    mutetime = strval(time);
		    mutecount++;
		}
	}
	return 1;
}

forward JailAccount(playerid, name[], ttime, reason[]);
public JailAccount(playerid, name[], ttime, reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
        if(!IsPlayerConnected(GetPlayerID_Name(name)))
		{
			new glstr[128], query[200];
			new n_id = cache_get_field_content_int(0, "ID", mysqlConnection);
			new n_admin = cache_get_field_content_int(0, "AdminLevel", mysqlConnection);
			new n_jailtime = cache_get_field_content_int(0, "JailTime", mysqlConnection);
			if(n_admin >= PlayerInfo[playerid][AdminLevel] && n_id != PlayerInfo[playerid][ID]) return SendClientMessage(playerid,CGRAY,"Игрок администратор");
			if(ttime < 0 || ttime > 2000000000) ttime = 2000000000;
			if(IsAdminAccess(playerid,500) && ttime > 300) ttime = 300;
			else if(IsAdminAccess(playerid,700) && ttime > 36000) ttime = 36000;
		    if(ttime == 0)
		    {
				if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, COLOR_GREY, "Тебе нельзя выпускать игроков из тюрьмы");
                if(n_jailtime == 0) return SendClientMessage(playerid,CGRAY,"Игрок не посажен в тюрьму");
    			format(glstr, sizeof(glstr), "Админ %s [%d] выпустил %s из тюрьмы по аккаунту", PlayerInfo[playerid][Name], playerid, name);
			    SendClientMessageToAll(0x00FF00FF, glstr);
			    format(query,sizeof(query),"UPDATE `accounts` SET `JailTime` = '%d' WHERE `Name` = '%s'", ttime, name);
    		    mysql_tquery(mysqlConnection, query, "", "");
		    } else {
		    	if(n_jailtime > ttime) return SendClientMessage(playerid,CGRAY,"Игрок уже посажен на это время");
				if(emptyMessage(reason))
				{
			    	format(glstr, sizeof(glstr), "Админ %s [%d] посадил %s в тюрьму на %s по аккаунту", PlayerInfo[playerid][Name], playerid, name, MTF(ttime));
				} else {
				    format(glstr, sizeof(glstr), "Админ %s [%d] посадил %s в тюрьму на %s по аккаунту, причина: %s", PlayerInfo[playerid][Name], playerid, name, MTF(ttime), reason);
				}
			    SendClientMessageToAll(0x006400FF, glstr);
			    format(query,sizeof(query),"UPDATE `accounts` SET `JailTime` = '%d' WHERE `Name` = '%s'", ttime, name);
    		    mysql_tquery(mysqlConnection, query, "", "");
		    }
		}
		else
		{
			SendClientMessage(playerid,0xAFAFAFAA,"Аккаунт в сети");
			ShowAdmin_input(playerid, adm_JailAcc_input);
		}
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_JailAcc_input);
	}
	return true;
}

forward MuteAccountCMD(playerid, name[], mctime, reason[]);
public MuteAccountCMD(playerid, name[], mctime, reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
        if(!IsPlayerConnected(GetPlayerID_Name(name)))
		{
			new glstr[128], query[200];
			new n_id = cache_get_field_content_int(0, "ID", mysqlConnection);
			new n_admin = cache_get_field_content_int(0, "AdminLevel", mysqlConnection);
			new n_mutecmd = cache_get_field_content_int(0, "MuteCMD", mysqlConnection);
			if(n_admin >= PlayerInfo[playerid][AdminLevel] && n_id != PlayerInfo[playerid][ID]) return SendClientMessage(playerid,CGRAY,"Игрок администратор");
			if(mctime < 0 || mctime > 2000000000) mctime = 2000000000;
		    if(mctime == 0)
		    {
				if(IsAdminAccess(playerid,700)) return SendClientMessage(playerid, COLOR_GREY, "Тебе нельзя снимать запрет на использвание команд и меню");
                if(n_mutecmd == 0) return SendClientMessage(playerid,CGRAY,"У игрока не закрыты команды");
    			format(glstr, sizeof(glstr), "Админ %s [%d] снял запрет на использование команд и меню с %s по аккаунту", PlayerInfo[playerid][Name], playerid, name);
			    SendClientMessageToAll(0x00FF00FF, glstr);
			    format(query,sizeof(query),"UPDATE `accounts` SET `MuteCMD` = '%d' WHERE `Name` = '%s'", mctime, name);
    		    mysql_tquery(mysqlConnection, query, "", "");
		    } else {
		    	if(n_mutecmd > mctime) return SendClientMessage(playerid,CGRAY,"Игрок уже посажен на это время");
				if(emptyMessage(reason))
		    	{
			    	format(glstr, sizeof(glstr), "Админ %s [%d] запретил использовать команды и меню %s на %s по аккаунту", PlayerInfo[playerid][Name], playerid, name, MTF(mctime));
				} else {
				    format(glstr, sizeof(glstr), "Админ %s [%d] запретил использовать команды и меню %s на %s по аккаунту, причина: %s", PlayerInfo[playerid][Name], playerid, name, MTF(mctime), reason);
				}
			    SendClientMessageToAll(0x006400FF, glstr);
			    format(query,sizeof(query),"UPDATE `accounts` SET `MuteCMD` = '%d' WHERE `Name` = '%s'", mctime, name);
    		    mysql_tquery(mysqlConnection, query, "", "");
		    }
		}
		else
		{
			SendClientMessage(playerid,0xAFAFAFAA,"Аккаунт в сети");
			ShowAdmin_input(playerid, adm_MuteCMDAcc_input);
		}
	}
	else
	{
		SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
		ShowAdmin_input(playerid, adm_MuteCMDAcc_input);
	}
	return true;
}

stock MuteIP(playerid, muteip[], mutetime)
{
	new query[128];
	format(query, sizeof(query),"SELECT * FROM `mutedip` WHERE `IP` = '%s'", muteip);
	mysql_function_query(mysqlConnection, query, true, "CallBackMuteIP","sd", muteip, mutetime);
	PlayerInfo[playerid][MuteTime] = mutetime;
	return true;
}

forward CallBackMuteIP(muteip[], mutetime);
public CallBackMuteIP(muteip[], mutetime)
{
	new rows, fields, fstr2[128];
	cache_get_data(rows, fields);
	if(!rows)
	{
	    if(mutetime > 0)
        {
	    	format(fstr2, sizeof(fstr2), "INSERT INTO `mutedip` (`IP`, `MuteTime`, `Unixtime`) VALUES ('%s', '%d', '%d')",muteip, mutetime, gettime()+3600);
        	mysql_tquery(mysqlConnection, fstr2, "", "");
        }
    }
    else
    {
        if(mutetime > 0)
        {
        	format(fstr2, sizeof(fstr2), "UPDATE `mutedip` SET `MuteTime` = '%d' WHERE `IP` = '%s'", mutetime, muteip);
        	mysql_tquery(mysqlConnection, fstr2, "", "");
        }
        if(mutetime == 0)
        {
            format(fstr2,sizeof(fstr2),"DELETE FROM `mutedip` WHERE `IP` = '%s'", muteip);
		    mysql_tquery(mysqlConnection, fstr2, "", "");
        }
    }
	return true;
}

forward CheckMuteIP(playerid);
public CheckMuteIP(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		if(gettime() <= cache_get_field_content_int(0, "Unixtime"))
		{
		    if(!PlayerInfo[playerid][MuteTime])
		    {
		        new str[256];
                PlayerInfo[playerid][MuteTime] = cache_get_field_content_int(0, "MuteTime");
		        format(str,sizeof(str),"Твой IP заглушен, заглушка на %s, если ты не согласен с заглушкой, отпишись на форуме",MTF(cache_get_field_content_int(0, "MuteTime")));
	            SendClientMessage(playerid,0xFF0000AA,str);
	            format(str,sizeof(str),"Заглушка игрока %s [%d] из-за заглушки по IP на %s",PlayerInfo[playerid][Name],PlayerInfo[playerid][ID],MTF(cache_get_field_content_int(0, "MuteTime")));
	            Logs_Admins(gettime(), str);
	        }
		}
    }
	return true;
}

forward RecoveryAccount(playerid, name[]);
public RecoveryAccount(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new key[128], email[64];
		cache_get_field_content(0, "Email", email);
		cache_get_field_content(0, "Password", key);
		new account = cache_get_field_content_int(0, "ID");
		new checkemail = cache_get_field_content_int(0, "CheckEmail");
		new emailkey = cache_get_field_content_int(0, "EmailKey");
		if(admin_accountid == account)
		{
			return SendClientMessage(playerid,CGRAY,"Отправить пароль на Email этого аккаунта невозможно");
		}
		if(strcmp(email, " ", true))
		{
			SendClientMessage(playerid,0x00FF00AA,"На введённый ящик в этом аккаунте отправлен новый пароль");
			new generatepass[MAX_PLAYER_PASSWORD], query[96];
			strcat(generatepass, GeneratePassword());
			mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `accounts` SET `GeneratePass` = '%e' WHERE `Name` = '%e'",generatepass, name);
			mysql_tquery(mysqlConnection,query, "", "");
			senderEmail(account, name, key, email, checkemail, emailkey, generatepass);
		}
		else SendClientMessage(playerid,0xAFAFAFAA,"Email на данном аккаунте не записан");
	}
	else SendClientMessage(playerid,0xAFAFAFAA,"Данного аккаунта не существует");
	return true;
}

stock ShowAdminList(playerid, fromslot)
{
	mysql_function_query(mysqlConnection, "SELECT * FROM `accounts` WHERE `AdminLevel` > '0' ORDER BY `AdminDate`", true, "AdministrationList", "dd", playerid, fromslot);
	return 1;
}

forward AdministrationList(playerid, fromslot);
public AdministrationList(playerid, fromslot)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
        new str[128],sctring[sizeof(str)*20], coren[32], count;
        f(str,"Ник\t\t\t\tНомер аккаунта\t\tАдминка\t\tПосещение\n");
	    strcat(sctring,str);
		for(new i = fromslot; i < fromslot + 50; i++)
		{
			if( i < rows)
			{
	            new name[24];
	        	cache_get_field_content(i, "Name", name);
	        	new account = cache_get_field_content_int(i, "ID", mysqlConnection);
	        	new adminlevel = cache_get_field_content_int(i, "AdminLevel", mysqlConnection);
	        	new logintime = cache_get_field_content_int(i, "LoginDate", mysqlConnection);
				new date[3], time[3];
				gmtime(logintime, date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
				f(str,"%s\t\t\t\t%d\t\t%d\t\t%02d/%02d/%02d %02d:%02d:%02d\n", name, account, adminlevel, date[0], date[1], date[2], time[0], time[1], time[2]);
				strcat(sctring,str);
			}
			if( i == ( fromslot + 50 ) - 1 && i < rows) format(coren, sizeof(coren), "Далее");
			else format(coren, sizeof(coren), "Выход");
			count = i;
		}
		ShowPlayerDialog(playerid,adm_admList_input, DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Список администрации",sctring, coren, "Назад");
		SetPVarInt(playerid, "adminList", fromslot);
		SetPVarInt(playerid, "adminListID", count);
		SetPVarInt(playerid, "adminRows", rows);
	}
	return true;
}

forward GetStats(playerid, name[]);
public GetStats(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new str[256];
		new account = cache_get_field_content_int(0, "ID");
		new level = cache_get_field_content_int(0, "Level", mysqlConnection);
		new money = cache_get_field_content_int(0, "Money", mysqlConnection);
		new bank = cache_get_field_content_int(0, "Bank", mysqlConnection);
		new points = cache_get_field_content_int(0, "Points", mysqlConnection);
		new mute = cache_get_field_content_int(0, "MuteTime", mysqlConnection);
		new jail = cache_get_field_content_int(0, "JailTime", mysqlConnection);
		new mutecmd = cache_get_field_content_int(0, "MuteCMD", mysqlConnection);
		new mutecount = cache_get_field_content_int(0, "MuteCount", mysqlConnection);
		new admin = cache_get_field_content_int(0, "AdminLevel", mysqlConnection);
		new logintime = cache_get_field_content_int(0, "LoginDate", mysqlConnection);
		new date[3], time[3];
		gmtime(logintime, date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
		f(str,"%s%s\n",name);
		f(str,"%sНомер аккаунта: %d\n",str,account);
		f(str,"%sУровень: %d\n",str,level);
		f(str,"%sДенег на руках: %d\n",str,money);
		f(str,"%sДенег в банке: %d\n",str,bank);
		f(str,"%sОА: %d\n",str,points);
		f(str,"%sЗаглушен: %s\n",str,MTF(mute));
		f(str,"%sТюрьма: %s\n",str,MTF(jail));
		f(str,"%sЗакрыты команды: %s\n",str,MTF(mutecmd));
		f(str,"%sКоличество заглушек: %d\n",str,mutecount);
		f(str,"%sДата последнего посещения: %02d/%02d/%02d %02d:%02d:%02d\n",str, date[0], date[1], date[2], time[0], time[1], time[2]);
		if(admin >= 100)
		{
			f(str,"%sУровень админки: %d\n",str,admin);
		}
        ShowPlayerDialog(playerid,adm_infoAcc2,0,"{EFFFFF}Информация об аккаунте",str,"Далее","");
	}
	else
	{
	    ShowPlayerDialog(playerid,adm_infoAcc2,0,"{EFFFFF}Информация об аккаунте","Аккаунт отсутствует","Далее","");
    }
	return true;
}

forward LoadClans();
public LoadClans()
{
    new temp[32],rows,fields;
    cache_get_data(rows,fields,mysqlConnection);
    if(rows)
    {
        for(new idx = 1; idx <= rows; idx++)
        {
            cache_get_field_content(idx-1,"cID",temp,mysqlConnection), ClanInfo[idx][cID] = strval(temp);
            cache_get_field_content(idx-1,"cName",ClanInfo[idx][cName],mysqlConnection, 32);
            cache_get_field_content(idx-1,"cTag",ClanInfo[idx][cTag],mysqlConnection, 32);
            cache_get_field_content(idx-1,"cOwnedID",temp,mysqlConnection), ClanInfo[idx][cOwnedID] = strval(temp);
            cache_get_field_content(idx-1,"cLevel",temp,mysqlConnection), ClanInfo[idx][cLevel] = strval(temp);
            cache_get_field_content(idx-1,"cBank",temp,mysqlConnection), ClanInfo[idx][cBank] = strval(temp);
            cache_get_field_content(idx-1,"cPlayers",temp,mysqlConnection), ClanInfo[idx][cPlayers] = strval(temp);
            cache_get_field_content(idx-1,"cPlayersUniqueID",temp,mysqlConnection), ClanInfo[idx][cPlayersUniqueID] = strval(temp);
            cache_get_field_content(idx-1,"cColorZone",ClanInfo[idx][cColorZone],mysqlConnection, 16);
            ClanInfo[idx][cCaptureZone] = -1;
            LoadClanMember(idx);
            clanid++;
        }
    }
    clanid = rows;
    printf("Загружено: %d кланов", clanid);
}

forward CreateClanName(playerid, name[]);
public CreateClanName(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
        ShowClanMenu_input(playerid, cm_createClan_input);
		return SendClientMessage(playerid, COLOR_GREY, "Такое название или тег уже есть");
	}
	ShowClanMenu_input(playerid, cm_createClan2_input);
    SetPVarString(playerid,"NewClanName",name);
	return true;
}

forward CreateClanTag(playerid, name[]);
public CreateClanTag(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
        ShowClanMenu_input(playerid, cm_createClan2_input);
		return SendClientMessage(playerid, COLOR_GREY, "Такое название или тег уже есть");
	}
    SetPVarString(playerid,"NewClanTag",name);
    mysql_function_query(mysqlConnection, "SELECT * FROM `clans` WHERE `cOwnedID` = '0'", true, "CreateClan", "d", playerid);
	return true;
}

forward CreateClan(playerid);
public CreateClan(playerid)
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
    {
	    new string[130], c_name[32], c_tag[32];
	    new cid = cache_get_field_content_int(0, "cID", mysqlConnection);
	    GetPVarString(playerid,"NewClanName",c_name,sizeof(c_name));
	    GetPVarString(playerid,"NewClanTag",c_tag,sizeof(c_tag));
	    PlayerInfo[playerid][ClanRank] = 5;
	    PlayerInfo[playerid][Clan] = cid;
		new clan = PlayerInfo[playerid][Clan];
	    ClanInfo[clan][cName] = c_name;
	    ClanInfo[clan][cTag] = c_tag;
	    ClanInfo[clan][cOwnedID] = PlayerInfo[playerid][ID];
	    ClanInfo[clan][cLevel] = 1;
	    ClanInfo[clan][cBank] = 0;
	    ClanInfo[clan][cPlayers] = 1;
	    ClanInfo[clan][cPlayersUniqueID] = 1;
	    format(ClanInfo[clan][cColorZone],16,"FFFFFF","FFFFFF");
	    mysql_player_update_int(playerid, "Clan", PlayerInfo[playerid][Clan]);
	    mysql_player_update_int(playerid, "ClanRank", PlayerInfo[playerid][ClanRank]);
	    mysql_clan_update_str(clan, "cName", ClanInfo[clan][cName]);
	    mysql_clan_update_str(clan, "cTag", ClanInfo[clan][cTag]);
	    mysql_clan_update_int(clan, "cOwnedID", ClanInfo[clan][cOwnedID]);
	    mysql_clan_update_int(clan, "cLevel", ClanInfo[clan][cLevel]);
	    mysql_clan_update_int(clan, "cBank", ClanInfo[clan][cBank]);
	    mysql_clan_update_int(clan, "cPlayers", ClanInfo[clan][cPlayers]);
	    mysql_clan_update_int(clan, "cPlayersUniqueID", ClanInfo[clan][cPlayersUniqueID]);
	    mysql_clan_update_str(clan, "cColorZone", ClanInfo[clan][cColorZone]);

		format(string, sizeof(string), "Игрок %s [%d] создал клан под названием %s %s [%d]", PlayerInfo[playerid][Name], playerid, ClanInfo[cid][cName], ClanInfo[cid][cTag], PlayerInfo[playerid][Clan]);
		SendClientMessageToAll(0xFF0000ff, string);
	    
        DeletePVar(playerid,"NewClanName");
        DeletePVar(playerid,"NewClanTag");
        
        format(string, sizeof(string), ClanMemberPatch, clan);
        new File = ini_createFile(string);
		if (File >= 0)
		{
			for (new i = 0; i < ClanInfo[clan][cPlayers]; i++)
			{
			    ClanMember[clan][i][cmUniqueID] = 0;
				ClanMember[clan][i][cmMysqlID] = 0;
				format(ClanMember[clan][i][cmName], MAX_PLAYER_NAME, "", "");
				ClanMember[clan][i][cmRank] = 0;
				
				format(string, sizeof(string), "cmUniqueID_%d", i);
			    ini_setInteger(File, string, ClanMember[clan][i][cmUniqueID]);

				format(string, sizeof(string), "cmMysqlID_%d", i);
			    ini_setInteger(File, string, ClanMember[clan][i][cmMysqlID]);

			    format(string, sizeof(string), "cmName_%d", i);
			    ini_setString(File, string, ClanMember[clan][i][cmName]);

			    format(string, sizeof(string), "cmRank_%d", i);
			    ini_setInteger(File, string, ClanMember[clan][i][cmRank]);
			    
			    format(string, sizeof(string), "cmTimeStamp_%d", i);
			    ini_setInteger(File, string, ClanMember[clan][i][cmTimeStamp]);
			}
        }
        ini_closeFile(File);
        
        Clan_LinkPlayer(playerid, PlayerInfo[playerid][Clan]);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "На сервере создано максимальное количество кланов");
	}
	return 1;
}

stock DeleteClan(clan, playerid = INVALID_PLAYER_ID)
{
	new string[512];
	if(playerid != INVALID_PLAYER_ID)
	{
		format(string,sizeof(string), "Клан лидер %s [%d] расформировал свой клан %s %s [%d]", PlayerInfo[playerid][Name], playerid, ClanInfo[clan][cName], ClanInfo[clan][cTag], clan);
		SendClientMessageToAll(CRED, string);
	} else {
		format(string,sizeof(string), "Клан %s %s [%d] расформирован администрацией", ClanInfo[clan][cName], ClanInfo[clan][cTag], clan);
		SendClientMessageToAll(CRED, string);
	}
    ClanInfo[clan][cOwnedID] = 0;
    format(ClanInfo[clan][cName], 24, " ",  " ");
    format(ClanInfo[clan][cTag], 24, " ",  " ");
    ClanInfo[clan][cLevel] = 0;
    ClanInfo[clan][cBank] = 0;
    ClanInfo[clan][cPlayers] = 0;
    ClanInfo[clan][cPlayersUniqueID] = 0;
    ClanInfo[clan][cInvited] = 0;
    ClanInfo[clan][cCaptureZone] = -1;
    format(ClanInfo[clan][cColorZone],16," "," ");
    mysql_clan_update_str(clan, "cName", ClanInfo[clan][cName]);
    mysql_clan_update_str(clan, "cTag", ClanInfo[clan][cTag]);
    mysql_clan_update_int(clan, "cOwnedID", ClanInfo[clan][cOwnedID]);
    mysql_clan_update_int(clan, "cLevel", ClanInfo[clan][cLevel]);
    mysql_clan_update_int(clan, "cBank", ClanInfo[clan][cBank]);
    mysql_clan_update_int(clan, "cPlayers", ClanInfo[clan][cPlayers]);
    mysql_clan_update_int(clan, "cPlayersUniqueID", ClanInfo[clan][cPlayersUniqueID]);
    mysql_clan_update_str(clan, "cColorZone", ClanInfo[clan][cColorZone]);
    mysql_format(mysqlConnection, string,sizeof(string),"UPDATE `accounts` SET `Clan` = '-1', `ClanRank` = '0' WHERE `Clan` = '%d'",clan);
	mysql_tquery(mysqlConnection, string, "", "");
	for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(PlayerInfo[i][Clan] == clan)
		{
			PlayerInfo[i][Clan] = 0;
		    PlayerInfo[i][ClanRank] = 0;
		}
	}
	for (new i = 0; i < MAX_CLAN_MEMBERS; i++)//Удаление игроков из клана
	{
		ClanMember[clan][i][cmUniqueID] = 0;
		ClanMember[clan][i][cmMysqlID] = 0;
		format(ClanMember[clan][i][cmName], MAX_PLAYER_NAME, "", "");
		ClanMember[clan][i][cmRank] = 0;
		ClanMember[clan][i][cmTimeStamp] = 0;
	}
	for(new zone = 0; zone < zonesid; zone++)//Удаление ганг-зон клана
	{
		if(ZoneInfo[zone][zOwner] == clan)
		{
			GangZoneStopFlashForAll(zone);
			GangZoneHideForAll(zone);
			GangZoneShowForPlayers(zone, -66);
			ZoneInfo[zone][zOwner] = 0;
			ZoneInfo[zone][zUnderAttack] = 0;
			ZoneInfo[zone][zCaptureTime] = 0;
			KillTimer(ZoneInfo[zone][zCaptureTimer]);
			mysql_gangzone_update_int(zone, "zOwner", ZoneInfo[zone][zOwner]);
		}
	}
	format(string, sizeof(string),ClanMemberPatch, clan);
	if (fexist(string))
	{
	    fremove(string);
	}
	return 1;
}

forward ChangeClanName(playerid, name[]);
public ChangeClanName(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new fstr[256];
		new clan = PlayerInfo[playerid][Clan];

		format(fstr, sizeof(fstr), "Клан %s %s [%d] переименован в %s", ClanInfo[clan][cName], ClanInfo[clan][cTag], clan, name);
		SendClientMessageToAll(COLOR_GREY,fstr);
		format(ClanInfo[clan][cName], 24, "%s", name);
		mysql_clan_update_str(clan, "cName",ClanInfo[clan][cName]);
		SetPVarInt(playerid, "FloodReName", gettime()+300);
	}
	else
	{
		ShowClanMenu_input(playerid, cm_reName_input);
		return SendClientMessage(playerid, COLOR_GREY, "Такое название уже есть");
	}
	return true;
}

forward ChangeClanTag(playerid, name[]);
public ChangeClanTag(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new fstr[256];
		new clan = PlayerInfo[playerid][Clan];

		format(fstr, sizeof(fstr), "Тег %s клана %s [%d] переименован в %s", ClanInfo[clan][cTag], ClanInfo[clan][cName], clan, name);
		SendClientMessageToAll(COLOR_GREY,fstr);
		format(ClanInfo[clan][cTag], 24, "%s", name);
		mysql_clan_update_str(clan, "cTag",ClanInfo[clan][cTag]);
		SetPVarInt(playerid, "FloodReTag", gettime()+300);
	}
	else
	{
		ShowClanMenu_input(playerid, cm_reTag_input);
		return SendClientMessage(playerid, COLOR_GREY, "Такой тег уже есть");
	}
	return true;
}

stock LoadClanMember(clan)
{
	new string[128];
	format(string, sizeof(string), ClanMemberPatch, clan);
	new File = ini_openFile(string);
	if (File < 0)
	{
	    return 0;
	}
	new key[64];
	for (new i = 0; i < ClanInfo[clan][cPlayers]; i++)
	{
		format(key, sizeof(key), "cmUniqueID_%d", i);
	    ini_getInteger(File, key, ClanMember[clan][i][cmUniqueID]);
	    
		format(key, sizeof(key), "cmMysqlID_%d", i);
	    ini_getInteger(File, key, ClanMember[clan][i][cmMysqlID]);
	    
	    format(key, sizeof(key), "cmName_%d", i);
	    ini_getString(File, key, ClanMember[clan][i][cmName], MAX_PLAYER_NAME);

	    format(key, sizeof(key), "cmRank_%d", i);
	    ini_getInteger(File, key, ClanMember[clan][i][cmRank]);
	    
	    format(key, sizeof(key), "cmTimeStamp_%d", i);
	    ini_getInteger(File, key, ClanMember[clan][i][cmTimeStamp]);
	}
	ini_closeFile(File);
	return 1;
}

stock SaveClanMember(clan, slot)
{
	new string[128];
	format(string, sizeof(string), ClanMemberPatch, clan);
	new File = ini_openFile(string);
	if (File < 0)
	{
	    return 0;
	}
	new key[64];
	format(key, sizeof(key), "cmUniqueID_%d", slot);
	ini_setInteger(File, key, ClanMember[clan][slot][cmUniqueID]);

	format(key, sizeof(key), "cmMysqlID_%d", slot);
    ini_setInteger(File, key, ClanMember[clan][slot][cmMysqlID]);

    format(key, sizeof(key), "cmName_%d", slot);
    ini_setString(File, key, ClanMember[clan][slot][cmName]);

    format(key, sizeof(key), "cmRank_%d", slot);
    ini_setInteger(File, key, ClanMember[clan][slot][cmRank]);
    
    format(key, sizeof(key), "cmTimeStamp_%d", slot);
    ini_setInteger(File, key, ClanMember[clan][slot][cmTimeStamp]);
    
	ini_closeFile(File);
	return 1;
}

stock Clan_LinkPlayer(playerid, clan)
{
	new players = ClanInfo[clan][cPlayers]-1;
	ClanMember[clan][players][cmUniqueID] = ClanInfo[clan][cPlayersUniqueID];
	ClanMember[clan][players][cmMysqlID] = PlayerInfo[playerid][ID];
	format(ClanMember[clan][players][cmName], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][Name]);
	ClanMember[clan][players][cmRank] = PlayerInfo[playerid][ClanRank];
	SaveClanMember(clan, players);
	return 1;
}

stock Clan_RemovePlayer(account, clan)
{
	for (new i = 0; i < MAX_CLAN_MEMBERS; i++)
	{
		if(account == ClanMember[clan][i][cmMysqlID])
		{
			ClanMember[clan][i][cmUniqueID] = 0;
			ClanMember[clan][i][cmMysqlID] = 0;
			format(ClanMember[clan][i][cmName], MAX_PLAYER_NAME, "", "");
			ClanMember[clan][i][cmRank] = 0;
			ClanMember[clan][i][cmTimeStamp] =  0;
			SaveClanMember(clan, i);
		}
	}
	return 1;
}

stock Clan_SetName(account, clan, name[])
{
	for (new i = 0; i < MAX_CLAN_MEMBERS; i++)
	{
		if(account == ClanMember[clan][i][cmMysqlID])
		{
			format(ClanMember[clan][i][cmName], MAX_PLAYER_NAME, "%s", name);
			SaveClanMember(clan, i);
		}
	}
	return 1;
}

stock Clan_SetMemberRank(account, clan, rank)
{
	for (new i = 0; i < MAX_CLAN_MEMBERS; i++)
	{
		if(account == ClanMember[clan][i][cmMysqlID])
		{
			ClanMember[clan][i][cmRank] = rank;
			SaveClanMember(clan, i);
		}
	}
	return 1;
}

stock Clan_UpdateStamp(account, clan)
{
	for (new i = 0; i < MAX_CLAN_MEMBERS; i++)
	{
		if(account == ClanMember[clan][i][cmMysqlID])
		{
			ClanMember[clan][i][cmTimeStamp] =  gettime();
			SaveClanMember(clan, i);
		}
	}
	return 1;
}

forward LoadZones();
public LoadZones()
{
	new rows, fields,temp[32];
    cache_get_data(rows, fields);
    if(rows)
    {
    	for(new idx; idx < sizeof(ZoneInfo); idx++)
        {
			cache_get_field_content(idx,"zID",temp,mysqlConnection), ZoneInfo[idx][zID] = strval(temp);
			cache_get_field_content(idx,"zOwner",temp,mysqlConnection), ZoneInfo[idx][zOwner] = strval(temp);
			cache_get_field_content(idx,"zMinX",temp,mysqlConnection), ZoneInfo[idx][zMinX] = strval(temp);
			cache_get_field_content(idx,"zMinY",temp,mysqlConnection), ZoneInfo[idx][zMinY] = strval(temp);
			cache_get_field_content(idx,"zMaxX",temp,mysqlConnection), ZoneInfo[idx][zMaxX] = strval(temp);
			cache_get_field_content(idx,"zMaxY",temp,mysqlConnection), ZoneInfo[idx][zMaxY] = strval(temp);
			ZoneInfo[idx][zID] = GangZoneCreate(ZoneInfo[idx][zMinX],ZoneInfo[idx][zMinY],ZoneInfo[idx][zMaxX],ZoneInfo[idx][zMaxY]);
		}
	}
	zonesid = rows;
    printf("Загружено: %d ганг-зон.",zonesid);
	return true;
}

stock GetClanZone(clan)
{
	new count;
	for(new i = 0; i < zonesid; i++)
	{
		if(ZoneInfo[i][zOwner] == clan)
		{
			count ++;
		}
	}
	return count;
}

stock LoadPlayerGangZones(playerid)
{
	for(new i = 0; i < zonesid; i++)
	{
		if(!PlayerInfo[playerid][GangZoneOn])
		{
		    if(ZoneInfo[i][zOwner] == 0)
			{
				GangZoneShowForPlayer(playerid, i, -66);
			}else{
				new hex,gangcolor[50];
				new clan = ZoneInfo[i][zOwner];
			    format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[clan][cColorZone]);
			    hex = HexToInt(gangcolor);
				GangZoneShowForPlayer(playerid, i, hex);
			}
			if(ZoneInfo[i][zUnderAttack] != 0)
			{
				new hex,gangcolor[50];
				new uattack = ZoneInfo[i][zUnderAttack];
			    format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[uattack][cColorZone]);
			    hex = HexToInt(gangcolor);
				GangZoneFlashForPlayer(playerid,i,hex);
			}
		}
		else
		{
			GangZoneHideForPlayer(playerid,i);
		}
    }
    return 1;
}

stock GangZoneFlashForPlayers(zone,color)
{
	GangZoneFlashForAll(zone,color);
	for(new i; i < GetMaxPlayers(); i++)
	{
		if(PlayerInfo[i][GangZoneOn]) return 1;
		GangZoneFlashForPlayer(i,zone,color);
	}
	return 1;
}

stock GangZoneShowForPlayers(zone,color)
{
	GangZoneShowForAll(zone,color);
	for(new i; i < GetMaxPlayers(); i++)
	{
		if(PlayerInfo[i][GangZoneOn]) return 1;
		GangZoneShowForPlayer(i,zone,color);
	}
	return 1;
}

forward CaptureZone(zone);
public CaptureZone(zone)
{
	new string[128];
	new playerAttack = 0;
	new playerSecurity = 0;
	if (ZoneInfo[zone][zCaptureTime] > 0)
	{
		ZoneInfo[zone][zCaptureTime] --;
		for(new i;i<=GetPlayerPoolSize();i++)
	    {
		    new Float:x,Float:y,Float:z;
			GetPlayerPos(i,x,y,z);
			if(x >= ZoneInfo[zone][zMinX] && x <= ZoneInfo[zone][zMaxX] && y >= ZoneInfo[zone][zMinY] && y <= ZoneInfo[zone][zMaxY])
			{
		        if(ZoneInfo[zone][zUnderAttack] == PlayerInfo[i][Clan])
			    {
					playerAttack ++;
				}
				if(ZoneInfo[zone][zOwner] == PlayerInfo[i][Clan])
				{
					playerSecurity ++;
				}
			}
			else
			{
				if(ZoneInfo[zone][zUnderAttack] == PlayerInfo[i][Clan])
				{
					if(PlayerInfo[i][GangZone] == zone)
					{
						new uattack = ZoneInfo[zone][zUnderAttack];
					    SendClientMessage(i, CRED,"Ты покинул зону за которую воюет твой клан, клану -1 очко");
					    ZoneKills[zone][uattack] --;
					    PlayerInfo[i][GangZone] = -1;
				    }
				}
			}
	    }
    }
	if (ZoneInfo[zone][zCaptureTime] == 0)
	{
		if(ZoneInfo[zone][zOwner] == 0)
		{
			new uattack = ZoneInfo[zone][zUnderAttack];
			format(string,sizeof(string),"{FF0000}Твой клан захватил зону № %d",zone);
			SendTeamMessage(uattack,CRED,string);
			GangZoneStopFlashForAll(zone);
			GangZoneHideForAll(zone);
			new hex,gangcolor[50];
	        format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[uattack][cColorZone]);
	        hex = HexToInt(gangcolor);
			GangZoneShowForPlayers(zone, hex);
			ZoneInfo[zone][zOwner] = ZoneInfo[zone][zUnderAttack];
			ZoneInfo[zone][zUnderAttack] = 0;
			ZoneInfo[zone][zCaptureTime] = 0;
			ClanInfo[uattack][cCaptureZone] = -1;
			ZoneKills[zone][uattack] = 0;
			mysql_gangzone_update_int(zone, "zOwner", ZoneInfo[zone][zOwner]);
			KillTimer(ZoneInfo[zone][zCaptureTimer]);
		}
		if(ZoneInfo[zone][zOwner] != 0 && ZoneInfo[zone][zUnderAttack] != 0)
		{
			new uattack = ZoneInfo[zone][zUnderAttack];
			new zowner = ZoneInfo[zone][zOwner];
			if(ZoneKills[zone][uattack] >= ZoneKills[zone][zowner])
            {
	            format(string,sizeof(string),"{FF0000}Твой клан захватил зону № %d",zone);
			    SendTeamMessage(uattack,CRED,string);
	            format(string,sizeof(string),"{FF0000}Твой клан проиграл зону № %d",zone);
		        SendTeamMessage(zowner,CRED,string);
		        GangZoneStopFlashForAll(zone);
				GangZoneHideForAll(zone);
				new hex,gangcolor[50];
		        format(gangcolor, sizeof(gangcolor), "%sCC", ClanInfo[uattack][cColorZone]);
		        hex = HexToInt(gangcolor);
				GangZoneShowForPlayers(zone, hex);
				ZoneInfo[zone][zOwner] = ZoneInfo[zone][zUnderAttack];
				ZoneInfo[zone][zUnderAttack] = 0;
				ZoneInfo[zone][zCaptureTime] = 0;
				ClanInfo[uattack][cCaptureZone] = -1;
				ZoneKills[zone][uattack] = 0;
				mysql_gangzone_update_int(zone, "zOwner", ZoneInfo[zone][zOwner]);
            }
            if(ZoneKills[zone][uattack] >= ZoneKills[zone][zowner])
            {
	            format(string,sizeof(string),"{FF0000}Твой клан отстоял зону № %d",zone);
		        SendTeamMessage(uattack,CRED,string);
		        format(string,sizeof(string),"{FF0000}Попытка захватить зону № %d провалилась",zone);
			    SendTeamMessage(zowner,CRED,string);
			    GangZoneStopFlashForAll(zone);
			    ZoneInfo[zone][zUnderAttack] = 0;
			    ZoneInfo[zone][zCaptureTime] = 0;
			    ClanInfo[uattack][cCaptureZone] = -1;
			    ZoneKills[zone][uattack] = 0;
            }
            KillTimer(ZoneInfo[zone][zCaptureTimer]);
		}
	}
	ZoneInfo[zone][zCaptureTimer] = SetTimerEx("CaptureZone", 1000, false , "d" , zone);
	return 1;
}

forward LoadHouses();
public LoadHouses()
{
	new temp[32],rows,fields;
    cache_get_data(rows,fields,mysqlConnection);
    if(rows)
    {
        for(new idx = 0; idx < rows; idx++)
        {
            cache_get_field_content(idx,"hID",temp,mysqlConnection), HouseInfo[idx][hID] = strval(temp);
            cache_get_field_content(idx,"hOwner", HouseInfo[idx][hOwner], mysqlConnection, 24);
            cache_get_field_content(idx,"hOwnedID",temp,mysqlConnection), HouseInfo[idx][hOwnedID] = strval(temp);
            cache_get_field_content(idx,"hLevel",temp,mysqlConnection), HouseInfo[idx][hLevel] = strval(temp);
            cache_get_field_content(idx,"hInterior",temp,mysqlConnection), HouseInfo[idx][hInterior] = strval(temp);
            cache_get_field_content(idx,"hEnterX",temp,mysqlConnection), HouseInfo[idx][hEnterX] = floatstr(temp);
            cache_get_field_content(idx,"hEnterY",temp,mysqlConnection), HouseInfo[idx][hEnterY] = floatstr(temp);
            cache_get_field_content(idx,"hEnterZ",temp,mysqlConnection), HouseInfo[idx][hEnterZ] = floatstr(temp);
            cache_get_field_content(idx,"hCarX",temp,mysqlConnection), HouseInfo[idx][hCarX] = floatstr(temp);
            cache_get_field_content(idx,"hCarY",temp,mysqlConnection), HouseInfo[idx][hCarY] = floatstr(temp);
            cache_get_field_content(idx,"hCarZ",temp,mysqlConnection), HouseInfo[idx][hCarZ] = floatstr(temp);
            cache_get_field_content(idx,"hCarA",temp,mysqlConnection), HouseInfo[idx][hCarA] = floatstr(temp);
            cache_get_field_content(idx,"hLocked",temp,mysqlConnection), HouseInfo[idx][hLocked] = strval(temp);
            cache_get_field_content(idx,"hCostRent",temp,mysqlConnection), HouseInfo[idx][hCostRent] = strval(temp);
            cache_get_field_content(idx,"hBank",temp,mysqlConnection), HouseInfo[idx][hBank] = strval(temp);
            cache_get_field_content(idx,"hName", HouseInfo[idx][hName], mysqlConnection, 64);
            cache_get_field_content(idx,"hVayp",temp,mysqlConnection), HouseInfo[idx][hVayp] = strval(temp);
            HouseInfo[houseid][hInfo] = CreateDynamic3DTextLabel(" ", 0x45D14DFF, HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,-1,-1,10.0);
            CreateDynamic3DTextLabel("Встав на иконку и нажав клавишу N откроется меню о доме", 0x00FF00DD, HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ]+0.4, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, -1, -1, 6.0);
            UpdateHouse(houseid);
            houseid ++;
        }
    }
    houseid = rows;
    printf("Загружено: %d домов",houseid);
    return true;
}

forward adm_ChangeClanName(playerid, clan, name[]);
public adm_ChangeClanName(playerid, clan, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new fstr[256];

		format(fstr, sizeof(fstr), "Клан %s %s [%d] переименован в %s", ClanInfo[clan][cName], ClanInfo[clan][cTag], clan, name);
		SendClientMessage(playerid,CRED,fstr);

		mysql_format(mysqlConnection, fstr, sizeof(fstr), "UPDATE `clans` SET `cName` = '%e' WHERE `cID` = '%d'", name, clan);
		mysql_tquery(mysqlConnection, fstr, "", "");
		format(ClanInfo[clan][cName], 24, "%s", name);
		
		format(fstr,sizeof(fstr),"Админ %s [%d] сменил клану [%d] название на %s", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], clan, name);
	    Logs_Admins(gettime(), fstr);
		
		ShowAdmin_input(playerid, adm_clanRename_input);
	}
	else
	{
		ShowAdmin_input(playerid, adm_clanRename_input);
		return SendClientMessage(playerid, COLOR_GREY, "Такое название уже есть");
	}
	return true;
}

forward adm_ChangeClanTag(playerid, clan, name[]);
public adm_ChangeClanTag(playerid, clan, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new fstr[256];

		format(fstr, sizeof(fstr), "Тег %s клана %s [%d] переименован в %s", ClanInfo[clan][cTag], ClanInfo[clan][cName], clan, name);
		SendClientMessage(playerid,CRED,fstr);

		mysql_format(mysqlConnection, fstr, sizeof(fstr), "UPDATE `clans` SET `cTag` = '%e' WHERE `cID` = '%d'", name, clan);
		mysql_tquery(mysqlConnection, fstr, "", "");
		format(ClanInfo[clan][cTag], 24, "%s", name);
		
		format(fstr,sizeof(fstr),"Админ %s [%d] сменил клану %s [%d] тег на [%s]", PlayerInfo[playerid][Name], PlayerInfo[playerid][ID], ClanInfo[clan][cTag], clan, name);
	    Logs_Admins(gettime(), fstr);

		ShowAdmin_input(playerid, adm_clanRetag_input);
	}
	else
	{
		ShowAdmin_input(playerid, adm_clanRetag_input);
		return SendClientMessage(playerid, COLOR_GREY, "Такой тег уже есть");
	}
	return true;
}

stock GetRankName(id)
{
	new name_rank[40];
	switch(id)
	{
		case 1: name_rank = "Новичок";
		case 2: name_rank = "Воин";
		case 3: name_rank = "Зам.вожак";
		case 4: name_rank = "Главный заместитель";
		case 5: name_rank = "Клан лидер";
	}
	return name_rank;
}

stock MaxPlayerClan(clan)
{
	new maxpl;
	switch(ClanInfo[clan][cLevel])
	{
		case 0: maxpl = 0;
		case 1: maxpl = 3;
		case 2: maxpl = 4;
		case 3: maxpl = 5;
		case 4..8: maxpl = ClanInfo[clan][cLevel]+2;
		case 9: maxpl = ClanInfo[clan][cLevel]+1;
		case 10..50: maxpl = ClanInfo[clan][cLevel];
	}
	return maxpl;
}

stock MaxZonesClan(clan)
{
	new maxzone;
	switch(ClanInfo[clan][cLevel])
	{
		case 1..9: maxzone = 5;
		case 10..19: maxzone = 10;
		case 20..29: maxzone = 15;
		case 30..39: maxzone = 20;
		default: maxzone = 25;
	}
	return maxzone;
}

stock SetClanTeam(playerid)
{
	if(PlayerInfo[playerid][Clan])
	{
		SetPlayerTeam(playerid, PlayerInfo[playerid][Clan]);
	}else{
		SetPlayerTeam(playerid, NO_TEAM);
	}
	return 1;
}

stock ClanList(playerid, fromslot)
{
    new string[2048], coren[128], msg[256], clan;
    strcat(string,"Номер\tНазвание\tТег\n");
	for(new i = fromslot; i < fromslot + 50; i++)
	{
		if( i < clanid)
		{
            if(!ClanInfo[i][cOwnedID]) continue;
			format(msg, sizeof(msg), "{FFFFFF}%d\t{FFFF00}%s\t{FFFF00}%s\n", i, ClanInfo[i][cName], ClanInfo[i][cTag]);
			strcat(string, msg);
		}
		if( i == ( fromslot + 50 ) - 1 && i < clanid) format(coren, sizeof(coren), "Далее");
		else format(coren, sizeof(coren), "Назад");
		PlayerInfo[playerid][ListItem][clan] = i;
		clan = i;
	}
	if(!clan)
    {
        ShowClanMenu(playerid, d_ClanMenu);
	    return SendClientMessage(playerid,COLOR_GREY,"Ни 1 клан не создан");
    }
	SetPVarInt(playerid, "ClansList", fromslot);
	SetPVarInt(playerid, "ClansListID", clan);
	ShowPlayerDialogEx(playerid, "ClanList", DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Список кланов", string, "Выбрать", coren);
	return 1;
}

DIALOG:ClanList(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		if( GetPVarInt(playerid, "ClansListID") == ( GetPVarInt(playerid, "ClansList") + 50 ) - 1 && GetPVarInt(playerid, "ClansListID") < clanid)
		{
			ClanList(playerid, GetPVarInt(playerid, "ClansList") + 50);
		}else{
			ShowClanMenu(playerid, d_ClanMenu);
		}
		return 1;
	}
	//if(!strlen(inputtext)) return true;
	/*new dotPos = strfind(inputtext, ".");
	if(dotPos < 1) return true;
	new showClanTemp[16];
	strmid(showClanTemp, inputtext, 0, dotPos);
	new clan = strval(showClanTemp);
	if(clan == 0) if(strlen(showClanTemp) != 1 || showClanTemp[0] != '0') return true;

	if(clanid < 0 || clanid > MAX_CLAN) return true;*/
	ShowClanStat(playerid, PlayerInfo[playerid][ListItem][listitem], "ClanStats2");
	return 1;
}

stock ClanRating(playerid)
{
	new string[1024], msg[256], amount;
	new index;
	new topclan[MAX_CLAN];
	new toprating[MAX_CLAN];
	for(new i; i != clanid; ++i)
    {
	    if(!ClanInfo[i][cOwnedID]) continue;
		toprating[index] = (ClanInfo[i][cPlayers]+ClanInfo[i][cLevel]+GetClanZone(i))*2;
		topclan[index++] = i;
	}
	GetPlayerHighestScores(topclan, toprating, 0, index);
	strcat(string,"Место\tРейтинг\tНомер\tНазвание, тег\n");
	for(new i; i < 50; ++i)
	{
		if(i < index)
		{
			new clan = topclan[i];
			format(msg, sizeof(msg), "{FFFFFF}%d.\t{00FF00}%d\t{FFFFFF}№%d\t{FFFF00}%s {FFFFFF}| {FFFF00}%s\n", i+1, toprating[i], topclan[i], ClanInfo[clan][cName] ,ClanInfo[clan][cTag]);
			strcat(string, msg);
			amount = i;
			PlayerInfo[playerid][ListItem][amount] = topclan[i];
		}
	}
	if(!index)
	{
		ShowClanMenu(playerid, d_ClanMenu);
		return SendClientMessage(playerid,COLOR_GREY,"Ни 1 клан не создан");
	}
	ShowPlayerDialogEx(playerid, "ClanRating", DIALOG_STYLE_TABLIST_HEADERS, "{"#COLOR_DIALOG_MENU"}Список кланов - сортировка по рейтингу (Макс 50 кланов)", string, "Выбрать", "Назад");
	return 1;
}

DIALOG:ClanRating(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowClanMenu(playerid, d_ClanMenu);
	ShowClanStat(playerid, PlayerInfo[playerid][ListItem][listitem], "ClanStats3");
	return 1;
}

stock ClanMemberList(playerid)
{
	if(PlayerInfo[playerid][Clan])
	{
		new clan = PlayerInfo[playerid][Clan];
		
		new count = 0;
		
		for (new i = 0; i < MAX_CLAN_MEMBERS; i++)
		{
			if (ClanMember[clan][i][cmUniqueID] <= 0)
		    {
		        continue;
		    }
		    
		    PlayerInfo[playerid][ClanPlaceList][count] = i;
		    
		    PlayerInfo[playerid][ClanGIDList][count] = ClanMember[clan][i][cmUniqueID];
		    
		    count++;
		}
		
		new string[1024], str[256];
		for (new i = 0; i < count; i++)
		{
			if (i > 0)
			{
				format(string, sizeof(string), "%s\n", string);
			}
			
			new place = PlayerInfo[playerid][ClanPlaceList][i];
			
			new id = GetPlayerID_Name(ClanMember[clan][place][cmName]);
		    if(!IsPlayerConnected(id))
		    {
			    format(str,sizeof(str),"{FFFFFF}%s - {FFFF00}%s\n", ClanMember[clan][place][cmName], GetRankName(ClanMember[clan][place][cmRank]));
		    } else{
			    format(str,sizeof(str),"{00FF00}%s [%d] - {FFFF00}%s\n", ClanMember[clan][place][cmName], id, GetRankName(ClanMember[clan][place][cmRank]));
			    //if(PlayerInfo[id][AFK] > 10)
			    if(IsPlayerPaused(id))
	            {
		            format(str,sizeof(str),"{00FFFF}%s [%d] - %s\n", ClanMember[clan][place][cmName], id, GetRankName(ClanMember[clan][place][cmRank]));
	            }
	        }
	        strcat(string,str);
		}

		ShowPlayerDialogEx(playerid, "ClanMemberList", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Список игроков в клане", string, "Выбрать", "Назад");
	}
	return 1;
}

DIALOG:ClanMemberList(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowClanMenu(playerid, d_ClanMng);
	if(!PlayerInfo[playerid][Clan]) return 1;
	new clan = PlayerInfo[playerid][Clan];
	SetPVarInt(playerid, "ClanNumberToManage", listitem);
	new number = GetPVarInt(playerid, "ClanNumberToManage");
	new place = PlayerInfo[playerid][ClanPlaceList][number];
	
	if (PlayerInfo[playerid][ClanGIDList][number] != ClanMember[clan][place][cmUniqueID]) return 1;

	if(PlayerInfo[playerid][ID] == ClanMember[clan][place][cmMysqlID])
	{
		SendClientMessage(playerid,COLOR_GREY,"Ты не можешь тыкать на себя");
		return ClanMemberList(playerid);
 	}

	if(PlayerInfo[playerid][ClanRank] < 3)
	{
		SendClientMessage(playerid,COLOR_GREY,"Ты не можешь выполнять клановые операции");
		return ClanMemberList(playerid);
	}

	if(IsPlayerConnected(GetPlayerID_Name(ClanMember[clan][place][cmName])))
	{
		SendClientMessage(playerid,COLOR_GREY,"Игрок онлайн, воспользуйся меню в Tab кликнув по игроку чтобы выполнить клановые действия");
		return ClanMemberList(playerid);
 	}

	ShowClanMenu(playerid, d_ClanMemberList2);
	return 1;
}

stock TeleportMenu(playerid)
{
	new string[sizeof(TeleportInfo)*50];
	string = "К дому\n";
	for (new i = 0; i < sizeof(TeleportInfo); i++)
	{
		format(string, sizeof(string),
			"%s%s\n",
			string,
			TeleportInfo[i][teleportName]
		);
	}
	ShowPlayerDialogEx(playerid, "TeleportMenu", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Телепорты", string, "Выбрать", "Назад");
	return 1;
}

DIALOG:TeleportMenu(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Menu);
	if(PlayerInfo[playerid][JailTime]) return SendClientMessage(playerid,COLOR_GREY,"Ты в тюрьме!");
	if(listitem == 0)
	{
		if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID)
		{
			TeleportMenu(playerid);
			return SendClientMessage(playerid,COLOR_GREY,"У тебя нет дома");
		}
		new h = PlayerInfo[playerid][House];
		PlayerTeleport(playerid, HouseInfo[h][hEnterX],HouseInfo[h][hEnterY],HouseInfo[h][hEnterZ], 270.0000, 0, 0);
	}
	else
	{
		new number = listitem-1;
		PlayerTeleport(playerid, TeleportInfo[number][teleportPos_X], TeleportInfo[number][teleportPos_Y], TeleportInfo[number][teleportPos_Z], TeleportInfo[number][teleportPos_A], TeleportInfo[number][teleportInterior], 0);
	}
	return 1;
}

stock ShowMenu_FightStyle(playerid)
{
	new string[(sizeof(msg_FightStyle)*40)], msg[(sizeof(msg_FightStyle)*2)+20];
	for (new i = 0; i < sizeof(msg_FightStyle); i++)
	{
		format(msg, sizeof(msg), "%s\n", msg_FightStyle[i]);
		if(PlayerInfo[playerid][FightStyle] == i)
		{
			format(msg, sizeof(msg), "{00FF00}%s\n", msg_FightStyle[i]);
		}
		strcat(string, msg);
	}
	ShowPlayerDialogEx(playerid, "FightStyle", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Стили боя", string, "Выбрать", "Назад");
    return 1;
}

DIALOG:FightStyle(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Setting);
	PlayerInfo[playerid][FightStyle] = listitem;
    SendClientMessage(playerid,CLIGHTGREEN,"Ты сменил стиль боя, зажми правую кнопку мыши и одновременно нажми F для просмотра");
    mysql_player_update_int(playerid, "FightStyle", PlayerInfo[playerid][FightStyle]);
    SetSpawnFightingStyle(playerid);
    ShowMenu_FightStyle(playerid);
	return 1;
}

stock SetSpawnFightingStyle(playerid)
{
	switch(PlayerInfo[playerid][FightStyle])
    {
	    case 0: SetPlayerFightingStyle(playerid,FIGHT_STYLE_NORMAL);
	    case 1: SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
	    case 2: SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
	    case 3: SetPlayerFightingStyle(playerid,FIGHT_STYLE_KNEEHEAD);
	    case 4: SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
	    case 5: SetPlayerFightingStyle(playerid,FIGHT_STYLE_ELBOW);
    }
	return 1;
}

stock ShowMenu_GodMode(playerid)
{
	if(!PlayerInfo[playerid][GodMode])
	{
		ShowPlayerDialogEx(playerid, "GodMode", DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Бессмертие", str_GodMode_1, "Да", "Назад");
	} else {
		ShowPlayerDialogEx(playerid, "GodMode", DIALOG_STYLE_MSGBOX, "{"#COLOR_DIALOG_MENU"}Бессмертие", str_GodMode_2, "Да", "Назад");
	}
    return 1;
}

DIALOG:GodMode(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Setting);
	if(!PlayerInfo[playerid][GodModeTime])
	{
		if(!PlayerInfo[playerid][GodMode])
		{
			SendClientMessage(playerid,CLIGHTGREEN,"Через 60 секунд ты станешь бессмертным");
		} else {
			SendClientMessage(playerid,CLIGHTGREEN,"Через 60 секунд ты станешь смертным");
		}
		PlayerInfo[playerid][GodModeTime] = 60;
	}
	else
	{
		new msg[96];
		if(!PlayerInfo[playerid][GodMode])
		{
			format(msg, sizeof(msg), "Через %d секунд ты станешь бессмертным", PlayerInfo[playerid][GodModeTime]);
		} else {
			format(msg, sizeof(msg), "Через %d секунд ты станешь смертным", PlayerInfo[playerid][GodModeTime]);
		}
		SendClientMessage(playerid,CLIGHTGREEN,msg);
	}
	return 1;
}

stock ShowMenu_WorldTime(playerid)
{
	new string[(sizeof(msg_WorldTime)*30)], msg[sizeof(msg_WorldTime)*2];
	for (new i = 0; i < sizeof(msg_WorldTime); i++)
	{
		format(msg, sizeof(msg), "%s\n", msg_WorldTime[i]);
		if(PlayerInfo[playerid][WorldTime] == i)
		{
			format(msg, sizeof(msg), "{00FF00}%s\n", msg_WorldTime[i]);
		}
		strcat(string, msg);
	}
	ShowPlayerDialogEx(playerid, "WorldTime", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Изменить себе игровое время суток", string, "Выбрать", "Назад");
    return 1;
}

DIALOG:WorldTime(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Setting);
	new string[64];
	PlayerInfo[playerid][WorldTime] = listitem;
	format(string, sizeof(string), "Время установлено на: %s", msg_WorldTime[listitem]);
    SendClientMessage(playerid,CLIGHTGREEN,string);
    if(PlayerInfo[playerid][WorldTime] != 24)
    {
	    SetPlayerTime(playerid, PlayerInfo[playerid][WorldTime], 0);
    }
    mysql_player_update_int(playerid, "WorldTime", PlayerInfo[playerid][WorldTime]);
    ShowMenu_WorldTime(playerid);
	return 1;
}

stock ShowMenu_Weather(playerid)
{
	new string[(sizeof(msg_Weather)*30)], msg[sizeof(msg_Weather)*2];
	for (new i = 0; i < sizeof(msg_Weather); i++)
	{
		format(msg, sizeof(msg), "%s\n", msg_Weather[i]);
		if(PlayerInfo[playerid][Weather] == i)
		{
			format(msg, sizeof(msg), "{00FF00}%s\n", msg_Weather[i]);
		}
		strcat(string, msg);
	}
	ShowPlayerDialogEx(playerid, "Weather", DIALOG_STYLE_LIST, "{"#COLOR_DIALOG_MENU"}Изменить себе погоду", string, "Выбрать", "Назад");
    return 1;
}

DIALOG:Weather(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowMenu(playerid, d_Setting);
	new string[64];
	PlayerInfo[playerid][Weather] = listitem;
	format(string, sizeof(string), "Ты сменил себе погоду на: %s", msg_Weather[listitem]);
    SendClientMessage(playerid,CLIGHTGREEN,string);
    if(PlayerInfo[playerid][Weather] != 16)
    {
	    SetPlayerWeather(playerid, weatherarray[PlayerInfo[playerid][Weather]]);
    }
    mysql_player_update_int(playerid, "Weather", PlayerInfo[playerid][Weather]);
    ShowMenu_Weather(playerid);
	return 1;
}

stock searchAccountIP(playerid, targetid)
{
	new contents[50], button1[50];
	new SearchIP, str[528];
	f(str,"Ид\t\t\t\tНик\t\tIP\n%s", str);
	for(new i;i<=GetPlayerPoolSize();i++)
    {
        if(!IsPlayerConnected(i)) continue;
        if(!PlayerInfo[i][Logged]) continue;
        if(strfind(PlayerInfo[i][GetIP],PlayerInfo[targetid][GetIP],true) != -1 && targetid != i)
        {
	        format(str, sizeof(str), "%s%d\t\t\t\t%s\t\t%s\n", str, i, PlayerInfo[i][Name], PlayerInfo[i][GetIP]);
	        PlayerInfo[playerid][ListItem][SearchIP] = i;
		    SearchIP++;
	    }
    }
    if(!SearchIP) strcat(str, "Других аккаунтов нет в игре");
    SetPVarInt(playerid, "ItemAmount", SearchIP);
	f(contents,"{"#COLOR_DIALOG_MENU"}Аккаунты c IP игрока %s [%d]",PlayerInfo[targetid][Name],targetid);
	if(GetPVarInt(playerid, "ItemAmount") == 0)
	{
		strcat(button1, "Выход");
	} else {
		strcat(button1, "Выбрать");
	}
	ShowPlayerDialogEx(playerid, "searchAccountIP", DIALOG_STYLE_TABLIST_HEADERS, contents, str, button1, "Назад");
	return 1;
}

DIALOG:searchAccountIP(playerid, response, listitem, inputtext[])
{
	if(!response) return ShowAdmin(playerid, d_admPlayer, 1);
	if(GetPVarInt(playerid, "ItemAmount") == 0)
	{
 	    searchAccountIP(playerid, GetPVarInt(playerid, "ClickPlayer"));
    }else{
	    OnPlayerClickPlayer(playerid, PlayerInfo[playerid][ListItem][listitem], 0);
    }
    if(!IsPlayerConnected(GetPVarInt(playerid, "ClickPlayer"))) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
	return 1;
}

stock UpdateHouse(hid)
{
	new tmp[64], info[384];
	DestroyDynamicMapIcon(HouseInfo[hid][hIconID]);
	DestroyDynamicPickup(HouseInfo[hid][hPickup]);
	DestroyDynamicPickup(HouseInfo[hid][hPickupLock]);
	if(strcmp(HouseInfo[hid][hName], " ", false))
	{
		format(tmp, sizeof(tmp), "{00FF00}%s\n", HouseInfo[hid][hName]);
		strcat(info, tmp);
	}
	format(tmp, sizeof(tmp), "{00FFFF}Уровень:{FFFF00} %d\n", HouseInfo[hid][hLevel]);
	strcat(info, tmp);
	if(HouseInfo[hid][hOwnedID] == 0)
	{
		HouseInfo[hid][hPickup] = CreateDynamicPickup(1273, 23, HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ],0,-1,-1,30.0);
        HouseInfo[hid][hIconID] = CreateDynamicMapIcon(HouseInfo[hid][hEnterX], HouseInfo[hid][hEnterY], HouseInfo[hid][hEnterZ], 31, 0, 0, -1, -1, 100.0);
		format(tmp, sizeof(tmp), "{00FFFF}Цена: ${00FF00}%d\n", GetHouseCost(HouseInfo[hid][hLevel]));
		strcat(info, tmp);
	} else {
	    HouseInfo[hid][hPickup] = CreateDynamicPickup(1272, 23, HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ],0,-1,-1,30.0);
	    if(HouseInfo[hid][hLocked] == 0)
	    {
		    HouseInfo[hid][hPickupLock] = CreateDynamicPickup(1318, 23, HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ]+1,0,-1,-1,30.0);
	    }
		format(tmp, sizeof(tmp), "{00FFFF}Владелец: {FFFF00}%s\n", HouseInfo[hid][hOwner]);
		strcat(info, tmp);
		if(HouseInfo[hid][hCostRent] > 0)
		{
			format(tmp, sizeof(tmp), "{00FFFF}Стоимость аренды: ${00FF00}%d\n", HouseInfo[hid][hCostRent]);
			strcat(info, tmp);
			DestroyDynamicPickup(HouseInfo[hid][hPickup]);
			HouseInfo[hid][hPickup] = CreateDynamicPickup(19523, 23, HouseInfo[hid][hEnterX],HouseInfo[hid][hEnterY],HouseInfo[hid][hEnterZ],0,-1,-1,30.0);
		}
	}
	format(tmp, sizeof(tmp), "{00FFFF}Дом №:{FFFF00} %d\n", hid);
	strcat(info, tmp);
	UpdateDynamic3DTextLabelText(HouseInfo[hid][hInfo], -1, info);
}

stock GetHouseCost(level)
{
	new cost = 1;
	switch(level)
	{
		case 1: cost = 10000;
		case 10: cost = 170000;
		case 30: cost = 230000;
		case 50: cost = 200000;
		case 70: cost = 250000;
		case 90: cost = 1000000;
		case 100: cost = 5000000;
	}
	return cost;
}

stock SetHouseRandomInt(level)
{
	new setInterier[sizeof(HouseInt)],
	intcount;
	for(new i = 0; i < sizeof(HouseInt); i++)
	{
		if(HouseInt[i][intLevel] == level)
		{
			setInterier[intcount] = i;
			intcount ++;
		}
	}
	new randomint = random(intcount);
	return setInterier[randomint];
	
}

stock OnHouseEnter(playerid)
{
	new hid = INVALID_HOUSE_ID;
	for(new i = 0; i < houseid; i++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hEnterX], HouseInfo[i][hEnterY], HouseInfo[i][hEnterZ])) continue;
		hid = i;
		break;
	}
	return hid;
}

forward RestartGame();
public RestartGame()
{
    SendClientMessageToAll(CRED,"Был произведен рестарт сервера, вы можете оставаться на нем, рестарт длится несколько секунд");
    GameModeExit();
    SendRconCommand("gmx");
	return true;
}

/*stock GeoIPHTTP(playerid)
{
	new url[64];
	format(url, sizeof(url), "ipgeobase.ru:7020/geo?ip=%s", PlayerInfo[playerid][GetIP]);
	HTTP(playerid, HTTP_GET, url, "", "OnGeoHTTPResponse");
	return 1;
}

forward OnGeoHTTPResponse(playerid, response_code, data[]);
public OnGeoHTTPResponse(playerid, response_code, data[])
{
	if(response_code == 200)
	{
        new xml[4][2], region[32], district[32];
		xml[0][0] = strfind(data,"<country>", true);
		xml[0][1] = strfind(data,"</country>", true);
		xml[1][0] = strfind(data,"<city>", true);
		xml[1][1] = strfind(data,"</city>", true);
		xml[2][0] = strfind(data,"<region>", true);
		xml[2][1] = strfind(data,"</region>", true);
		xml[3][0] = strfind(data,"<district>", true);
		xml[3][1] = strfind(data,"</district>", true);

		strmidex(PlayerInfo[playerid][GetCountry],  data,  9 + xml[0][0], xml[0][1], 64);
		strmidex(PlayerInfo[playerid][GetCity],  data,  6 + xml[1][0], xml[1][1], 64);
		strmidex(region,  data,  8 + xml[2][0], xml[2][1], 64);
		strmidex(district,  data,  10 + xml[3][0], xml[3][1], 64);
		format(PlayerInfo[playerid][GetRegion], 128, "%s, %s", region, district);
		GeoIPCodesCountry(PlayerInfo[playerid][GetCountry]);

	}
	else
	{
		printf("[GeoIP] Couldn't get geoip stats for player %i. Response Code: %i", playerid, response_code);
	}
	return 1;
}*/

stock mysql_player_update_int(playerid, field[], data)
{
    new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `accounts` SET `%s` = '%d' WHERE `ID` = '%d'",field,data,PlayerInfo[playerid][ID]);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_player_update_float(playerid, field[], Float:data)
{
    new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `accounts` SET `%s` = '%f' WHERE `ID` = '%d'",field,data,PlayerInfo[playerid][ID]);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_player_update_str(playerid, field[], data[])
{
	new query[256];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `accounts` SET `%s` = '%e' WHERE `ID` = '%d'",field,data,PlayerInfo[playerid][ID]);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_clan_update_int(clan, field[], data)
{
    new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `clans` SET `%s` = '%d' WHERE `cID` = '%d'",field,data,clan);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_clan_update_str(clan, field[], data[])
{
	new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `clans` SET `%s` = '%e' WHERE `cID` = '%d'",field,data,clan);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_house_update_int(house, field[], data)
{
    new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `houses` SET `%s` = '%d' WHERE `hID` = '%d'",field,data,house);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_house_update_str(house, field[], data[])
{
    new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `houses` SET `%s` = '%e' WHERE `hID` = '%d'",field,data,house);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock mysql_gangzone_update_int(zid, field[], data)
{
    new query[128];
    mysql_format(mysqlConnection,query,sizeof(query),"UPDATE `gangzones` SET `%s` = '%d' WHERE `zID` = '%d'",field,data,zid);
	mysql_tquery(mysqlConnection,query, "", "");
    return 1;
}

stock SetPlayerMoney(playerid, money)
{
	PlayerInfo[playerid][Money] = money;
	mysql_player_update_int(playerid, "Money", money);
	ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
	return 1;
}

stock SetPlayerMoneyBank(playerid, bmoney)
{
	PlayerInfo[playerid][Bank] = bmoney;
	mysql_player_update_int(playerid, "Bank", bmoney);
	return 1;
}

stock SetPlayerPoints(playerid, point)
{
	PlayerInfo[playerid][Points] = point;
	mysql_player_update_int(playerid, "Points", PlayerInfo[playerid][Points]);
	return 1;
}

stock SetPlayerKills(playerid, kills)
{
    PlayerInfo[playerid][Kills] = kills;
	mysql_player_update_int(playerid, "Kills", PlayerInfo[playerid][Kills]);
	return 1;
}

stock SetPlayerDeaths(playerid, death)
{
	PlayerInfo[playerid][Death] = death;
	mysql_player_update_int(playerid, "Death", PlayerInfo[playerid][Death]);
	return 1;
}

stock IsPlayerVip(playerid)
{
	if(PlayerInfo[playerid][Vip] > 0) return true;
	return false;
}

stock IsValidAdminLevel(level)
{
	if(level > 0)
	{
	 	switch(level)
	    {
		   	case VALID_ADMIN_LEVEL:
		 	{
		 		return 1;
		 	}
	 	}
 	}
	return 0;
}

stock IsAdminAccess(playerid, level, type = 0)
{
	switch(type)
    {
		case 0://Для текста "У тебя нет прав использовать эту команду!"
		{
			if(PlayerInfo[playerid][AdminLevel] < level) return true;
		}
		case 1://Для диалогов
		{
			if(PlayerInfo[playerid][AdminLevel] >= level) return true;
		}
	}
	return false;
}

stock IsPlayerGodMode(playerid)
{
	if(GetPVarInt(playerid, "AGodMode") == 1 || PlayerInfo[playerid][GodMode] == 1 || PlayerInfo[playerid][AntiSK]) return true;
	return false;
}

stock IsValidCode(playerid)
{
	if(!strcmp(PlayerInfo[playerid][Code], " ", false)) return false;
	return true;
}

stock IsOkEmail(playerid)
{
	if(!strcmp(PlayerInfo[playerid][Email], " ", false)) return false;
	return true;
}

stock ChangePassword(playerid, newkey[])
{
  	new string[128];
	format(PlayerInfo[playerid][Password],MAX_PLAYER_PASSWORD,"%s",newkey);
	format(string,sizeof(string),"Твой новый пароль - %s",newkey);
   	SendClientMessage(playerid,CYELLOW,string);
   	mysql_player_update_str(playerid, "Password", newkey);
	return true;
}

stock ChangeCode(playerid, newcode[])
{
  	new string[128];
	strmid(PlayerInfo[playerid][Code], newcode, 0, strlen(newcode), MAX_PLAYER_PASSWORD);
	format(string, sizeof(string), "{"#cYELLOW"}Твоё новое секретное слово - %s", PlayerInfo[playerid][Code]);
	SendClientMessage(playerid, CYELLOW, string);
	mysql_player_update_str(playerid, "Code", newcode);
	return true;
}

stock senderEmail(account, name[], key[], email[], checkemail, emailkey, generatepass[])
{
    new str[256],sctring[256];
	format(str,sizeof(str),"Твой аккаунт(логин, ник): %s\n", name);
	strcat(sctring,str);
	format(str,sizeof(str),"Номер аккаунта: %d\n", account);
	strcat(sctring,str);
	format(str,sizeof(str),"Пароль от аккаунта: %s\n", key);
	strcat(sctring,str);
    if(checkemail == 1 && emailkey)
    {
		format(str,sizeof(str),"Пароль для подтверждения открепления Email(ввести в игре нажав Y - Настройки - Email): %d\n", emailkey);
		strcat(sctring,str);
	}
	if(checkemail == 0 && emailkey)
    {
		format(str,sizeof(str),"Пароль для подтверждения Email (ввести в игре нажав Y - Настройки - Email): %d\n", emailkey);
		strcat(sctring,str);
	}
	if(strlen(generatepass))
    {
		format(str,sizeof(str),"Сгенерированный новый пароль - %s\n", generatepass);
		strcat(sctring,str);
		strcat(sctring,"Если ты не генерировал новый пароль, проигнорируй это письмо");
	}
    SendMail(email, EMAIL_RECEIVER, EMAIL_SENDERMAIL, EMAIL_SENDERMAIL, sctring);
    return 1;
}

stock SenderEmail(playerid)
{
	new account = PlayerInfo[playerid][ID];
	new name[32],key[128],email[MAX_PLAYER_EMAIL];
	new checkemail = PlayerInfo[playerid][CheckEmail];
	new emailkey = PlayerInfo[playerid][EmailKey];
	format(name,32,"%s",PlayerInfo[playerid][Name]);
	format(key,128,"%s",PlayerInfo[playerid][Password]);
	format(email,MAX_PLAYER_EMAIL,"%s",PlayerInfo[playerid][Email]);
	senderEmail(account, name, key, email, checkemail, emailkey, "");
	return true;
}

stock OnPlayerJail(playerid, time)
{
	if(time > 10 && PlayerInfo[playerid][Vip])
	{
		time = time/2;
	}
	PlayerInfo[playerid][JailTime] = time;
	PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
	OnPlayerSpawn(playerid);
	return 1;
}

stock SetPlayerLevel(playerid, level)
{
	PlayerInfo[playerid][Level] = level;
	if(PlayerInfo[playerid][ReferalID] != 0)
	{
		PlayerInfo[playerid][ReferalBonus] += level/10;
		mysql_player_update_int(playerid, "ReferalBonus", PlayerInfo[playerid][ReferalBonus]);
	}
	SetPlayerScore(playerid,PlayerInfo[playerid][Level]);
	mysql_player_update_int(playerid, "Level", PlayerInfo[playerid][Level]);
	return 1;
}

stock GivePlayerKillExp(id, notid, exp)
{
	new nxtexp;
	
	//nxtexp = (exp/PlayerInfo[id][Exp])+(PlayerInfo[notid][Level]+PlayerInfo[id][Level])*2;
	
	nxtexp = (exp/NeedPlayerExp(id))+(PlayerInfo[notid][Level]+PlayerInfo[id][Level])*2;
	
	if(NeedPlayerExp(id) < nxtexp)
	{
		nxtexp = NeedPlayerExp(id);
	}
	GivePlayerExp(id, nxtexp);
	return 1;
}

stock GivePlayerExp(playerid, exp)
{
	if(exp > 0)
	{
		new expamount = NeedPlayerExp(playerid);
		if(PlayerInfo[playerid][Vip])
		{
			exp = exp*2;
		}

		PlayerInfo[playerid][Exp] += exp;

		new mistr[128];
	    format(mistr, sizeof(mistr), "УРОВЕНЬ:%d ~n~ ОПЫТ:%d/%d ~n~ ОА:%d ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ОПЫТ +%d", PlayerInfo[playerid][Level], PlayerInfo[playerid][Exp], expamount, PlayerInfo[playerid][Points], exp);
	    TextDrawSetString(PlayerInfo[playerid][MainInfo],mistr);
	    TextDrawBackgroundColor(PlayerInfo[playerid][MainInfo],0xFF0000AA);
	    TextDrawShowForPlayer(playerid, PlayerInfo[playerid][MainInfo]);
	    SetPVarInt(playerid, "GetExpTime", gettime()+3);
	    mysql_player_update_int(playerid, "Exp", PlayerInfo[playerid][Exp]);
    }
    return 1;
}

stock NeedPlayerExp(playerid)
{
	new nxtlevel = PlayerInfo[playerid][Level];
	new expamount = nxtlevel*110;
	return expamount;
}

stock GetLimitMoney(playerid)
{
	new limit;
	if(!PlayerInfo[playerid][Vip])
	{
		limit = 20000000;
	} else {
		limit = 40000000;
	}
	return limit;
}

stock GetLimitBank(playerid)
{
	new limit;
	if(!PlayerInfo[playerid][Vip])
	{
		limit = 40000000;
	} else {
		limit = 80000000;
	}
	return limit;
}

stock GivePlayerVip(playerid, day)
{
	new string[128], date[3], time[3];
	if(PlayerInfo[playerid][VipTime])
	{
		new vipe = PlayerInfo[playerid][VipTime]-gettime();
		PlayerInfo[playerid][VipTime] = gettime() + vipe + day*86400;//2678400 с - 31 день
	} else {
		PlayerInfo[playerid][VipTime] = gettime() + day*86400;
    }
	if(day > 20)
	{
		PlayerInfo[playerid][Vip] = VIP_FOREVER;
		format(string, sizeof(string), "Игрок {%s}%s [%d]{FF0000} приобрёл Vip НАВСЕГДА", PlayerInfo[playerid][ColorNick], PlayerInfo[playerid][Name], playerid);
		SendClientMessageToAll(0xFF0000AA, string);
	}
	else
	{
		PlayerInfo[playerid][Vip] = VIP_NOT_FOREVER;
		gmtime(PlayerInfo[playerid][VipTime], date[2], date[1], date[0], time[0], time[1], time[2], SERVER_GMT);
		format(string, sizeof(string), "Игрок {%s}%s [%d]{FF0000} приобрёл Vip", PlayerInfo[playerid][ColorNick], PlayerInfo[playerid][Name],playerid);
		SendClientMessageToAll(0xFF0000AA, string);
   		format(string,sizeof(string),"Время окончания Vip %02d.%02d.%02d в %02d:%02d:%02d, это время можно посмотреть в статистике",date[0], date[1], date[2], time[0], time[1], time[2]);
    	SendClientMessage(playerid,0xFF0000AA,string);
	}
	mysql_player_update_int(playerid, "Vip", PlayerInfo[playerid][Vip]);
	mysql_player_update_int(playerid, "VipTime", PlayerInfo[playerid][VipTime]);
	return 1;
}

stock SaveData(playerid)
{
    PlayerInfo[playerid][dataPos] = 1;
    GetPlayerPos(playerid, PlayerInfo[playerid][dataPosX], PlayerInfo[playerid][dataPosY], PlayerInfo[playerid][dataPosZ]);
    PlayerInfo[playerid][dataWorld] = GetPlayerVirtualWorld(playerid);
    PlayerInfo[playerid][dataInt] = GetPlayerInterior(playerid);
    return 1;
}

stock SpectatePlayer(playerid, specid)
{
    if(PlayerInfo[playerid][JailTime]) return SendClientMessage(playerid,COLOR_GREY,"Ты в тюрьме и не можешь использовать эту команду!");
	if(!IsPlayerConnected(specid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока не существует");
    if(!PlayerInfo[specid][Logged]) return SendClientMessage(playerid,CGRAY,"Игрок не залогинился");
    if(PlayerInfo[specid][SpecOn] == 1) return SendClientMessage(playerid,COLOR_GREY,"Игрок сам наблюдает за кем то");
    SaveData(playerid);
    TogglePlayerSpectating(playerid,1);
   	new pstate = GetPlayerState(specid);
	new vehicleid = GetPlayerVehicleID(specid);
    SetPlayerInterior(playerid,GetPlayerInterior(specid));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specid));
	if(pstate == PLAYER_STATE_DRIVER || pstate == PLAYER_STATE_PASSENGER)
	{
		PlayerSpectateVehicle(playerid,vehicleid);
	}else{
		PlayerSpectatePlayer(playerid,specid);
	}
	PlayerInfo[playerid][SpecOn] = 1;
	PlayerInfo[playerid][SpecUP] = 0;
	SetPVarInt(playerid, "SpecID", specid);
	return 1;
}

stock SpecPlayerOff(playerid)
{
	GameTextForPlayer(playerid, "~w~Наблюдения отключено", 2000, 3);
	TogglePlayerSpectating(playerid,0);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetCameraBehindPlayer(playerid);
	PlayerInfo[playerid][SpecOn] = 0;
	PlayerInfo[playerid][SpecUP] = 0;
	SpawnPlayer(playerid);
	return 1;
}

stock SpecPrev(playerid)
{
	for(new i=GetPVarInt(playerid, "SpecID");i>=0;i--)
	{
		if(i < 0)
		{
			i = 1000-1;
			continue;
		}
		if(i == GetPVarInt(playerid, "SpecID") || PlayerInfo[i][SpecOn] == 1 || i == playerid || !IsPlayerConnected(i) || !PlayerInfo[i][Logged]) continue;
		SpectatePlayer(playerid, i);
		break;
	}
}

stock SpecNext(playerid)
{
	for(new i=GetPVarInt(playerid, "SpecID");i<=GetPlayerPoolSize();i++)
	{
		if(i == 1000-1)
		{
			i = -1;
			continue;
		}
		if(i == GetPVarInt(playerid, "SpecID") || PlayerInfo[i][SpecOn] == 1 || i == playerid || !IsPlayerConnected(i) || !PlayerInfo[i][Logged]) continue;
		SpectatePlayer(playerid, i);
		break;
	}
}

stock LoadPlayerTD(playerid)
{
	PlayerInfo[playerid][MainInfo] = TextDrawCreate(609, 100,"УРОВЕНЬ:100 ~n~ ОПЫТ:0/110 ~n~ ОА:0");
	TextDrawAlignment(PlayerInfo[playerid][MainInfo],3);
	TextDrawBackgroundColor(PlayerInfo[playerid][MainInfo],0x00358721);
	TextDrawFont(PlayerInfo[playerid][MainInfo],2);
	TextDrawLetterSize(PlayerInfo[playerid][MainInfo],0.289999, 1.1999998);
	TextDrawColor(PlayerInfo[playerid][MainInfo],0xFFFFFFff);
	TextDrawSetOutline(PlayerInfo[playerid][MainInfo],1);
	TextDrawSetProportional(PlayerInfo[playerid][MainInfo],0);
	TextDrawSetShadow(PlayerInfo[playerid][MainInfo],1);
	
	PlayerInfo[playerid][HPinfo] = CreatePlayerTextDraw(playerid, 550.000000, 64.000000, " ");
	PlayerTextDrawFont(playerid, PlayerInfo[playerid][HPinfo], 2);
	PlayerTextDrawSetShadow(playerid, PlayerInfo[playerid][HPinfo], 1);
	PlayerTextDrawLetterSize(playerid, PlayerInfo[playerid][HPinfo], 0.490000, 1.300000);
	PlayerTextDrawColor(playerid, PlayerInfo[playerid][HPinfo], 0xFFFFFFFF);

	PlayerInfo[playerid][ARinfo] = CreatePlayerTextDraw(playerid, 550.000000, 42.000000, " ");
	PlayerTextDrawFont(playerid, PlayerInfo[playerid][ARinfo], 2);
	PlayerTextDrawSetShadow(playerid, PlayerInfo[playerid][ARinfo], 1);
	PlayerTextDrawLetterSize(playerid, PlayerInfo[playerid][ARinfo], 0.490000, 1.300000);
	PlayerTextDrawColor(playerid, PlayerInfo[playerid][ARinfo], 0xFF0000FF);
	
	PlayerInfo[playerid][LifeInfo] = TextDrawCreate(315.000000, 425.400000, "_");
    TextDrawAlignment(PlayerInfo[playerid][LifeInfo], 2);
    TextDrawFont(PlayerInfo[playerid][LifeInfo], 2);
    TextDrawSetShadow(PlayerInfo[playerid][LifeInfo], 1);
    TextDrawUseBox(PlayerInfo[playerid][LifeInfo], 1);
    TextDrawSetProportional(PlayerInfo[playerid][LifeInfo], 1);
    TextDrawBoxColor(PlayerInfo[playerid][LifeInfo], 0x00000033);
    TextDrawLetterSize(PlayerInfo[playerid][LifeInfo], 0.27,1.100000);
}

stock DestroyPlayerTD(playerid)
{
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][HPinfo]);
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][ARinfo]);
}

stock SendReport(playerid, string[])
{
    new mes[130];
	new id = GetPVarInt(playerid, "ClickPlayer");
	if(PlayerInfo[id][AdminLevel] >= 100) return SendClientMessage(playerid, COLOR_GREY , "Этот игрок администратор");
	if(GetPVarInt(playerid, "FloodReport") > gettime())
	{
		return SendClientMessage(playerid, COLOR_GREY, "Ты слишком часто отправляешь жалобы");
	}
    SendClientMessage(playerid,CLIGHTGREEN,"Ты отправил жалобу");
    format(mes,sizeof(mes),"От %s [%i] на игрока %s [%i] {"#cRED"} жалоба: {0F8CFD}%s (%i ур.)",PlayerInfo[playerid][Name],playerid, PlayerInfo[id][Name], id, string ,PlayerInfo[id][Level]);
    SendAdminMessage(100,CBLUE,mes);
    SetPVarInt(playerid, "FloodReport", gettime()+60);
	return 1;
}

stock StartVayp()
{
    new str[128];
	new housevayp;
	new clanvayp;
	new time = GetTickCount();
	printf("Запущено удаление старых данных");
    SendClientMessageToAll(0xFF0000FF, "Запущено удаление старых данных, обработка сервером займёт несколько секунд!");
    for(new h = 0; h < houseid; h++)
    {
	    if(HouseInfo[h][hOwnedID])
	    {
		    if(gettime() - HouseInfo[h][hVayp] >= GetVaypHouse(h) || !SQL::RowExists("accounts", "ID", HouseInfo[h][hOwnedID]))
			{
				new query[256];
			  	format(query,sizeof(query),"UPDATE `accounts` SET `House` = '-1', `Money` = `Money` + '%d' WHERE `Name` = '%s'", GetHouseCost(HouseInfo[h][hLevel]), HouseInfo[h][hOwner]);
			  	mysql_tquery(mysqlConnection, query, "", "");
			  	
			  	format(query,sizeof(query),"Вайп обнулил дом игрока %s номер %d, уровень дома %d", HouseInfo[h][hOwner], HouseInfo[h][hID], HouseInfo[h][hLevel]);
				Logs_Admins(gettime(), query);
			  	
				strmid(HouseInfo[h][hOwner], "None", 0, strlen("None"), 255);
			   	HouseInfo[h][hOwnedID] = 0;
			   	HouseInfo[h][hLocked] = 0;
			   	HouseInfo[h][hCostRent] = 0;
			   	HouseInfo[h][hBank] = 0;
			   	UpdateHouse(h);
				housevayp++;
			   	mysql_house_update_int(h, "hOwnedID", HouseInfo[h][hOwnedID]);
			    mysql_house_update_str(h, "hOwner", HouseInfo[h][hOwner]);
			    mysql_house_update_int(h, "hLocked", HouseInfo[h][hLocked]);
			    mysql_house_update_int(h, "hCostRent", HouseInfo[h][hCostRent]);
			    mysql_house_update_int(h, "hBank", HouseInfo[h][hBank]);
			    mysql_house_update_int(h, "hVayp", HouseInfo[h][hVayp]);
			}
	    }
    }
    for(new clan = 1; clan < clanid; clan++)
    {
	    if(ClanInfo[clan][cOwnedID])
	    {
		    for (new i = 0; i < ClanInfo[clan][cPlayers]; i++)
			{
				if(gettime() - ClanMember[clan][i][cmTimeStamp] >= 7776000 || !SQL::RowExists("accounts", "ID", ClanMember[clan][i][cmMysqlID]))//90 дней
				{
					new query[256], vaypcheck;
					if(ClanInfo[clan][cPlayers] == 1)
					{
						DeleteClan(clan);
						format(query,sizeof(query),"Вайп удалил клан %s [%s] [%d]", ClanInfo[clan][cName], ClanInfo[clan][cTag], clan);
						Logs_Admins(gettime(), query);
						vaypcheck = 1;
					}
					if(ClanMember[clan][i][cmRank] != 5)
					{
						format(query,sizeof(query),"Вайп удалил игрока %s из клана %s %s [%d]", ClanMember[clan][i][cmName], ClanInfo[clan][cName], ClanInfo[clan][cTag], clan);
						Logs_Admins(gettime(), query);
						ClanMember[clan][i][cmUniqueID] = 0;
						ClanMember[clan][i][cmMysqlID] = 0;
						format(ClanMember[clan][i][cmName], MAX_PLAYER_NAME, "", "");
						ClanMember[clan][i][cmRank] = 0;
						ClanMember[clan][i][cmTimeStamp] = 0;
						ClanInfo[clan][cPlayers] --;
						mysql_format(mysqlConnection, query,sizeof(query),"UPDATE `accounts` SET `Clan` = '0', `ClanRank` = '0' WHERE `ID` = '%d'",ClanMember[clan][i][cmMysqlID]);
						mysql_tquery(mysqlConnection, query, "", "");
						SaveClanMember(clan, i);
						vaypcheck = 1;
					}
					if(vaypcheck)
					{
						clanvayp ++;
					}
				}
			}
	    }
    }
    printf("Завершено удаление старых данных - за %d мс",GetTickCount()-time);
    format(str, sizeof(str), "Удалено домов: %d", housevayp);
    SendClientMessageToAll(0x00FF00AA, str);
    print(str);
    format(str, sizeof(str), "Удалено кланов: %d", clanvayp);
    SendClientMessageToAll(0x00FF00AA, str);
    print(str);
	return 1;
}

stock GetVaypHouse(hid)
{
	new mc;
	switch(HouseInfo[hid][hLevel])
	{
		case 1: mc = 604800;
		case 10: mc = 1209600;
		case 30: mc = 2592000;
		case 50: mc = 2592000;
		case 70: mc = 4320000;
		case 90: mc = 5184000;
		default: mc = 15552000;
	}
	return mc;
}

forward OnConnect(playerid);
public OnConnect(playerid)
{
	for(new i=0;i<100;i++) SendClientMessage(playerid,0x000000AA,"");
	for(new i;i<=GetPlayerPoolSize();i++)
    {
	    if(!IsPlayerConnected(i) || !PlayerInfo[i][Logged] || i == playerid) continue;
	    new string34[128];
	    if(PlayerInfo[i][AdminLevel] == 0)
		{
			format(string34,sizeof(string34),"Игрок %s [%d] подключился к серверу", PlayerInfo[playerid][Name], playerid);
			SendClientMessage(i,CLIGHTGREEN,string34);
		}
		if(PlayerInfo[i][AdminLevel] >= 100)
		{
			format(string34,sizeof(string34),"Игрок %s [%d] [IP:%s] подключился к серверу", PlayerInfo[playerid][Name], playerid, PlayerInfo[playerid][GetIP]);
			SendClientMessage(i,CLIGHTGREEN,string34);
		}
	}
	return 1;
}

stock GiveSpawnWeapons(playerid)
{
	ResetPlayerWeapons(playerid);
    for(new i = 0; i < 11; i++)
	{
		if(PlayerInfo[playerid][Weapon][i] != 0)
		{
			GivePlayerWeapon(playerid, PlayerInfo[playerid][Weapon][i], PlayerInfo[playerid][Ammo][i]);
		}
	}
	return 1;
}

stock ShowObjectToPlayer(playerid)
{
	new string[sizeof(ObjectToPlayer)*35], msg[sizeof(ObjectToPlayer)*2], ownedobj[sizeof(ObjectToPlayer)];
	for(new i; i < sizeof(ObjectToPlayer); i++)
	{
		format(msg, sizeof(msg), "%s\n", ObjectToPlayer[i][modelName]);
		for (new o = 0; o < 6; o++)
		{
			if(PlayerInfo[playerid][ObjectID][o] == ObjectToPlayer[i][modelID]) ownedobj[i] = PlayerInfo[playerid][ObjectID][o];
		}
		if(ObjectToPlayer[i][modelID] == ownedobj[i])
		{
			format(msg, sizeof(msg), "{00FF00}%s\n", ObjectToPlayer[i][modelName]);
		}
		strcat(string, msg);
	}
	ShowPlayerDialogEx(playerid, "ObjectToPlayer", DIALOG_STYLE_LIST, "{FFFFFF}Обьекты, стоимость $500, для удаление кликни по нему", string, "Выбрать", "Назад");
	return 1;
}

DIALOG:ObjectToPlayer(playerid, response, listitem, inputtext[])
{
    if(!response) return ShowMenu(playerid, d_Other);
    new number = listitem;
    new freeslot = GetObjectFreeSlot(playerid);
    for (new i = 0; i < 6; i++)
	{
	    if(PlayerInfo[playerid][ObjectID][i] == ObjectToPlayer[number][modelID])
	    {
			RemovePlayerAttachedObject(playerid, i);
			PlayerInfo[playerid][ObjectID][i] = 0;
			ShowObjectToPlayer(playerid);
			SavePlayerObject(playerid);
			return 1;
	    }
    }
    if(!IsPlayerVip(playerid) && GetPlayerObjectCount(playerid) == 4) return SendClientMessage(playerid,CGRAY,"Максимальное количество объектов 5, для Vip 6");
    if(IsPlayerVip(playerid) && GetPlayerObjectCount(playerid) == 5) return SendClientMessage(playerid,CGRAY,"Максимальное количество объектов 6");
    if(ObjectToPlayer[number][mAutoOffsetX] == -1)
    {
	    PlayerInfo[playerid][ObjectID][freeslot] = ObjectToPlayer[number][modelID];
	    RemovePlayerAttachedObject(playerid, freeslot);
	    SetPlayerAttachedObject(playerid, freeslot, ObjectToPlayer[number][modelID], ObjectToPlayer[number][modelBone], ObjectToPlayer[number][mfOffsetX], ObjectToPlayer[number][mfOffsetY], ObjectToPlayer[number][mfOffsetZ], ObjectToPlayer[number][mfRotX], ObjectToPlayer[number][mfRotY], ObjectToPlayer[number][mfRotZ], ObjectToPlayer[number][mfScaleX], ObjectToPlayer[number][mfScaleY], ObjectToPlayer[number][mfScaleZ]);
    } else {
	    new skin = PlayerInfo[playerid][Skin];
	    new offsetx = ObjectToPlayer[number][mAutoOffsetX];
	    PlayerInfo[playerid][ObjectID][freeslot] = ObjectToPlayer[number][modelID];
	    RemovePlayerAttachedObject(playerid, freeslot);
	    SetPlayerAttachedObject(playerid, freeslot, ObjectToPlayer[number][modelID], ObjectToPlayer[number][modelBone], ObjPlayerOffsetX[skin][offsetx], ObjectToPlayer[number][mfOffsetY], ObjectToPlayer[number][mfOffsetZ], ObjectToPlayer[number][mfRotX], ObjectToPlayer[number][mfRotY], ObjectToPlayer[number][mfRotZ], ObjectToPlayer[number][mfScaleX], ObjectToPlayer[number][mfScaleY], ObjectToPlayer[number][mfScaleZ]);
    }
    ShowObjectToPlayer(playerid);
    SavePlayerObject(playerid);
	return 1;
}

stock GetPlayerObjectCount(playerid)
{
	new count = -1;
	for (new i = 0; i < 6; i++)
	{
		if(PlayerInfo[playerid][ObjectID][i] != 0)
		{
			count ++;
		}
	}
	return count;
}

stock GetObjectFreeSlot(playerid)
{
	new count = 0;
	for (new i = 0; i < 6; i++)
	{
		if(PlayerInfo[playerid][ObjectID][i] == 0)
		{
			count = i;
			break;
		}
	}
	return count;
}

stock SetObjectToPlayer(playerid)
{
	if(GetPlayerObjectCount(playerid) != -1)
	{
		for (new i = 0; i < 6; i++)
		{
			if(PlayerInfo[playerid][ObjectID][i] != 0)
			{
				new number;
				for(new o; o < sizeof(ObjectToPlayer); o++)
				{
					if(PlayerInfo[playerid][ObjectID][i] == ObjectToPlayer[o][modelID])
					{
						number = o;
						break;
					}
				}
				RemovePlayerAttachedObject(playerid, i);
				if(ObjectToPlayer[number][mAutoOffsetX] == -1)
			    {
				    SetPlayerAttachedObject(playerid, i, ObjectToPlayer[number][modelID], ObjectToPlayer[number][modelBone], ObjectToPlayer[number][mfOffsetX], ObjectToPlayer[number][mfOffsetY], ObjectToPlayer[number][mfOffsetZ], ObjectToPlayer[number][mfRotX], ObjectToPlayer[number][mfRotY], ObjectToPlayer[number][mfRotZ], ObjectToPlayer[number][mfScaleX], ObjectToPlayer[number][mfScaleY], ObjectToPlayer[number][mfScaleZ]);
			    } else {
				    new skin = PlayerInfo[playerid][Skin];
				    new offsetx = ObjectToPlayer[number][mAutoOffsetX];
				    SetPlayerAttachedObject(playerid, i, ObjectToPlayer[number][modelID], ObjectToPlayer[number][modelBone], ObjPlayerOffsetX[skin][offsetx], ObjectToPlayer[number][mfOffsetY], ObjectToPlayer[number][mfOffsetZ], ObjectToPlayer[number][mfRotX], ObjectToPlayer[number][mfRotY], ObjectToPlayer[number][mfRotZ], ObjectToPlayer[number][mfScaleX], ObjectToPlayer[number][mfScaleY], ObjectToPlayer[number][mfScaleZ]);
			    }
		    }
		}
	}
	return 1;
}

stock CreateOrderVehicle(playerid, vehid)
{
	new Float:pos[4];
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0xFFFF00AA, "Ты должен быть не в здании!");
	if(GetPVarInt(playerid, "FloodCar2") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь вызвать машину, подожди немного");
	if(vehid < 400 || vehid > 611) return SendClientMessage(playerid, 0xAFAFAFAA, "Эта модель не существует");
	if(IsOrderVeh(vehid)) return SendClientMessage(playerid, 0xAFAFAFAA, "Эта модель транспорта недоступна");
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);

	new orderveh = PlayerInfo[playerid][OrderVeh];
	if(orderveh != INVALID_VEHICLE_ID)
	{
		VehicleInfo[orderveh][vID] = orderveh;
		VehicleInfo[orderveh][vHealth] = 1000.0;
		VehicleInfo[orderveh][vLock] = 0;
		VehicleInfo[orderveh][vType] = 0;
		VehicleInfo[orderveh][vOwner] = INVALID_PLAYER_ID;
		VehicleInfo[orderveh][vGodMode] = 0.0;
		Update3DTextLabelText(VehicleInfo[orderveh][vText],0x00FF0099," ");
		DestroyVehicle(orderveh);
	}

	PlayerInfo[playerid][OrderVeh] = AddStaticVehicleEx(vehid, pos[0] + 2.5, pos[1], pos[2] + 2.5, 0.0, random(128), random(128), -1);
	orderveh = PlayerInfo[playerid][OrderVeh];
	SetVehicleNumberPlate(PlayerInfo[playerid][OrderVeh], PlayerInfo[playerid][carPlate]);
	SetVehicleToRespawn(PlayerInfo[playerid][OrderVeh]);
	LinkVehicleToInterior(PlayerInfo[playerid][OrderVeh],GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(PlayerInfo[playerid][OrderVeh],GetPlayerVirtualWorld(playerid));
	VehicleInfo[orderveh][vID] = orderveh;
	VehicleInfo[orderveh][vHealth] = 1000;
	VehicleInfo[orderveh][vType] = 1;
	VehicleInfo[orderveh][vOwner] = playerid;
	UpdateVehicle(PlayerInfo[playerid][OrderVeh]);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject(playerid,1,330,6);
	SetTimerEx("ClearPhone",2000,false,"i",playerid);
	SetPVarInt(playerid, "FloodCar2", gettime()+5);
	return 1;
}

forward ClearPhone(playerid);
public ClearPhone(playerid)
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	SetTimerEx("ClearPhone2",2000,false,"i",playerid);
	return 1;
}

forward ClearPhone2(playerid);
public ClearPhone2(playerid)
{
	RemovePlayerAttachedObject(playerid,1);
	return 1;
}

forward RespawnVehicle(vehicleid);
public RespawnVehicle(vehicleid)
{
	SetVehicleToRespawn(vehicleid);
	for(new i;i<=GetPlayerPoolSize();i++)
	{
		if(!IsPlayerConnected(i) && !PlayerInfo[i][Logged])  continue;
	    if(vehicleid == PlayerInfo[i][carGUID])
	    {
	        SpawnPlayerCar(i);
			break;
	    }
	}
}

cmd:car(playerid, params[])
{
	if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID) return SendClientMessage(playerid, 0xAFAFAFAA, "Ты не владеешь хатой!");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0xFFFF00AA, "Ты должен быть не в здании!");
	new Float:pos[4];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	SpawnPlayerCar(playerid, 1, pos[0] + 2.5, pos[1], pos[2] + 2.5, pos[3]);
    return 1;
}
alias:car("машину");

stock DestroyPlayerCar(playerid)
{
	if(PlayerInfo[playerid][carGUID] != INVALID_VEHICLE_ID)
	{
		new ownercar = PlayerInfo[playerid][carGUID];
		PlayerInfo[playerid][carGUID] = INVALID_VEHICLE_ID;
		VehicleInfo[ownercar][vID] = ownercar;
		VehicleInfo[ownercar][vHealth] = 1000.0;
		VehicleInfo[ownercar][vLock] = 0;
		VehicleInfo[ownercar][vType] = 0;
		VehicleInfo[ownercar][vOwner] = INVALID_PLAYER_ID;
		VehicleInfo[ownercar][vGodMode] = 0.0;
		Update3DTextLabelText(VehicleInfo[ownercar][vText],0x00FF0099," ");
		DestroyObject(PlayerInfo[playerid][carObjID][0]);
		DestroyObject(PlayerInfo[playerid][carObjID][1]);
		DestroyObject(PlayerInfo[playerid][carObjID][2]);
		DestroyObject(PlayerInfo[playerid][carObjID][3]);
		PlayerInfo[playerid][carObjID][0] = -1;
		PlayerInfo[playerid][carObjID][1] = -1;
		PlayerInfo[playerid][carObjID][2] = -1;
		PlayerInfo[playerid][carObjID][3] = -1;
		DestroyVehicle(ownercar);
	}
	return 1;
}

stock SpawnPlayerCar(playerid, type = 0, Float: x = 0.0, Float: y = 0.0, Float: z = 0.0, Float: a = 0.0)
{
	if(PlayerInfo[playerid][House] == INVALID_HOUSE_ID) return 1;
	new house = PlayerInfo[playerid][House];
	DestroyPlayerCar(playerid);
	if(type == 0) PlayerInfo[playerid][carGUID] = CreateVehicle(PlayerInfo[playerid][carModel],HouseInfo[house][hCarX],HouseInfo[house][hCarY],HouseInfo[house][hCarZ],HouseInfo[house][hCarA],PlayerInfo[playerid][carColor][0], PlayerInfo[playerid][carColor][1], 0);
	if(type == 1) PlayerInfo[playerid][carGUID] = CreateVehicle(PlayerInfo[playerid][carModel],x,y,z,a,PlayerInfo[playerid][carColor][0], PlayerInfo[playerid][carColor][1], 0);
	SetVehicleToRespawn(PlayerInfo[playerid][carGUID]);
	LinkVehicleToInterior(PlayerInfo[playerid][carGUID], 0);
	SetVehicleVirtualWorld(PlayerInfo[playerid][carGUID], 0);
	SetVehicleNumberPlate(PlayerInfo[playerid][carGUID], PlayerInfo[playerid][carPlate]);
	ChangeVehiclePaintjob(PlayerInfo[playerid][carGUID], PlayerInfo[playerid][carPaintjob]);
	for (new i = 0; i < MAX_VEHICLE_COMPONENTS; i++)
	{
		if(PlayerInfo[playerid][carComponent][i] != 0) AddVehicleComponent(PlayerInfo[playerid][carGUID], PlayerInfo[playerid][carComponent][i]);
	}
	new ownercar = PlayerInfo[playerid][carGUID];
	VehicleInfo[ownercar][vID] = ownercar;
	VehicleInfo[ownercar][vHealth] = 1000;
	SetVehicleHealth(PlayerInfo[playerid][carGUID], 1000);
	VehicleInfo[ownercar][vType] = 2;
	VehicleInfo[ownercar][vOwner] = playerid;
	if(type == 0)
	{
		VehicleInfo[ownercar][vLock] = 1;
		ToggleCarLock(PlayerInfo[playerid][carGUID], 1);
	}
	UpdateVehicle(PlayerInfo[playerid][carGUID]);
	LoadCarObject(playerid);
	return 1;
}

stock UpdateVehicle(vehicleid)
{
	new string[128];
	new damagetext[64];
	new playerid = VehicleInfo[vehicleid][vOwner];
	if(VehicleInfo[vehicleid][vHealth]/10 <= 99)
	{
		format(damagetext, sizeof(damagetext),"{%s}HP: %.0f  ",HealthBar(VehicleInfo[vehicleid][vHealth]/10), VehicleInfo[vehicleid][vHealth]/10);
	}
    if(VehicleInfo[vehicleid][vGodMode] != 0.0)
    {
	    format(damagetext, sizeof(damagetext),"{00FFFF}HP: %.0f  ",VehicleInfo[vehicleid][vHealth]);
    }
    if(VehicleInfo[vehicleid][vType] == 2)
    {
	    if(VehicleInfo[vehicleid][vLock] == 1)
		{
			format(string, sizeof(string),"{00FF00}%sВладелец:%s  {FFFF00}[Закрыто]",damagetext,PlayerInfo[playerid][Name]);
		}
		else
		{
			format(string, sizeof(string),"{00FF00}%sВладелец:%s  {00FF00}[Открыто]",damagetext,PlayerInfo[playerid][Name]);
		}
	}
    else if(VehicleInfo[vehicleid][vType] == 1)
    {
	    if(VehicleInfo[vehicleid][vLock] == 1)
		{
			format(string, sizeof(string),"{00FF00}%sЗаказчик:%s  {FFFF00}[Закрыто]",damagetext,PlayerInfo[playerid][Name]);
		}
		else
		{
			format(string, sizeof(string),"{00FF00}%sЗаказчик:%s  {00FF00}[Открыто]",damagetext,PlayerInfo[playerid][Name]);
		}
	}
	else if(VehicleInfo[vehicleid][vType] == 0)
	{
	    format(string, sizeof(string),"{%s}HP: %.0f", HealthBar(VehicleInfo[vehicleid][vHealth]/10),VehicleInfo[vehicleid][vHealth]/10);
	    if(VehicleInfo[vehicleid][vLock] == 1)
		{
			format(string, sizeof(string),"{00FF00}%s{FFFF00}[Закрыто]",damagetext);
		}
	}
	Attach3DTextLabelToVehicle(VehicleInfo[vehicleid][vText], vehicleid, 0.0, 0.0, 0.0);
	Update3DTextLabelText(VehicleInfo[vehicleid][vText],0x00FF0099,string);
}

stock ToggleCarLock(vehicleid, status)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, status, bonnet, boot, objective);
	VehicleInfo[vehicleid][vLock] = status;
	return true;
}

stock IsOrderVeh(modelid)
{
    switch(modelid)
    {
        case 425, 432, 435, 441, 449, 450, 465, 501, 564, 569, 570, 584, 590, 591, 594, 606, 607, 608, 610, 611: return 1;
    }
    return 0;
}

stock HealthBar(Float: hp)
{
	new hex[24];
	if(hp >= 95)
	{
		hex = "00FF00";
	}
	if(hp >= 70 && hp < 95)
	{
		hex = "00FF00";
	}
	if(hp >= 50 && hp < 70)
	{
		hex = "FCFF00";
	}
	if(hp >= 30 && hp < 50)
	{
		hex = "FFA200";
	}
	if(hp < 30)
	{
		hex = "FF0000";
	}
	return hex;
}

forward PlayerTeleport(playerid, Float: x, Float: y , Float: z, Float: a, interior, vw);
public PlayerTeleport(playerid, Float: x, Float: y , Float: z, Float: a, interior, vw)
{
	if(PlayerInfo[playerid][Logged])
	{
	    Streamer_UpdateEx(playerid, x, y, z);
		SetPlayerPos(playerid, x, y, z);
		SetPlayerVirtualWorld(playerid, vw);
		SetPlayerInterior(playerid, interior);
		AntiSpawnKill(playerid);
	}
	return 1;
}

/*public OnCheatDetected(suspectid, code, targetid)
{
	new str[128];
    switch(code)
    {
	    case AC_GODMODE_1,AC_GODMODE_2:
	    {
            format(str, sizeof(str), "Игрока %s [%d] убил античит на бессмертие",PlayerInfo[suspectid][Name], suspectid);
  			SendClientMessage(targetid,0x00FF00AA,str);
  			SendClientMessage(suspectid,0xFF0000AA,"Тебя убил античит на бессмертие");
  			SetPlayerHealth(suspectid, 0);
	    }
	    case AC_HEALTH:
	    {
		    SendClientMessage(suspectid,-1,"Вы были кикнуты по подозрению в читерстве \"пополнение здоровья\"");
		    Kick(suspectid);
	    }
	    case AC_ARMOUR:
	    {
		    SendClientMessage(suspectid,-1,"Вы были кикнуты по подозрению в читерстве \"пополнение брони\"");
			Kick(suspectid);
	    }
	    case AC_WEAPON:
	    {
		    SendClientMessage(suspectid,-1,"Вы были кикнуты по подозрению в читерстве \"чит на оружие\"");
			Kick(suspectid);
	    }
	    case AC_AMMO:
	    {
		    SendClientMessage(suspectid,-1,"Вы были кикнуты по подозрению в читерстве \"чит на патроны\"");
			Kick(suspectid);
	    }
	    case AC_AMMO_INF:
	    {
		    SendClientMessage(suspectid,-1,"Вы были кикнуты по подозрению в читерстве \"бесконечные патроны\"");
			Kick(suspectid);
	    }
	}
	return 1;
}*/

new Domains[][] =
{
	"net", "org", "su", "com", "ru", "рф", "tv", "de",
	"ws", "kz", "info", "tel", "tm", "in", "by", "pw",
	"eu", "uk", "tk", "pro", "biz", "fm", "pl", "ua"
};

stock CheckAdv(text[])
{
	new strip[32][16], s1, s2, r;
    for(new l = strlen(text); s1 < l; s1++)
    {
	    if('0' <= text[s1] <= '9')
	    {
			s2 = s1 + 1;
		    while('0' <= text[s2] <= '9' && strlen(text[s2])) s2++;
		    strmid(strip[r], text, s1, s2);
		    if(strval(strip[r]) < 256) r++;
		    if(r >= sizeof strip) break;
			s1 = s2;
		}
	}
	if(r > 3)
	{
		for(new z, p; z < r; z++)
		{
			while((s1 = strfind(text, strip[z], true)) != -1)
			{
				for(p = s1, s2 = s1 + strlen(strip[z]); p < s2; p++) return 1;
			}
		}
	}
	for(new i = sizeof(Domains) - 1, l = strlen(text), f, d; i != -1; --i)
	{
		f = -1;
		d = strlen(Domains[i]);
		while((f = strfind(text, Domains[i], true, f + 1)) > 0)
		{
			switch(text[f - 1])
			{
			case 0..64, 91..96, 123..127:
				{
					if(f + d >= l) return 1;
					switch(text[f + d])
					{
						case 0..64, 91..96, 123..127: return 1;
					}
				}
			}
		}
	}
	return 0;
}

stock AntiFlood(playerid, text[])
{
	new interval = 2, sovpal, strlens = strlen(text);
	if((GetTickCount() - GetPVarInt(playerid, "FloodTime")) <= interval*1000)
	{
		SendClientMessage(playerid,CRED,"Подожди пару секунд, чтобы писать в чат");
		return 1;
	}
	if(strlens == GetPVarInt(playerid, "FloodTextSize")) sovpal++;
	if(text[0] == GetPVarInt(playerid, "FloodTextMsg1")) sovpal++;
	if(strlens > 2)
	{
	    if(text[strlens-1] == GetPVarInt(playerid, "FloodTextMsg2")) sovpal++;
	}
	if(sovpal > 1)
	{
		SendClientMessage(playerid,CRED,"Повторное сообщение");
		return 1;
	}
	SetPVarInt(playerid, "FloodTextSize", strlens);
	SetPVarInt(playerid, "FloodTextMsg1", text[0]);
	SetPVarInt(playerid, "FloodTime", GetTickCount());
	if(strlens > 2) SetPVarInt(playerid, "FloodTextMsg2", text[strlens-1]);
	return 0;
}

stock ReplaceChat(playerid, text[])
{
	for(new i;i<strlen(text);i++)
	{
		if(PlayerInfo[playerid][Vip])
		{
			if(text[i] == '(' && text[i+7] == ')')
			{
				new col[7];
				format(col, sizeof(col), "%s",text[i+1]);
				LowerToUpper(col);
				if(IsValidHEX(col))
				{
					text[i] = '{';
					text[i+7] = '}';
				}
			}
		}
 	}
	return true;
}

stock ReplaceDialog(inputtext[], bool:color = false)
{
	for(new i; inputtext[i];i++)
	{
	    if(inputtext[i] == '%') inputtext[i] = '#';
	    if(inputtext[i] == '{' && inputtext[i+7] == '}')
	    {
			new col[7];
			format(col, sizeof(col), "%s",inputtext[i+1]);
			LowerToUpper(col);
			if(IsValidHEX(col))
			{
				inputtext[i] = '(';
				inputtext[i+7] = ')';
			}
	    }
	    if(color == true)
	    {
		    if(inputtext[i] == '(' && inputtext[i+7] == ')')
			{
				new col[7];
				format(col, sizeof(col), "%s",inputtext[i+1]);
				LowerToUpper(col);
				if(IsValidHEX(col))
				{
					inputtext[i] = '{';
					inputtext[i+7] = '}';
				}
			}
	    }
    }
	return true;
}

forward Timer_FlyMode(playerid);
public Timer_FlyMode(playerid)
{
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);
		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
		{
		    MoveCamera(playerid);
		}
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud;
		noclipdata[playerid][lrold] = lr;
	}
	return 1;
}

stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;
    if(lr < 0)
	{
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT; 	// Up & Left key pressed
		else if(ud > 0) direction = MOVE_BACK_LEFT; 	// Back & Left key pressed
		else            direction = MOVE_LEFT;          // Left key pressed
	}
	else if(lr > 0) 	// Right pressed
	{
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;  // Up & Right key pressed
		else if(ud > 0) direction = MOVE_BACK_RIGHT;     // Back & Right key pressed
		else			direction = MOVE_RIGHT;          // Right key pressed
	}
	else if(ud < 0) 	direction = MOVE_FORWARD; 	// Up key pressed
	else if(ud > 0) 	direction = MOVE_BACK;		// Down key pressed
	return direction;
}

stock MoveCamera(playerid)
{
	new Float:FV[3], Float:CP[3];
	GetPlayerCameraPos(playerid, CP[0], CP[1], CP[2]);
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;
	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CP, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}

stock GetNextCameraPosition(move_mode, Float:CP[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CP[0]+OFFSET_X;
			Y = CP[1]+OFFSET_Y;
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CP[0]-OFFSET_X;
			Y = CP[1]-OFFSET_Y;
			Z = CP[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CP[0]-OFFSET_Y;
			Y = CP[1]+OFFSET_X;
			Z = CP[2];
		}
		case MOVE_RIGHT:
		{
			X = CP[0]+OFFSET_Y;
			Y = CP[1]-OFFSET_X;
			Z = CP[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CP[0]+(-OFFSET_X - OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y + OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CP[0]+(-OFFSET_X + OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y - OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CP[0]+(OFFSET_X  - OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  + OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CP[0]+(OFFSET_X  + OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  - OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
	}
}

stock CancelFlyMode(playerid)
{
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	KillTimer(FlyModeTimer[playerid]);
	return 1;
}

stock FlyMode(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);

	TogglePlayerSpectating(playerid, true);
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	FlyModeTimer[playerid] = SetTimerEx("Timer_FlyMode", 250, 1, "d", playerid);
	return 1;
}

stock IsPlayerFlyMode(playerid)
{
	if(GetPVarType(playerid, "FlyMode")) return true;
	return false;
}

// ----------------------Система Deathmatch-------------------------------------
forward DM_OnGameModeInit();
public DM_OnGameModeInit()
{
	new tmp[256];
	new fileName[256];
	new t[10][50];
	new File:f;
	for(new i=0; i<MAX_DM_MAP; i++)
	{
		format(fileName, sizeof(fileName), DMCoordPatch, i);
		if(!fexist(fileName)) break;
		f = fopen(fileName);
		//dmBounds
		if(!ReadConf(f, tmp, 256, 3))
		{
            fclose(f);
			break;
		}
		StripNewLine(tmp);
		split(tmp, t, ',');
		DMBounds[i][0] = floatstr(t[0]);
		DMBounds[i][1] = floatstr(t[1]);
		DMBounds[i][2] = floatstr(t[2]);
		DMBounds[i][3] = floatstr(t[3]);
		//координаты
		for(new k=0; k<MAX_DM_SPAWN; k++)
		{
			if(!ReadConf(f, tmp, 256, 3)) break;
            StripNewLine(tmp);
		    split(tmp, t, ',');
		    DMCoords[i][k][dmCoordX] = floatstr(t[0]);
		    DMCoords[i][k][dmCoordY] = floatstr(t[1]);
		    DMCoords[i][k][dmCoordZ] = floatstr(t[2]);
		    DMCoords[i][k][dmCoordAng] = floatstr(t[3]);
		    DMCoordNum[i]++;
		}
		fclose(f);
	}
	for(new i=0; i<MAX_DM_MAP; i++)
	{
		format(fileName, sizeof(fileName), DMPickupPatch, i);
		if(!fexist(fileName)) break;
		f = fopen(fileName);
		//координаты
		for(new k=0; k<MAX_DM_SPAWN; k++)
		{
			if(!ReadConf(f, tmp, 256, 3)) break;
            StripNewLine(tmp);
		    split(tmp, t, ',');
		    DMCoords[i][k][dmPickupGun] = strval(t[0]);
		    DMCoords[i][k][dmPickupX] = floatstr(t[1]);
		    DMCoords[i][k][dmPickupY] = floatstr(t[2]);
		    DMCoords[i][k][dmPickupZ] = floatstr(t[3]);
		    DMPickupNum[i]++;
		}
		fclose(f);
	}
	return 1;
}

cmd:dmsobr(playerid, params[])
{
	TeleportPlayerToDM(playerid, DEATHMATCH_DROPGUN);
    return 1;
}
alias:dmsobr("дмсобр");

stock TeleportPlayerToDM(playerid, dmid)
{
	if(PlayerInfo[playerid][InDM] == dmid)
	{
		KillTimer(PlayerInfo[playerid][TimerDM]);
		PlayerInfo[playerid][TimerDM] = SetTimerEx("DM_SpawnPlayer",10000,true,"ii",playerid, 0);
		return SendClientMessage(playerid,0xFF0000FF,"Через 10 секунд ты появишься заного");
	}
	if(DMInfo[dmid][dmPlayers] == MAX_PLAYERS_DM) return SendClientMessage(playerid,0xff0000ff, "ДМ переполнен, зайди на другой.");
	PlayerInfo[playerid][InDM] = dmid;
	DMInfo[dmid][dmPlayers] ++;
	SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,VW_DM+dmid);
	ResetPlayerWeapons(playerid);
	SetPlayerWorldBounds(playerid,20000.0000, -20000.0000, 20000.0000, -20000.0000);
	if(dmid == DEATHMATCH_DROPGUN)
	{
		DMInfo[dmid][dmWinCheck] = 1;
		GiveDMWeapon(playerid, dmid, 0, 23, 100);
	}
	if(DMInfo[dmid][dmWinCheck] == 1)
	{
		if(DMInfo[dmid][dmStartDM] == 0)
		{
			DMInfo[dmid][dmMap] = minrandom(0, sizeof(DMCoords));
			DMInfo[dmid][dmStartDM] = 1;
			
			for(new k=0; k<DMPickupNum[dmid]; k++)
			{
				new pickupid, zone = DMInfo[dmid][dmMap];
				new modelid = GetWeaponModel(DMCoords[zone][k][dmPickupGun]);
				if(modelid)
				{
				    CreatePickup(modelid,1,DMCoords[zone][k][dmPickupX], DMCoords[zone][k][dmPickupY], DMCoords[zone][k][dmPickupZ], VW_DM+dmid);
				    DMDropWeapon[pickupid] = DMCoords[zone][k][dmPickupGun];
			    }
		    }
		}
	}
	DM_SpawnPlayer(playerid, 1);
	SendClientMessage(playerid,0xFF0000FF,"Можно выбраться при застревании зайдя на этот, дм повторно не выходя с него");
	return 1;
}

stock ExitPlayerFromDM(playerid)
{
	if(PlayerInfo[playerid][InDM] != INVALID_DEATHMATCH_ID)
	{
		new dmid = PlayerInfo[playerid][InDM];
		SetPlayerWorldBounds(playerid,20000.0000, -20000.0000, 20000.0000, -20000.0000);
		ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		DMInfo[dmid][dmPlayers] --;
		if(DMInfo[dmid][dmPlayers] == 0)
		{
			DMInfo[dmid][dmStartDM] = 0;
		}
		KillTimer(PlayerInfo[playerid][TimerDM]);
		PlayerInfo[playerid][InDM] = INVALID_DEATHMATCH_ID;
		SpawnPlayer(playerid);
	}
	return 1;
}

stock GiveDMWeapon(playerid, dmid, slotid, weaponid, ammo)
{
	if(slotid >= MAX_WEAP_DM-1) slotid = MAX_WEAP_DM;
	if(slotid <= 0) slotid = 0;
	ResetPlayerWeapons(playerid);
	DMInfo[dmid][dmWeaps][slotid] = weaponid;
	DMInfo[dmid][dmAmmo][slotid] = ammo;
	for(new k=0; k<MAX_WEAP_DM; k++)
	{
		if(DMInfo[dmid][dmWeaps][k] != 0)
		{
			GivePlayerWeapon(playerid, DMInfo[dmid][dmWeaps][k], DMInfo[dmid][dmAmmo][k]);
		}
	}
	return 1;
}

forward DM_SpawnPlayer(playerid, spawn);
public DM_SpawnPlayer(playerid, spawn)
{
	new dmid = PlayerInfo[playerid][InDM];
	if(dmid != INVALID_DEATHMATCH_ID)
	{
		if(spawn)
		{
			if(dmid == DEATHMATCH_DROPGUN)
			{
				GiveDMWeapon(playerid, dmid, 0, 23, 100);
			}
		} else {
			SendClientMessage(playerid,0xFF0000FF,"Ты появился в другой точке");
		}
		new randomzone = DMInfo[dmid][dmMap];
		new randomize = minrandom(0, DMCoordNum[randomzone]);
		PlayerTeleport(playerid, DMCoords[randomzone][randomize][dmCoordX],DMCoords[randomzone][randomize][dmCoordY],DMCoords[randomzone][randomize][dmCoordZ], DMCoords[randomzone][randomize][dmCoordAng], 0, VW_DM+dmid);
		SetPlayerWorldBounds(playerid,DMBounds[randomzone][0], DMBounds[randomzone][1], DMBounds[randomzone][2], DMBounds[randomzone][3]);
		OffAntiSpawnKill(playerid);
		PlayerInfo[playerid][HouseEnter] = INVALID_HOUSE_ID;
		KillTimer(PlayerInfo[playerid][TimerDM]);
	}
	return 1;
}

forward DM_OnPlayerDeath(playerid, killerid, reason);
public DM_OnPlayerDeath(playerid, killerid, reason)
{
	return 1;
}

stock SendInDMMessage(dmid, color, const msg[])
{
	for(new i;i<=GetPlayerPoolSize();i++)
	{
	    if(!IsPlayerConnected(i) && !PlayerInfo[i][Logged]) continue;
	    if((PlayerInfo[i][InDM] == dmid) && (PlayerInfo[i][InDM] != INVALID_DEATHMATCH_ID))
		{
			SendClientMessage(i,color,msg);
		}
	}
}
// ------------------Система Deathmatch КОНЕЦ ----------------------------------
